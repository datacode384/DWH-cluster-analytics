CREATE TABLE IF NOT EXISTS ${hiveconf:database}.${hiveconf:table_name}  (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', partnerid  INTEGER COMMENT 'id of VpVT (Das Field partnerId identifiziert die versicherte Person, zu der diese Row ein', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', rollenid  INTEGER COMMENT 'id of VpVT (Identifikation einer Partnerrolle in einer Partner-Vertrags-BeziehungConstrain', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', vptypid  SMALLINT COMMENT 'Eindeutige Identifizierung eines Typs von versicherter Person. Es gibt die Typen VP1(1) un', gebdat  TIMESTAMP COMMENT 'Das Geburtsdatum ist der Termin, an dem die natuerliche Person geboren wurde.', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', toddat  TIMESTAMP COMMENT 'Datum, an dem eine natuerliche Person gestorben ist.', heidat  TIMESTAMP COMMENT 'Datum, an dem eine natuerliche Person geheiratet hat.', todmelddat  TIMESTAMP COMMENT 'Meldedatum des Todesfalls', berufid  INTEGER COMMENT 'Eindeutiger Bezeichner fuer einen Beruf. (In der Standard Implementierung enthaelt dieses ', partkey  SMALLINT COMMENT 'the partition key', pflegestufe  INTEGER COMMENT 'Die konkrete Pflegestufe die bei der VP fuer den VT aktuell vorliegt', zustandvp  INTEGER COMMENT 'Zustand der versicherten Person (tot, pflegebeduerftig, usw.)', zustandvpseit  TIMESTAMP COMMENT 'Der Termin seit welchem sich die versicherte Person in ihrem aktuellen Zustand (zustandVP)', c_eaberechmethode  INTEGER COMMENT 'Vertragsindividuelle Berechnungsmethode fuer das Eintrittsalter', lstgledat  TIMESTAMP COMMENT 'Datum des letzten Leistungsfalles', eakalk  INTEGER COMMENT 'Kalkulatorisches Eintrittsalter der versicherten Person', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die in einem LV versicherten Personen werden den Vertragsteilen zugeordnet.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenVersicherte-Person-VT: Mit Hilfe dieser Entitaet werden die in einem LV-Vertrag versicher' PARTITIONED BY (tenant_name  STRING COMMENT 'Name of the tenant.', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet;