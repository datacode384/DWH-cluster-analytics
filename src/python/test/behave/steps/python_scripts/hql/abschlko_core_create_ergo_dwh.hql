CREATE TABLE IF NOT EXISTS  ${hiveconf:database}.${hiveconf:table_name}  (abschlko_sid  STRING COMMENT 'Surrgate Key', abschlko_id  STRING COMMENT 'Foreign Key Key table', bearbnw_sid  STRING COMMENT 'Foreign Key', lv_sid  STRING COMMENT 'Foreign Key', vb_sid  STRING COMMENT 'Foreign Key', vt_sid  STRING COMMENT 'Foreign Key', bearbnw_id  STRING COMMENT 'Foreign Key', lv_id  STRING COMMENT 'Foreign Key', vb_id  STRING COMMENT 'Foreign Key', vt_id  STRING COMMENT 'Foreign Key', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', jahr  SMALLINT COMMENT 'id of Abschlko (Angabe einer Jahreszahl (JJJJ))', monat  SMALLINT COMMENT 'id of Abschlko (Angabe eines Monats)', akdk  DECIMAL(2,2) COMMENT 'Abschlusskosten, die aus der Deckungsrueckstellung entnommen werden.', abkbtr  DECIMAL(2,2) COMMENT 'Abschlusskosten, die aus Beitraegen zu finanzieren sind', aktyp  INTEGER COMMENT 'id of Abschlko (Abschlusskostentyp)', akvol  DECIMAL(2,2) COMMENT 'Abschlusskostenvolumen', partkey  SMALLINT COMMENT 'the partition key', beginn  TIMESTAMP COMMENT 'id of Abschlko (Beginndatum des Abschlusskostenvektors)', diff_hash  STRING COMMENT 'Hash for comparing records for inserts.', record_hash  STRING COMMENT 'Hash for all non technical attributes.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.', primary key(aktyp, bearbidabg, beginn, jahr, lvid, monat, vbid, vtid) disable novalidate ) COMMENT 'abschlko' PARTITIONED BY (tenant_name  STRING COMMENT 'Name of the tenant.', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet;