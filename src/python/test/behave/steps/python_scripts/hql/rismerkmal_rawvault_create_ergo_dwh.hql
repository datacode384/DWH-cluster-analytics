CREATE TABLE IF NOT EXISTS ${hiveconf:database}.${hiveconf:table_name}  (partnerid  INTEGER COMMENT 'id of VpVT (Das Field partnerId identifiziert die versicherte Person, zu der diese Row ein', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', rollenid  INTEGER COMMENT 'id of VpVT (Identifikation einer Partnerrolle in einer Partner-Vertrags-BeziehungConstrain', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', rismerkmalid  INTEGER COMMENT 'id of RisMerkmal (Das Feld risMerkmalId identifiziert das Risikomerkmal, zu dem diese Zeil', partkey  SMALLINT COMMENT 'the partition key', rismerkmaldouble  DECIMAL(2,2) COMMENT 'Gibt den Wert des Risikomerkmals als Double an.', rismerkmalinteger  INTEGER COMMENT 'Gibt den Wert des Risikomerkmals als Integer an.', rismerkmaldate  TIMESTAMP COMMENT 'Gibt den Wert des Risikomerkmals als Date an.', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Risiko-Merkmale sind personenbezogene Merkmale zur Einschaetzung des Risikos.' PARTITIONED BY (tenant_name  STRING COMMENT 'Name of the tenant.', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet;