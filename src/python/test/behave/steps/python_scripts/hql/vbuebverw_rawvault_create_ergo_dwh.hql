CREATE TABLE IF NOT EXISTS ${hiveconf:database}.${hiveconf:table_name}  (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', vsys  INTEGER COMMENT 'id of VbUebVerw (Systematik fuer die Ueberschuss - Verwendung: ratierlich oder Stichtag)', partkey  SMALLINT COMMENT 'the partition key', verans  DECIMAL(2,2) COMMENT 'Erreichter Stand des Ansammlungsguthabens.', zutverans  DECIMAL(2,2) COMMENT 'Ausweisung unterjaehriger Zuteilungen ins Ansammlungsguthaben (zur Vermeidung von Zinseszi', zutkorvs  DECIMAL(2,2) COMMENT 'Vorschuessig zugeteilte, aber noch nicht verwendete Ueberschussanteile.', zutkorns  DECIMAL(2,2) COMMENT 'Nachschuessig zugeteilte, aber noch nicht verwendete Ueberschussanteile. Nachschuessige Ue', zutkorvs_bewres  DECIMAL(2,2) COMMENT 'Vorschuessig zugeteilte, aber noch nicht verwendete ueberschussanteile aus BWR', zutkorns_bewres  DECIMAL(2,2) COMMENT 'Nachschuessig zugeteilte, aber noch nicht verwendete ueberschussanteile aus BWR', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Tabelle vbUebVerw wird bei vor- oder nachschuessigen UeberschussVerwendungen mit Ueberschusswerten auf Bausteinebene gefuellt und dient als Basis fuer die bisherige Tabelle skUebVerw auf Vertragsteilebene.' PARTITIONED BY (tenant_name  STRING COMMENT 'Name of the tenant.', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet;