CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_business_event (business_event_id  STRING, dtype  STRING, completion_timestamp  TIMESTAMP, date_insert  TIMESTAMP, date_update  TIMESTAMP, due_date  TIMESTAMP, gevo_id  STRING, init_timestamp  TIMESTAMP, originator_bp_id  STRING, revocation_deadline  TIMESTAMP, status_details  STRING, version  INTEGER, e2e_process_id  STRING, input_chanel_id  INTEGER, be_reason_status_id  INTEGER, business_event_status_id  INTEGER, business_event_type_id  INTEGER, dwh_counter  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_complaint (complaint_id  STRING, complaint_external_reference  STRING, complaint_init_timestamp  TIMESTAMP, complaint_note  STRING, complaint_success  SMALLINT, complaint_top_flag  SMALLINT, complaint_value  STRING, date_insert  TIMESTAMP, date_update  TIMESTAMP, version  INTEGER, business_event_id  STRING, complaint_initiator_type_id  INTEGER, complaint_owner_type_id  INTEGER, reason_details_type_id  INTEGER, reason_type_id  INTEGER, complaint_status_id  INTEGER, success_evaluation_type_id  INTEGER, complaint_type_id  INTEGER, complaint_variant_type_id  INTEGER, complaint_hcm_type_id  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_complaint_relation (general_relation_id  STRING, relation_type_id  INTEGER, source_id  STRING, target_id  STRING, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_e2e_process (e2e_process_id  STRING, date_insert  TIMESTAMP, date_update  TIMESTAMP, version  INTEGER, e2e_process_status_id  INTEGER, e2e_process_type_id  INTEGER, dwh_counter  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_e2e_process_timeslot (e2e_process_timeslot_id  STRING, date_insert  TIMESTAMP, date_update  TIMESTAMP, e2e_process_timeslot_details  STRING, e2e_process_timeslot_end  TIMESTAMP, e2e_process_timeslot_result  STRING, e2e_process_timeslot_start  TIMESTAMP, version  INTEGER, e2e_business_event_id  STRING, e2e_process_id  STRING, e2e_package_entry_id  STRING, e2e_process_timeslot_status_id  INTEGER, input_chanel_id  INTEGER, dwh_counter  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_external_key (external_key_id  BIGINT, date_insert  TIMESTAMP, date_update  TIMESTAMP, external_key_value  STRING, version  INTEGER, archive_document_id  STRING, business_event_id  STRING, general_document_id  STRING, package_entry_id  STRING, external_key_type  INTEGER, dwh_counter  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_general_process_step (gen_process_step_id  STRING, dtype  STRING, date_insert  TIMESTAMP, date_update  TIMESTAMP, version  INTEGER, process_instance_id  STRING, gen_process_step_type_id  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_generic_status (id  INTEGER, type  STRING, status  SMALLINT, value  STRING, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_generic_type (id  INTEGER, type  STRING, status  SMALLINT, value  STRING, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_input_document (general_document_id  STRING, ims_id  STRING, processing_timestamp  TIMESTAMP, receive_timestamp  TIMESTAMP, returned_document_id  STRING, scan_timestamp  TIMESTAMP, sender_id  STRING, envelope_id  STRING, input_chanel_id  INTEGER, input_document_type_id  INTEGER, dwh_counter  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_output_document (general_document_id  STRING, generation_timestamp  TIMESTAMP, print_timestamp  TIMESTAMP, receiver_id  STRING, send_timestamp  TIMESTAMP, business_event_id  STRING, e2e_timeslot_id  STRING, output_chanel_id  INTEGER, output_document_status_id  INTEGER, output_document_type_id  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_package_entry (package_entry_id  STRING, dtype  STRING, date_insert  TIMESTAMP, date_update  TIMESTAMP, dwh_counter  INTEGER, external_correlation_id  STRING, version  INTEGER, package_id  STRING, package_entry_status_id  INTEGER, package_entry_type_id  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_package (package_id  STRING, completion_timestamp  TIMESTAMP, creation_timestamp  TIMESTAMP, date_insert  TIMESTAMP, date_update  TIMESTAMP, dwh_counter  INTEGER, external_package_correlation_id  STRING, fetch_timestamp  TIMESTAMP, receive_timestamp  TIMESTAMP, send_timestamp  TIMESTAMP, stack_id  STRING, version  INTEGER, package_status_id  INTEGER, package_type_id  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_processing_goal (processing_goal_id  STRING, date_insert  TIMESTAMP, date_update  TIMESTAMP, originator  STRING, version  INTEGER, e2e_process_timeslot_id  STRING, general_process_step_id  STRING, processing_goal_status_id  INTEGER, processing_goal_type_id  INTEGER, dwh_counter  INTEGER, creation_timestamp  TIMESTAMP, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.bpms_bem_process_instance (process_instance_id  STRING, date_insert  TIMESTAMP, date_update  TIMESTAMP, process_instance_external_id  STRING, process_instance_parent_id  STRING, process_instance_completion_timestamp  TIMESTAMP, process_instance_init_timestamp  TIMESTAMP, version  INTEGER, business_event_id  STRING, e2e_process_timeslot_id  STRING, process_instance_status_id  INTEGER, process_instance_type_id  INTEGER, processing_mode_id  INTEGER, dwh_counter  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');

CREATE TABLE IF NOT EXISTS  raw_zone.par_bnka (gueltig_ab  TIMESTAMP COMMENT '', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.', z_logsys_src  INTEGER COMMENT 'Source', z_ini_tims  INTEGER COMMENT 'Timestamp initial transfer', z_upd_tims  INTEGER COMMENT 'Timestamp last updated transfer', z_cre_dida  INTEGER COMMENT 'Timestamp initial import DiDa', z_upd_dida  INTEGER COMMENT 'Timestamp update import DiDa', mandt  STRING COMMENT 'Mandant', banks  STRING COMMENT 'Länderschlüssel der Bank', bankl  STRING COMMENT 'Bankschlüssel', erdat  STRING COMMENT 'Datum, an dem der Satz hinzugefügt wurde', ernam  STRING COMMENT 'Name des Sachbearbeiters, der das Objekt hinzugefügt hat', banka  STRING COMMENT 'Name des Geldinstituts', provz  STRING COMMENT 'Region (Bundesstaat, Bundesland, Provinz, Grafschaft)', stras  STRING COMMENT 'Straße und Hausnummer', ort01  STRING COMMENT 'Ort', swift  STRING COMMENT 'SWIFT/BIC  für internationale Zahlungen', bgrup  STRING COMMENT 'Bankengruppe (Bankennetz)', xpgro  STRING COMMENT 'Postbank-Girokonto', loevm  STRING COMMENT 'Löschkennzeichen', bnklz  STRING COMMENT 'Bankleitzahl')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.par_but000 (wirksam_ab  TIMESTAMP COMMENT '', gueltig_ab  TIMESTAMP COMMENT '', z_upd_dida  INTEGER COMMENT 'Timestamp update import DiDa', z_cre_dida  INTEGER COMMENT 'Timestamp initial import DiDa', z_upd_tims  INTEGER COMMENT 'Timestamp last updated transfer', z_ini_tims  INTEGER COMMENT 'Timestamp initial transfer', z_logsys_src  INTEGER COMMENT 'Source', source_system  INTEGER COMMENT 'Name of source system.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', partner  STRING COMMENT 'Geschäftspartnernummer', type  STRING COMMENT 'Geschäftspartnertyp', bpkind  STRING COMMENT 'Geschäftspartnerart', bu_group  STRING COMMENT 'Geschäftspartnergruppierung', bpext  STRING COMMENT 'Geschäftspartnernummer im externen System', bu_sort1  STRING COMMENT 'Suchbegriff 1 zum Geschäftspartner', bu_sort2  STRING COMMENT 'Suchbegriff 2 zum Geschäftspartner', source  STRING COMMENT 'Datenherkunftsarten', title  STRING COMMENT 'Anredeschlüssel', xdele  STRING COMMENT 'Zentrale Archiviervormerkung', xblck  STRING COMMENT 'Zentrale Sperre für den Geschäftspartner', augrp  STRING COMMENT 'Berechtigungsgruppe', title_let  STRING COMMENT 'Briefanrede', bu_logsys  STRING COMMENT 'Logisches System', contact  STRING COMMENT 'Geschäftspartner: Kontakterlaubnis', not_released  STRING COMMENT 'Kennzeichen: Nicht freigegeben', not_lg_competent  STRING COMMENT 'Kennzeichen: nicht geschäftsfähig')  PARTITIONED BY (client  STRING COMMENT 'Mandant', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.par_but020 (source_system  INTEGER COMMENT 'Name of source system.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', partner  STRING COMMENT 'Geschäftspartnernummer', addrnumber  STRING COMMENT 'Adressnummer', xdfadr  STRING COMMENT 'Auswahl: Adresse ist Standardadresse', adext  STRING COMMENT 'Adressnummer im fremden System', nation  STRING COMMENT 'Versionskennzeichen für internationale Adressen', guid  STRING COMMENT 'UUID in Character-Darstellung', move_addr  STRING COMMENT 'Nummer der Umzugszieladresse bei Adressumzügen', date_from  STRING COMMENT 'Datum obsolet', address_guid  STRING COMMENT 'GUID einer Geschäftspartneradresse', addr_valid_from  DECIMAL COMMENT 'Gültigkeitsbeginn einer Geschäftspartneradresse', addr_valid_to  DECIMAL COMMENT 'Gültigkeitsende einer Geschäftspartneradresse', addr_move_date  DECIMAL COMMENT 'Umzugsdatum bei Adressumzügen')  PARTITIONED BY (client  STRING COMMENT 'Mandant', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.par_but021 (wirksam_ab  TIMESTAMP COMMENT '', z_upd_dida  INTEGER COMMENT 'Timestamp update import DiDa', z_cre_dida  INTEGER COMMENT 'Timestamp initial import DiDa', z_upd_tims  INTEGER COMMENT 'Timestamp last updated transfer', z_ini_tims  INTEGER COMMENT 'Timestamp initial transfer', z_logsys_src  INTEGER COMMENT 'Source', source_system  INTEGER COMMENT 'Name of source system.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', partner  STRING COMMENT 'Geschäftspartnernummer', adr_kind  STRING COMMENT 'Adressart', addrnumber  STRING COMMENT 'Adressnummer', xdfadu  STRING COMMENT 'Kennzeichen: Standardadresse einer Adressverwendung')  PARTITIONED BY (client  STRING COMMENT 'Mandant', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.par_but0bk (source_system  INTEGER COMMENT 'Name of source system.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', partner  STRING COMMENT 'Geschäftspartnernummer', bkvid  STRING COMMENT 'Bankverbindungs-ID', banks  STRING COMMENT 'Länderschlüssel der Bank', bankl  STRING COMMENT 'Bankschlüssel', bankn  STRING COMMENT 'Bankkontonummer', bkont  STRING COMMENT 'Bankenkontrollschlüssel', bkref  STRING COMMENT 'Referenzangabe zur Bankverbindung', koinh  STRING COMMENT 'Name des Kontoinhabers', bkext  STRING COMMENT 'Bankverbindungs-ID im externen System', xezer  STRING COMMENT 'Kennzeichen: Einzugsermächtigung', accname  STRING COMMENT 'Bezeichnung der Bankverbindung', move_bkvid  STRING COMMENT 'ID der Zielverbindung bei Bankverbindungswechsel  (BP)')  PARTITIONED BY (mandt  STRING COMMENT 'Mandant', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.par_but0id (source_system  INTEGER COMMENT 'Name of source system.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', partner  STRING COMMENT 'Geschäftspartnernummer', type  STRING COMMENT 'Identifikationsart', idnumber  STRING COMMENT 'Identifikationsnummer', institute  STRING COMMENT 'Zuständige Institution für die Identifikationsnummer', entry_date  STRING COMMENT 'Datum des Eintrags für die Identifikationsnummer', valid_date_from  STRING COMMENT 'Gültigkeitsbeginn der Identifikationsnummer', valid_date_to  STRING COMMENT 'Gültigkeitsende der Identifikationsnummer', country  STRING COMMENT 'Land, in der eine ID-Nummer gültig ist bzw. vergeben wurde', region  STRING COMMENT 'Region (Bundesstaat, Bundesland, Provinz, Grafschaft)', idnumber_guid  STRING COMMENT 'GUID einer Geschäftspartner Identifikationsnummer', bp_eew_but0id  STRING COMMENT 'Dummyfunktion in der Laenge 1')  PARTITIONED BY (client  STRING COMMENT 'Mandant', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.par_tiban (source_system  INTEGER COMMENT 'Name of source system.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', banks  STRING COMMENT 'Länderschlüssel der Bank', bankl  STRING COMMENT 'Bankschlüssel', bankn  STRING COMMENT 'Bankkontonummer', bkont  STRING COMMENT 'Bankenkontrollschlüssel', iban  STRING COMMENT 'IBAN (International Bank Account Number)', valid_from  STRING COMMENT 'Gültigkeitsbeginn der IBAN', ernam  STRING COMMENT 'Name des Sachbearbeiters, der das Objekt hinzugefügt hat', erdat  STRING COMMENT 'Datum, an dem der Satz hinzugefügt wurde', tabname  STRING COMMENT 'Tabellenname, 16-stellig', tabkey  STRING COMMENT 'Herkunft der IBAN: Schlüssel der Tabelle der Bankverbindung')  PARTITIONED BY (mandt  STRING COMMENT 'Mandant', process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');

CREATE TABLE IF NOT EXISTS  raw_zone.pas_abschlko (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', jahr  SMALLINT COMMENT 'id of Abschlko (Angabe einer Jahreszahl (JJJJ))', monat  SMALLINT COMMENT 'id of Abschlko (Angabe eines Monats)', akdk  DECIMAL(16,2) COMMENT 'Abschlusskosten, die aus der Deckungsrueckstellung entnommen werden.', abkbtr  DECIMAL(16,2) COMMENT 'Abschlusskosten, die aus Beitraegen zu finanzieren sind', aktyp  INTEGER COMMENT 'id of Abschlko (Abschlusskostentyp)', akvol  DECIMAL(16,2) COMMENT 'Abschlusskostenvolumen', partkey  SMALLINT COMMENT 'the partition key', beginn  TIMESTAMP COMMENT 'id of Abschlko (Beginndatum des Abschlusskostenvektors)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'abschlko' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_aktstand (lvid  STRING, bearbidlast  INTEGER, vtidlast  SMALLINT, vbidlast  SMALLINT, genlast  SMALLINT COMMENT 'Letzte vergebene Generationsnummer am VB', sbidlast  INTEGER COMMENT 'Letzte vergebene Kennzeichnung einer Sammelbewegung (=sbId)', ktobewidlast  INTEGER COMMENT 'Nummer der letzten durchgefuehrten Kontobewegung', zahlempfid  INTEGER COMMENT 'Nummer des zuletzt erzeugten Zahlungsempfaengers', beguenstid  SMALLINT, ktobelegidlast  INTEGER COMMENT 'ktoBelegIdLast', sntnwidlast  INTEGER COMMENT 'Letzte vergebene Identifikation fuer Schnittstellennachweise', mahnidlast  INTEGER COMMENT 'Die ID der zuletzt erzeugten Mahnung in einem Vertrag.', doknwidlast  INTEGER, drittidlast  INTEGER, eaklauselidlast  INTEGER COMMENT 'Die letzte vergebene laufende Nummer in eaKlausel (lfdnr).', schwebeidlast  INTEGER COMMENT 'Die letzte vergebene Identifikation fuer Schwebenachweise.', hvgruppeidlast  SMALLINT, regidlast  INTEGER COMMENT 'Die letzte vergebene laufende Nummer in steuAuftReg', kindidlast  INTEGER COMMENT 'Die letzte vergebene kindId', schichtidlast  INTEGER COMMENT 'Die letzte vergebene schichtId', regidbtglast  INTEGER COMMENT 'Die letzte vergebene regIdBtgLast', tabselbv  BIGINT COMMENT 'Performanceoptimierung: In der Tabelle AKTSTAND wird in einem Bitfeld die Informationen ge', teilrentenidlast  INTEGER COMMENT 'Die letzte vergebene laufende Nummer in SteuWerteRenteAuft', prvidlast  INTEGER COMMENT 'Die letzte vergebene laufende Nummer in prv', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_anrewerte (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, wird hier der KENN-Bearbeitungsnachweis des stornierenden', tbbtgsum  DECIMAL(16,2) COMMENT 'bisherige Tarifbeitragsumme', zbbtgsum  DECIMAL(16,2) COMMENT 'bisherige Zahlbeitragsumme', zbbtgsum_vt  DECIMAL(16,2) COMMENT 'bisherige Zahlbeitragsumme auf Ebene Vertragsteil.', akztbalt  DECIMAL(16,2) COMMENT 'alte gezillmerte Abschlusskosten fuer den Tarifbeitrag', aknztbalt  DECIMAL(16,2) COMMENT 'alte nicht-gezillmerte Abschlusskosten fuer den Tarifbeitrag', akztbfin  DECIMAL(16,2) COMMENT 'finanzierte gezillmerte Abschlusskosten fuer den Tarifbeitrag', aknztbfin  DECIMAL(16,2) COMMENT 'finanzierte nicht-gezillmerte Abschlusskosten fuer den Tarifbeitrag', tbanrwert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer den Tarifbeitrag', anrfvm  DECIMAL(16,2) COMMENT 'Anrechenbares Fondsvermoegen', anruebg  DECIMAL(16,2) COMMENT 'Anrechenbares Ueberschussguthaben', anrsga  DECIMAL(16,2) COMMENT 'Anrechenbare Schlussgewinnanwartschaft', anr_ke  DECIMAL(16,2) COMMENT 'Anrechenbarer Kapitalertrag.', minbtgsumakt  DECIMAL(16,2) COMMENT 'Bisherige Mindestbeitragsumme fuer Hybridprodukte', akkalkvol  DECIMAL(16,2) COMMENT 'Kalkulatorisches abschlusskostenvolumen bei FLV oder Hybrid', akbilvol  DECIMAL(16,2) COMMENT 'Bilanzielles Abschlusskostenvolumen bei FLV oder Hybrid', akkalkfin  DECIMAL(16,2) COMMENT 'finanzierte kalkulatorische Abschlusskosten bei FLV oder Hybrid', akbilfin  DECIMAL(16,2) COMMENT 'finanzierte bilanzielle Abschlusskosten bei FLV oder Hybrid', anrstoab  DECIMAL(16,2) COMMENT 'anrechenbarer Stornoabschlag', anrbews  DECIMAL(16,2) COMMENT 'anrechenbare Bewertungssumme Provision', anrbewprov  DECIMAL(16,2) COMMENT 'anrechenbare Bezugsgroesse fuer Provision', anrzusak  DECIMAL(16,2) COMMENT 'zusaetzlich anrechenbare Abschlusskosten', vorvtrnr  STRING COMMENT 'Vorvertragsnummer', forderunganrwerte  DECIMAL(16,2) COMMENT 'Gesamtforderung aus anrechenbaren Werten.', wirkbeginn  TIMESTAMP COMMENT 'Termin, ab dem der neue Vertragsstand fachlich wirksam ist.', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde', sbid  INTEGER COMMENT 'id of AnreWerte (Eindeutige Kennzeichnung einer Sammelbewegung)', akmrkwvol  DECIMAL(16,2) COMMENT 'Abschlusskostenvolumen fuer Garantiereserve als Bezugsgroesse fuer Mindestrueckkaufswerte', akmrkwfin  DECIMAL(16,2) COMMENT 'Finanzierte Abschlusskosten fuer Garantiereserve als Bezugsgroesse fuer Mindestrueckkaufsw', zillbanrwert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer den Zillmerreservebeitrag', nettobanrwert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer den Nettoreservebeitrag', antkostenversausgl  DECIMAL(16,2) COMMENT 'Anteilige Kosten fuer den Zugang Versorgungsausgleich bei einer internen Teilung', steubeg  TIMESTAMP COMMENT 'Massgeblicher Beginntermin fuer die Berechnung der Kapitalertragsteuer', anruebbr  DECIMAL(16,2) COMMENT 'Anrechenbare Basisgroesse fuer die Beteiligung an Ueberschuessen aus Bewertungsreserven', versausglbeschldat  TIMESTAMP COMMENT 'Datum des Beschlusses des Familiengerichts zu einem Versorgungsausgleich.', akzkalkbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der klassischen gezillmerten kalkulatorischen AK', aknzkalkbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der klassischen nicht gezillmerten kalkulatorischen AK', akzbilbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der klassischen gezillmerten bilanziellen AK', aknzbilbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der klassischen nicht gezillmerten bilanziellen AK', akkalkfondsfin  DECIMAL(15,2) COMMENT 'Finanzierte fondsspezifische kalkulatorische Abschlusskosten, falls Abschlusskosten auf ei', akkalkfondsvol  DECIMAL(15,2) COMMENT 'Fondsspezifisches kalkulatorisches Abschlusskostenvolumen bei kontenbasierten Tarifen, fal', steuzuschlaggezsum  DECIMAL(15,2) COMMENT 'Am Vertragsteil anrechenbare Summe der Steuer auf Praemien (d.h. bisher gezahlte Summe) al', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Diese Tabelle enthaelt die anrechenbaren Werte, die auf VT-Ebene gefuehrt werden muessen. Diese werden bei der Policierung und technischen Aenderungen verarbeitet.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_antrabw (antrabwid  INTEGER COMMENT 'id of AntrAbw (Intern vergebene Nummer, der die Antragsabweichung innerhalb der LV identif', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', antrabwart  INTEGER COMMENT 'Art der Abweichung vom Antrag', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'antrAbw' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_bearbnwext (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', kzprovstorno  INTEGER COMMENT 'Kennzeichen, ob ein Vermittler seine aufgrund dieser Bearbeitung erhaltene Provision im Fa', meldedat  TIMESTAMP COMMENT 'Datum, zu dem eine Meldung eingeht.', bearbidref  INTEGER COMMENT 'Das Field bearbIdRef identifiziert zusammen mit dem Field lvId den Vertragsstand, von dem ', spmig  DECIMAL(16,2) COMMENT 'Der Sparbeitrag, der aus einer Migration stammt', vorglstnetto  DECIMAL(15,2) COMMENT 'Vorgegebene Nettoleistung nach Abzug der Steuer.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'bearbNwExt' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_bearbnw (lvid  STRING, bearbid  INTEGER, schrittid  INTEGER, bearbeiterid  STRING, bearbdat  TIMESTAMP, wirkbeginn  TIMESTAMP, feinbeginn  SMALLINT, wirkende  TIMESTAMP, feinende  SMALLINT, bearbidsto  INTEGER, bearbdatsto  TIMESTAMP, jobid  STRING, bearbgrdid  INTEGER, meldedat  TIMESTAMP, wterm  TIMESTAMP, bearbzeit  STRING, schwebeid_4augen  INTEGER, bearbeiterid_4a  STRING, partkey  SMALLINT, businessprocessid  INTEGER, kbfauftragsid  STRING, bearbkategorie  STRING, kzilisrelevant  SMALLINT, bearbresult  SMALLINT, bearbidabg  INTEGER, c_aussteuerung  INTEGER, insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_beguenst (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', beguenstid  SMALLINT COMMENT 'id of Beguenst (generically derived from Beguenst)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bezrechtid  INTEGER COMMENT 'Kennzeichen zur Beschreibung des Bezugsrechtstyps (Standard, ...).', bezartid  INTEGER COMMENT 'Kennzeichen fuer die Zuordnung des Bezugsrechts zu Risikoarten (Erleben, Tod, ...).', widerrufid  INTEGER COMMENT 'Kennzeichen fuer die Qualitaet eines Bezugsrechts (widerruflich, unwiderruflich, ...)', inhalt  STRING COMMENT 'Dieses Attribut beinhaltet einen Freitext variabler Laenge.', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', rangbezugsrecht  INTEGER COMMENT 'Rangfolge des personenbezogenen Bezugsrechts; eindeutig innerhalb eines Vertrages.', partnerid  INTEGER COMMENT 'Das Field partnerId identifiziert denPartner, zu dem diese Row eine Aussage macht.', anteil  DECIMAL(9,6) COMMENT 'Anteil in % des jeweiligen Bezugsrechts.', c_wirkdatbez  TIMESTAMP COMMENT 'Wirksamkeitsdatum fuer Bezugsrechte', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Rows in table beguenst repraesentieren beguenstigte Personen eines Vertrages. Es wird festgelegt, wer fuer die jeweilige Leistungsart der Beguenstigte ist.Schluesselwerte legen fest, wer fuer die jeweilige Leistungsart (Tod, Erleben, ...) der Beguens' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_beitragsvektor (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', jahr  SMALLINT COMMENT 'id of Beitragsvektor (Angabe einer Jahreszahl (JJJJ))', monat  SMALLINT COMMENT 'id of Beitragsvektor (Angabe eines Monats)', zb  DECIMAL(16,2) COMMENT 'Der je Ratenzahlungsabschnitt (tariflich) faellige Zahlbeitrag. Eine Beitragsreduktion aus', tag  SMALLINT COMMENT 'Tag im Monat', btgtyp  INTEGER COMMENT 'id of Beitragsvektor (Beitragstyp (Laufender Beitrag, Zuzahlung, Zulage))', partkey  SMALLINT COMMENT 'the partition key', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'beitragsvektor' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_btgauftreg (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', hvgruppeid  SMALLINT COMMENT 'id of HvGruppe (generically derived from HvGruppe)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', regid  INTEGER COMMENT 'id of BtgAuftReg (Die letzte vergebene laufende Nummer in btgAuftReg)', fintyp  INTEGER COMMENT 'Finanzierungstyp', betragsart  INTEGER COMMENT 'Betragsart: z.B. Beitrag, Auszahlung, Abfluss, Zufluss', gueab  TIMESTAMP COMMENT 'Finanzierungstyp und Aufteilungsformel wird erst ab Zeitpunkt ""Gueltig ab"" beruecksichti', guebis  TIMESTAMP COMMENT 'Finanzierungstyp und Aufteilungsformel wird zu Zeitpunkten ab dem ""Gueltig bis"" - Datum ', auftlgformel  SMALLINT COMMENT 'Formel / Formelauspraegung als Verweis auf die Aufteilungsregel', paranteil  DECIMAL(16,3) COMMENT 'Parameter Anteil fuer Aufteilungsformel', paruntergr  DECIMAL(16,3) COMMENT 'Parameter Untergrenze fuer Aufteilungsformel', parobergr  DECIMAL(16,3) COMMENT 'Parameter Obergrenze fuer Aufteilungsformel', zahlweise  INTEGER COMMENT 'Zahlweise, auf die sich die in parOberGr (und parUnterGr) eingegebenen Werte beziehen', kzerlaub  INTEGER COMMENT 'Kennzeichen fuer Aenderungserlaubnis', partkey  SMALLINT COMMENT 'the partition key', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Entitaet beinhaltet die Regelungen zur Aufteilung des Vermoegens (d.h. der verschiedenen Beitrags- und Vermoegenswerte) auf die einzelnen Finanzierungstypen. Die Regeln werden pro HvGruppe gefuehrt.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_drittrecht (partnerid  INTEGER COMMENT 'id of PartnerLV (Das Field partnerId identifiziert denPartner, zu dem diese Row eine Aussa', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', drittid  INTEGER COMMENT 'id of Drittrecht (generically derived from Drittrecht)', bearbid  INTEGER COMMENT 'the historical version number (logId)', drittrechtid  INTEGER COMMENT 'Identifizierung eines zulaessiges Drittrechts', beginn  TIMESTAMP COMMENT 'Termin, ab dem die Vereinbarung wirksam wird.', drittrechtbez  STRING COMMENT 'Referenz, auf die sich das Drittrecht bezieht, z.B. Aktenzeichen, Darlehensnummer oder Gru', drittrechterl  DECIMAL(16,2) COMMENT 'Betrag der Drittberechtigung beim Erleben.', drittrechttod  DECIMAL(16,2) COMMENT 'Betrag der Drittberechtigung im Todesfall.', rang  INTEGER COMMENT 'Rangfolge des Drittrechtes, eindeutig innerhalb eines Vertrages.', drittrechtartid  INTEGER COMMENT 'Art des Drittrechts', kzstschaedzession  INTEGER COMMENT 'Kennzeichen, ob eine steuerschaedliche Zession vorliegt', rollenid  INTEGER COMMENT 'id of PartnerLV (Identifikation einer Partnerrolle in einer Partner-Vertrags-Beziehung)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', abwhoehe  DECIMAL(15,2) COMMENT 'Abweichende Hoehe der Drittrechtsumme', c_klassifiz  INTEGER COMMENT 'Schluesselfeld zur Klassifizierung der Drittrechtart', c_pfaendbesdat  TIMESTAMP COMMENT 'Datumsfeld zur Erfassung des Pfaendungsbeschlussdatums', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Rows in Table drittrecht repraesentieren berechtigte Interessen Drittberechtigter (z.B. Vormund, Pfandglaeubiger, ...) an einer Leistung aus dem Vertrag. Die Wirksamkeit eines Drittrechts ist abhaengig von der Anzeige gegenueber dem VU. Waehrend der ' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_eaklausel (partnerid  INTEGER COMMENT 'id of VpVT (Das Field partnerId identifiziert die versicherte Person, zu der diese Row ein', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', rollenid  INTEGER COMMENT 'id of VpVT (Identifikation einer Partnerrolle in einer Partner-Vertrags-BeziehungConstrain', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', lfdnr  INTEGER COMMENT 'id of EaKlausel (In diesem Attribut wird eine ""laufende Nummer"" (natuerliche Zahl) gefue', klauselid  INTEGER COMMENT 'Eindeutige Identifikation einer (verschluesselbaren) Standard-Klausel zur Definition eines', klauseltext  STRING COMMENT 'Genaue Spezifikation einer E/A-Klausel, z.B. Angabe einer Erkrankung oder Funktionseinschr', partkey  SMALLINT COMMENT 'the partition key', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Ein-/Ausschluss-Klausel: Es gibt Aus- bzw. Einschluesse aufgrund medizinischer, beruflicher und sportlicher Risiken. Einschlussklausel bedeutet, dass ein bestimmtes Risiko explizit eingeschlossen wird. Fuer eine Ausschlussklausel gilt die analoge Aussage' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_garwertvorgabe (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vtid  SMALLINT COMMENT 'id of GarWertVorgabe (Identifikation des Vertragsteils)', vbid  SMALLINT COMMENT 'id of GarWertVorgabe (Identifikation des Vertragsbausteins)', guetermin  TIMESTAMP COMMENT 'id of GarWertVorgabe (Gueltigkeitstermin)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bfrsum  DECIMAL(16,2) COMMENT 'garantierte beitragsfreie Summe', bfrsum2  DECIMAL(16,2) COMMENT 'garantierte beitragsfreie Summe zur Leistung 2', rkw  DECIMAL(16,2) COMMENT 'Rueckkaufswert', verblbfr  DECIMAL(16,2) COMMENT 'Nach Rueckkauf verbliebene beitragsfreie Versicherungsleistung', lsttod  DECIMAL(16,2) COMMENT 'Leistung im Todesfall', rentfakt  DECIMAL(16,8) COMMENT 'Rentenfaktor', bfrsumstatus  INTEGER COMMENT 'gibt an, ob bfrSum belegt ist', bfrsum2status  INTEGER COMMENT 'gibt an, ob bfrSum2 belegt ist', lsterlstatus  INTEGER COMMENT 'gibt an, ob lsterl belegt ist', lsttodstatus  INTEGER COMMENT 'gibt an, ob lsttod belegt ist', rentfaktstatus  INTEGER COMMENT 'gibt an, ob rentfakt belegt ist', rkwstatus  INTEGER COMMENT 'gibt an, ob rkw belegt ist', verblbfrstatus  INTEGER COMMENT 'gibt an, ob verblbfr belegt ist', bfrstornieren  INTEGER COMMENT 'gibt an, ob bei Beitragsfreistellung storniert werden soll', lsterl  DECIMAL(16,2) COMMENT 'Leistung im Erlebensfall', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Vorgegebene Garantiewerte' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_hvgruppe (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'Das Field vtId identifiziert zusammen mit dem Field lvId denVertragsteil, zu dem diese Row', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', hvgruppeid  SMALLINT COMMENT 'id of HvGruppe (generically derived from HvGruppe)', zb  DECIMAL(16,2) COMMENT 'Der je Ratenzahlungsabschnitt (tariflich) faellige Zahlbeitrag. Eine Beitragsreduktion aus', minbtg  DECIMAL(16,2) COMMENT 'Vereinbarter Mindestbeitrag', uebverr  DECIMAL(16,2) COMMENT 'Der laufende, vorschuessig zugeteilte ueberschuss von Vertragsteilen kann zur Verrechnung ', btrabgl  DECIMAL(16,2) COMMENT 'Dient zum Abgleich zwischen vorgegebenem und errechnetem Beitrag; wird gemaess Beitragsfae', vstkk  DECIMAL(16,2) COMMENT 'In den Beitrag eingerechnete Stueckkosten, die bei laufender Beitragszahlung pro Ratenzahl', trdk  DECIMAL(16,2) COMMENT 'Die technische Rundungskorrektur dient dazu, bei der Berechnung des Zahlbeitrags die Addit', zweiink  INTEGER COMMENT 'Eindeutige Identifizierung einer Beitragszahlweise.', kzvorg  SMALLINT COMMENT 'Bestimmt die Qualitaet der Vorgabe: z.B. Vorgabe der Leistung, des Beitrags oder der Ablau', hvtypid  INTEGER COMMENT 'Hauptversicherungsgruppentyp', zustand  INTEGER COMMENT 'Es gibt keine fachlich sinnvolle Aggregation von Vertragsteil-Zustaenden auf Vertrags-Zust', hauptfaelligkeit  TIMESTAMP COMMENT 'Hauptfaelligkeit - wird produktabhaengig bestimmt - enthaelt das Jahr des Versicherungsbeg', kzteilnovation  INTEGER COMMENT 'Kennzeichen, das den Tatbestand der ""Teilnovation"" anzeigt', maxstoabsch  DECIMAL(16,2) COMMENT 'Maximaler Stornoabschlag, der abgezogen werden kann. Kann durch den SB manuell vorgegeben ', partkey  SMALLINT COMMENT 'the partition key', kzgrundzulage  INTEGER COMMENT 'Kennzeichen, ob Grundzulage eingerechnet werden soll oder nicht: 0 - Nein, 1 - Ja', pricingid  INTEGER COMMENT 'Pricing-Variante: globales Attribut zur Festlegung des Pricings (z.B. Haustarif)', beg_btgpause  TIMESTAMP COMMENT 'Beginn der Beitragspause', end_btgpause  TIMESTAMP COMMENT 'Ende der Beitragspause', vzb_vorpause  DECIMAL(16,2) COMMENT 'Beitrag vor der Beitragspause', kzwohnfoerdkto  INTEGER COMMENT 'Nach Entnahme fuer Wohnriester (unschaedlich) ist ein Wohnfoerderkonto anzulegen. Auch wen', uebwohnfoerdk  INTEGER COMMENT 'Information des VN, wohin das Wohnfoerderkonto uebertragen werden soll. Auswahlbox-Belegun', verstke  DECIMAL(16,2) COMMENT 'Betrag des steuerpflichtigen Kapitalertrages aus abgegangenen Steuerschichten, der bereits', einwilldatum  TIMESTAMP COMMENT 'Datum wann der VN seine Einwilligung zur Uebermittlung der Daten erteilt bzw. widerrufen h', vorgabewert  DECIMAL(16,2) COMMENT 'Vorgegebener Wert fuer die SST - Berechnung.', verrenttfl  DECIMAL(16,2) COMMENT 'Zu verrentende Todesfallleistung', zbanteilbeginn  DECIMAL(16,2) COMMENT 'Der anteilig faellige Zahlbeitrag zu Beginn des Vertragsteils, wenn der Zeitraum von VT-Be', zbanteilende  DECIMAL(16,2) COMMENT 'Der anteilig faellige, letzte Zahlbeitrag des Vertragsteils vor Ablauf der Beitragszahlung', tpid  STRING COMMENT 'Das Field tpId identifiziert das Teilprodukt, zu dem die HvGruppe zugeordnet werden kann.', vorg_btgoptverl  DECIMAL(16,2) COMMENT 'Vorgabewert fuer die Neukalkulation im Rahmen der optionalen Verlaengerung', gehzulberech  DECIMAL(16,2) COMMENT 'Sozialversicherungspflichtiges Vorjahresgehalt auf dessen Basis in der Modellrechnung der ', gehzulbersteig  DECIMAL(16,8) COMMENT 'Jaehrlicher Steigerungssatz fuer GehaltZulagenBerech', gehzulberbasjahr  SMALLINT COMMENT 'Jahr auf das sich GehaltZulagenBerech bezieht', kzberufeinstbonus  INTEGER COMMENT 'Kennzeichen, ob der Berufseinsteigerbonus beruecksichtigt werden soll', kzbtganpassung  INTEGER COMMENT 'Kennzeichen, ob bzw. nach welcher Regel eine Beitragsanpassung in der Modellrechnung erfol', crkid  INTEGER COMMENT 'Chance-Risiko-Klasse gemaess AltZertG', kzzulagebervn  INTEGER COMMENT 'Kennzeichnung, ob der Versicherungsnehmer mittelbar oder unmittelbar zulageberechtigt ist', kzzulagebereheg  INTEGER COMMENT 'Kennzeichnung, ob der Ehegatte mittelbar oder unmittelbar zulageberechtigt ist', eigenbtgeheg  DECIMAL(16,2) COMMENT 'Eigenbeitrag des (unmittelbar zulageberechtigten) Ehegatten, auf dessen Basis in der Model', eigenbtgbisjahr  SMALLINT COMMENT 'Jahr, bis zu dem der Eigenbeitrag des (unmittelbar zulageberechtigten) Ehegatten bezahlt w', eigenbtgehegabw  DECIMAL(15,2) COMMENT 'Abweichender Eigenbeitrag des Ehegatten in einem Jahr', eigenbtgabwjahr  SMALLINT COMMENT 'Jahr des abweichenden Eigenbeitrags des Ehegatten', btgprofil  INTEGER COMMENT 'Kennzeichen zur Identifizierung eines Beitragsprofils', btgueberz  DECIMAL(15,2) COMMENT 'ueberzahlte Beitraege. Werden erfasst in Uebertragung Rueckkauf im Rahmen von Anbieterwech', btgrueckstand  DECIMAL(15,2) COMMENT 'rueckstaendige / offene Beitraege. Werden erfasst in Uebertragung Rueckkauf im Rahmen von ', tpvarpiaid  INTEGER COMMENT '(Teil)Produktvariante zur CRK-Klassifizierung durch Produktinformationsstelle Altersvorsor', kzzuzgvb  INTEGER COMMENT 'Kennzeichen, ob eine Zuzahlung als Geringverdienerbeitrag (Gvb) zur Erlangung des bAV-Foer', kzfoerdergruppierung  INTEGER COMMENT 'relevante Foerdergruppierung zur Ermittlung des zulaessigen Maximalbeitrags (relevante Foe', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Im Rahmen der bAV koennen unterschiedliche Zahlweisen fuer Arbeitgeber (AG) und Arbeitnehmer (AN) vorgegeben werden. Die notwendigen Informationen werden pro HV bzw. in einer hvGruppe gefuehrt, die die eigentliche HV und die zugehoerigen ZV zusammenfas' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_jahreswerte (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', jahr  SMALLINT COMMENT 'id of Jahreswerte (Angabe einer Jahreszahl (JJJJ))', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', btgsumakt  DECIMAL(16,2) COMMENT 'Aktuelle Summe der im Bezugsjahr gezahlten Beitraege, aufgeteilt auf die betroffenen Vertr', btguebjahr  DECIMAL(16,2) COMMENT 'Anteil an der Beitragssumme des aktuellen Kalenderjahres, der nicht im Deckungskapital zum', zulsumakt  DECIMAL(16,2) COMMENT 'Aktuelle Summe der im Bezugsjahr gezahlten Zulagen, aufgeteilt auf die betroffenen Vertrag', rbsum  DECIMAL(16,2) COMMENT 'Summe Risikobeitrag', sbsum  DECIMAL(16,2) COMMENT 'Summe Spar- bzw. Anlagebeitrag', vwsum  DECIMAL(16,2) COMMENT 'Summe Verwaltungskosten', partkey  SMALLINT COMMENT 'the partition key', entspsum  DECIMAL(16,2) COMMENT 'Summe Entsparbetrag', zulkorrakt  DECIMAL(16,2) COMMENT 'Aktuelle Summe der im Bezugsjahr erfolgten Zulagenkorrekturen', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'In Tabelle jahreswerte werden fuer jedes Kalenderjahr Vertragsgroessen als Summenwerte analog zu einem Sammelkonto festgehalten. Es wird jeweils der aktuelle Stand geflossener Zahlungsstroeme und der Beitragsaufteilung in Risiko-/Spar-/Kostenteil gefuehr' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_jahrwerteinfofonds (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', partkey  SMALLINT COMMENT 'the partition key', fondsid  INTEGER COMMENT 'id of JahrWerteInfoFonds (Interne Kennummer eines Fonds)', monat  SMALLINT COMMENT 'id of JahrWerteInfoFonds (Angabe eines Monats)', jahr  SMALLINT COMMENT 'Angabe einer Jahreszahl (JJJJ)', fvm  DECIMAL(16,2) COMMENT 'Fondsvermoegen', fondskickback  DECIMAL(15,2) COMMENT 'Fondskickbacks im Rahmen der laufenden (Kosten-)Ueberschussbeteiligung', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Fondsspezifische Werte fuer die jaehrliche Information, die im Laufe des aktuellen Jahres gesammelt werden.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_jahrwerteinfo (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', partkey  SMALLINT COMMENT 'the partition key', foeinzausz_kum  DECIMAL(16,2) COMMENT 'Summe der Einzahlungen in Fonds im aktuellen Jahr', uebverr_kum  DECIMAL(16,2) COMMENT 'kumulierte Beitragsverrechnung im aktuellen Jahr', wterm_alt  TIMESTAMP COMMENT 'Wirksamkeitstermin der letzten Standermittlung', fvm_alt  DECIMAL(16,2) COMMENT 'Fondsvermoegen der letzten Standermittlung', res_alt  DECIMAL(16,2) COMMENT 'Reserve aus dem Bezugsvorjahr.', inkavorrat_alt  DECIMAL(16,2) COMMENT 'Inkassokostenuebertrag aus dem Bezugsvorjahr.', sueres_alt  DECIMAL(16,2) COMMENT 'Schlussueberschussreserve aus dem Bezugsvorjahr.', lstuebbr_alt  DECIMAL(16,2) COMMENT 'Leistung aus Bewertungsreserven aus dem Bezugsvorjahr.', btgsum  DECIMAL(16,2) COMMENT 'Aktuelle Summe der im Bezugsjahr gezahlten Beitraege', btguebertrag  DECIMAL(16,2) COMMENT 'Anteil an der Beitragssumme des aktuellen Kalenderjahres, der nicht im Deckungskapital zum', btguebkorr  DECIMAL(16,2) COMMENT 'Korrektur des Anteils an der Beitragssumme des aktuellen Kalenderjahres, der nicht im Deck', bearbid_alt  INTEGER COMMENT 'BearbeitungsID des Satzes aus dem Bezugsvorjahr', zuflusslues  DECIMAL(16,2) COMMENT 'Kapitalzu- bzw. abfluesse in Form von laufenden Ueberschuessen zwischen Vertragsteilen im ', dkaendlstg  DECIMAL(16,2) COMMENT 'Aenderungen im Deckungskapital durch Leistungsfaelle im Bezugsjahr', renueb_alt  DECIMAL(15,2) COMMENT 'Rentenuebertrag aus dem Bezugsvorjahr', steuzuschlag_kum  DECIMAL(15,2) COMMENT 'kumulierter Steuerzuschlag im aktuellen Jahr', btgsumgesamt  DECIMAL(15,2) COMMENT 'Summe der gezahlten Beitraege im gesamten Leben des Vertragsteils', uebverrsumgesamt  DECIMAL(15,2) COMMENT 'Summe der Beitragsverrechnungen ab Vertragsbeginn', zuzsumgesamt  DECIMAL(15,2) COMMENT 'Summe der Zuzahlungen im gesamten Leben des Vertragsteils', zulsumgesamt  DECIMAL(15,2) COMMENT 'Summe der erhaltenen Zulagen im gesamten Leben des Vertragsteils', btgsonstsumgesamt  DECIMAL(15,2) COMMENT 'Summe der sonstigen Beitraege (z.B. Anbieterwechsel) im gesamten Leben des Vertragsteils', zulkorrsumgesamt  DECIMAL(15,2) COMMENT 'Summe der Entnahmen bei Zulagenkorrekturen im gesamten Leben des Vertragsteils', rensumgesamt  DECIMAL(15,2) COMMENT 'Summe der planmaessigen Rentenzahlungen im gesamten Leben des Vertragsteils', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Werte fuer die jaehrliche Information, die im Laufe des aktuellen Jahres kumuliert wurden oder aus dem vorigen Jahr benoetigt werden.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_jurlv (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', zahlwegid  INTEGER COMMENT 'Eindeutige Identifizierung eines Zahlwegs fuer Beitragszahlungen.', begzahlweg  TIMESTAMP COMMENT 'Datum, ab dem der angegebene Zahlweg relevant ist.', kzinkassostop  INTEGER COMMENT 'Kennzeichen, ob das Inkasso momentan gestoppt ist.', kzmahnstop  INTEGER COMMENT 'Kennzeichen, ob ein genereller Mahnstop gesetzt ist.', kzdynstop  INTEGER COMMENT 'Kennzeichen, ob ein Dynamikstop gesetzt ist.', kzbav  INTEGER COMMENT 'Kennzeichen fuer betriebliche Altersversorgung', kzprovision  INTEGER COMMENT 'Kennzeichen (J/N) zur Steuerung der Provision. Wird in diesem Feld ""J"" eingegeben, werde', gwgident  INTEGER COMMENT 'Gibt an, ob eine Identifizierung des Beitragszahlers entsprechend dem Geldwaeschegesetz er', kzversand  INTEGER COMMENT 'Kennzeichen fuer den Policenversand', dedat  TIMESTAMP COMMENT 'Das Datum des Diensteintritts', zusdat  TIMESTAMP COMMENT 'Zusagedatum fuer eine Unverfallbarkeit', dadat  TIMESTAMP COMMENT 'Das Datum des Dienstaustritts', unverfalldat  TIMESTAMP COMMENT 'Datum, an dem die Unverfallbarkeit erreicht wird', kzkapst  INTEGER COMMENT 'Kennzeichen fuer die Kapitalertragssteuer', lvidext  STRING COMMENT 'Das Field lvIdExt ist die externe Identifikation eines Vertrags innerhalb des VUs. Extern ', erhrisiko  INTEGER COMMENT 'Kennz. fuer Folgevertraege, ob fuer diese ein erhoehtes Risiko zu beruecksichtigen ist', kz_getr_veranl  INTEGER COMMENT 'Das Field kz_getr_veranl bestimmt, wannFondsanteilegekauft werden sollen.Wenn das Field 1 ', kzbdep  INTEGER COMMENT 'Wird ein Beitragsdepot gefuehrt?', kzkursstell  INTEGER COMMENT 'kzKursStell zeigt an, ob es fuer die FFA und FGE-Konten einen Kurs gibt.', datantreingbd  TIMESTAMP COMMENT 'Das Datum, zu dem derAntragin die Bezirks- bzw. Filialdirektion eingegangen ist', datantreingnl  TIMESTAMP COMMENT 'Das Datum, zu dem derAntragin die Niederlassung eingegangen ist', kznateverf  INTEGER COMMENT 'Kennzeichen, ob die Naturaleinlage verfuegbar ist', kzrebalance  INTEGER COMMENT 'Ist Rebalancing erwuenscht?', kzautopol  INTEGER COMMENT 'Kennzeichen fuer automatische Policierung: 0 - Nein, 1 - Ja', kzvorsorge  INTEGER COMMENT 'Kennzeichen Vorsorge: 0 - keine Vorsorge, 1 - freie Vorsorge, 2 - gebundene Vorsorge', kzsteum  INTEGER COMMENT 'Kennzeichen Steuermeldung: 0 - nicht relevant, 1 - wird erstellt, 2 - wird nicht erstellt', sprachedok  INTEGER COMMENT 'Dokumentensprache', kzpauschbest  INTEGER COMMENT 'Kennzeichen, ob eine Direktversicherung pauschal besteuert wird', kzrentwahl  INTEGER COMMENT 'Kennzeichen, ob bei einer Lebensversicherung ein Rentenwahlrecht besteht', kzhypzert  INTEGER COMMENT 'Kennzeichen, ob dem Kunden zusammen mit der Police ein Hypothekenzertifikat ausgestellt wi', kzbearbstop  INTEGER COMMENT 'Gibt an, ob fuer den Vertrag ein genereller Bearbeitungsstop besteht (Ausschluss von allen', kzexkassostop  INTEGER COMMENT 'Schluesselwertefuer einen Auszahlungsstop: falls bei laufenden Renten der Lebensnachweis n', antrdat  TIMESTAMP COMMENT 'antrDat enthaelt das Datum, an dem derAntragerstellt wurde', angebotnr  INTEGER COMMENT 'o.B.', ablehngrdid  INTEGER COMMENT 'ablehngrdId enthaelt alsSchluesselwertden Grund, warum die Policierung abgelehnt wurde. Da', ablehndat  TIMESTAMP COMMENT 'ablehnDat enthaelt das Datum der Ablehnung der Policierung. Dies ist gleichzeitig auch das', policedat  TIMESTAMP COMMENT 'Datum der Policierung.', erstgrdid  INTEGER COMMENT 'Grund fuer die Erstellung des Antrags', kzabgvt  INTEGER COMMENT 'Kennzeichnung, ob in der Antragsphase Vertragsteile abgelehnt wurden.', antrerfassdat  TIMESTAMP COMMENT 'antrErfassDat enthaelt das Datum, an dem derAntragdurch dasVUerfasst wurde', antraenddat  TIMESTAMP COMMENT 'antrAendDat enthaelt das Datum der letzten aenderung einesAntrags', bearbidantrerf  STRING COMMENT 'DerUsernamedes Bearbeiter der Erfassung einesAntrags', bearbidantraend  STRING COMMENT 'DerUsernamedes Bearbeiters der letzten aenderung desAntrags', antrstatus  INTEGER COMMENT 'Zustand des Antrags alsSchluesselwert: VN-Rueckfrage, Arztrueckfrage, Sonderwagnis, etc De', dynid  INTEGER COMMENT 'Qualitaet der Dynamikvereinbarung gemaess Schluesselsystem', satz  DECIMAL(16,8) COMMENT 'Fest vereinbarter Prozentsatz, um den sich die Bezugsgroesse (z.B. Zahlbeitrag) erhoehen s', satz2  DECIMAL(16,8) COMMENT 'Moeglichkeit, bei der Dynamisierung eine zweite Bezugsgroesse unabhaengig von der ersten z', dyneindat  TIMESTAMP COMMENT 'Termin des Einschlusses einer Dynamik-Vereinbarung.', lastdyn  TIMESTAMP COMMENT 'Termin, bis zu dem eine Dynamikvereinbarung gueltig ist.', zykdynamik  SMALLINT COMMENT 'Planmaessiger Zyklus der dynamischen Anpassungen in Jahren', mahnstopvondat  TIMESTAMP COMMENT 'mahnStopVonDat und mahnStopBisDat werden in Abhaengigkeit vom kzMahnStop zum Belegen zugel', mahnstopbisdat  TIMESTAMP COMMENT 'mahnStopVonDat und mahnStopBisDat werden in Abhaengigkeit vom kzMahnStop zum Belegen zugel', inkstopvondat  TIMESTAMP COMMENT 'inkStopVonDat und inkStopBisDat werden in Abhaengigkeit vom kzInkassostop zum Belegen zuge', inkstopbisdat  TIMESTAMP COMMENT 'inkStopVonDat und inkStopBisDat werden in Abhaengigkeit vom kzInkassostop zum Belegen zuge', abrgrpid  STRING COMMENT 'Identifikation einer Abrechnungsgruppe', kvidext  STRING COMMENT 'Externe Identifikation eines Kollektivvertrags', exkstopvondat  TIMESTAMP COMMENT 'exkStopVonDat und exkStopBisDat werden in Abhaengigkeit vom kzExkassostop zum Belegen zuge', exkstopbisdat  TIMESTAMP COMMENT 'exkStopVonDat und exkStopBisDat werden in Abhaengigkeit vom kzExkassostop zum Belegen zuge', kzhartz  INTEGER COMMENT 'Kennzeichen, ob der Vertrag auf das Arbeitslosengeld II angerechnet wird.', verkaufsid  INTEGER COMMENT 'Aufgrund welcher Verkaufsargumentation (Prospekt) kam der Vertrag zustande?', inkassostelle  STRING COMMENT 'besondere Inkassostelle (BayWa/Audi/Siemens)', kzvorlversschutz  INTEGER COMMENT 'Kennzeichen , ob vorlaeufiger Versicherungsschutz gewaehrt wurde. Moegliche Schluesselwert', kzverzichtserkl  INTEGER COMMENT 'Kennzeichen, ob der Kunde auf die Aushaendigung der vollstaendigen Unterlagen verzichtet h', empfberprot  TIMESTAMP COMMENT 'Kennzeichen, ob dem Kunde ein Beratungsprotokoll ausgehaendigt wurde.', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', anbieternrneu  STRING COMMENT 'Anbieternummer des neuen Anbieters', zertifnrneu  STRING COMMENT 'Zertifizierungsnummer des neuen Anbieters', vertragsnrneu  STRING COMMENT 'Vertragsnummer des neuen Anbieters', kzfinanz  INTEGER COMMENT 'Kennzeichnet die Art der Finanzierung, die im fuer die bAV gewaehlt wurde.', kzversausgl  SMALLINT COMMENT 'Kennzeichen fuer den Versorgungsausgleich: anhaengig, oder intern durchgefuehrt oder exter', kzautoabr  SMALLINT COMMENT 'Kennzeichen, ob eine automatische Abrechnung fuer diesen Vertrag vorgesehen ist oder nicht', angstatus  INTEGER COMMENT 'Identifizierender Schluessel fuer den Angebotsstatus', kzanganonym  INTEGER COMMENT 'Kennzeichen, ob es sich um ein anonymes oder personalisiertes Angebot handelt.', angebotidext  STRING COMMENT 'Eindeutiger externer Schluessel eines Angebots. Wird vom Sachbearbeiter vergeben.', benutzerprofil  STRING COMMENT 'Benutzerprofil.', kzeinwilldatenueb  INTEGER COMMENT 'Kennzeichen, ob der VN seine Einwilligung zur Uebermittlung der Daten erteilt hat. (Schlue', einwilldatum  TIMESTAMP COMMENT 'Datum wann der VN seine Einwilligung zur Uebermittlung der Daten erteilt bzw. widerrufen h', landvuid  INTEGER COMMENT 'Sitz des Versicherungsunternehmens. Schluessel fuer den in definirenden Daten hinterlegten', kzverrenttfl  INTEGER COMMENT 'Kennzeichen Verrentung', vorvtbegrent  TIMESTAMP COMMENT 'Rentenbeginn Vorvertrag', vorvtrnr  STRING COMMENT 'lvIdExt Vorvertrag', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', kzdynzu  SMALLINT COMMENT 'Kennzeichen, zu welchem Zeitpunkt dynamisiert werden soll (Hauptfaelligkeit, erste Faellig', kzsteuschaedvtg  INTEGER COMMENT 'Vorgabe-Kennzeichen fuer die Eingabe an der GUI, dass ein Vertrag immer KESt-pflichtig ist', kbfantragsnummer  STRING COMMENT 'von der Kbf aus belegt, wenn die kbf die lvidext bei Antrag nicht kennt.', unterschriftdat  TIMESTAMP COMMENT 'Datum der Unterschrift bei Erteilung eines Mandats', mandatid  INTEGER COMMENT 'Eindeutige Identifizierung eines Mandats fuer SEPA Lastschrift.', abwbtgeinzugtag  INTEGER COMMENT 'Abweichender Beitragseinzugstermin (z.B. 15.). Muss im Antrag erfasst und an Inkasso gemel', gesperrt  INTEGER COMMENT 'Vertrag wurde im Rahmen von code-of-conduct gesperrt', kzdyneinzubeg  INTEGER COMMENT 'Kennzeichen, ob Dynamik wurde bereits zu Vertragsbeginn eingeschlossen wurde', klammerid  INTEGER COMMENT 'transient attribute for proposal folder', kzpfandschutz  INTEGER COMMENT '1 = Pfaendungsschutz, 0 = kein Pfaendungsschutz', vorgangsnruebkap  STRING COMMENT 'Vorgangsnummer der Kapitaluebertragung', fristabluebkap  TIMESTAMP COMMENT 'Kapitaluebertragung muss bis zum Fristablauf durchgefuehrt werden.', kzsteubehdeda  INTEGER COMMENT 'Auswahlkennzeichen, mit dem die Vorbelegung bei der letzten Durchfuehrung gesteuert wurde', kzabrregel  INTEGER COMMENT 'Kennzeichen, ob Regelwerk fuer die automatische Ermittlung des Zahlungsempfaengers und der', kzvorsorgeart  INTEGER COMMENT 'Laenderspezifische Vorsorgeart des Vertrags, z.B. privat, bAV, Riester, PZV, Saeule 3a/3b ', c_kzunisex  INTEGER COMMENT 'Kennzeichen, ob Unisex-Sterbetafeln verwendet werden sollen [0/1 oder CVSlvJaNein; Default', c_kzbghurteil  INTEGER COMMENT 'Schluessel bzgl. BGH-Kennzeichen', c_kzgeschuetzt  INTEGER COMMENT 'Kennzeichen ob politisch exponierte Person vorliegt (PEP) und/oder es sich um Mitarbeiterg', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Rows in Table jurLV repraesentieren jeweils genau einen Vertrag. Der ""Vertrag"" kann aktiv oder abgegangen oder auch ein bearbeiteter oder abgelehnter Antrag sein; massgebend dafuer ist das Field lvStatus desjenigen zugehoerigen, der die hoechste Be' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_jurvt (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', avb1id  INTEGER COMMENT 'Erstes Schluesselfeld fuer allgemeine Vertragsbedingungen.', avb2id  INTEGER COMMENT 'Zweites Schluesselfeld fuer allgemeine Vertragsbedingungen.', avb3id  INTEGER COMMENT 'Drittes Schluesselfeld fuer allgemeine Vertragsbedingungen.', avb4id  INTEGER COMMENT 'Viertes Schluesselfeld fuer allgemeine Vertragsbedingungen.', avb5id  INTEGER COMMENT 'Fuenftes Schluesselfeld fuer allgemeine Vertragsbedingungen.', wfrist  SMALLINT COMMENT 'Dieses Attribut enthaelt bei BUZ-Vertragsteilen die vertraglich vereinbarte Wartefrist fue', staffelid  INTEGER COMMENT 'Staffelregelung fuer die Berufsunfaehigkeit', exkwegid  INTEGER COMMENT 'Vertraglich vereinbarter Zahlweg der Leistungen fuer einen Vertragsteil.', kzausl  INTEGER COMMENT 'Kennzeichen, ob auch bei Wohnsitz im Ausland Versicherungsschutz gewaehrt wird.', kzdyn  INTEGER COMMENT 'Das Kennzeichen legt fest, ob der Vertragsteil an der (auf Vertragsebene festgelegten) pla', kzkapwahl  INTEGER COMMENT 'Kennzeichnet die moeglichen Optionen bei der Kapitalwahl', bearbid  INTEGER COMMENT 'the historical version number (logId)', kzkwvereinb  INTEGER COMMENT 'Vertragsvereinbarung ueber Kapitalwahl', vttyppf  INTEGER COMMENT 'Schluesselwerte, die vier verschiedene Arten von Beitraegen auseinander halten, damit sie ', ablehngrdid  INTEGER COMMENT 'In diesem Attribut wird gegebenenfalls der Grund verschluesselt, warum ein Antrag nicht po', dtwechsel  TIMESTAMP COMMENT 'Datum, zu dem die Kuendigung wirksam wird', sumavmgges  DECIMAL(16,2) COMMENT 'Gesamtvermoegen des AVmG-Vertrags in Euro - entspricht dem Betrag der Ueberweisung an den ', sumgefkap  DECIMAL(16,2) COMMENT 'Summe gefoerdertes Kapital bis Datum der Kapitaluebertragung in Euro: zur Weiterentwicklun', sumngefkap  DECIMAL(16,2) COMMENT 'Summe ungefoerdertes Kapital bis Datum der Kapitaluebertragung in Euro: zur Weiterentwickl', sumzulges  DECIMAL(16,2) COMMENT 'Summe der gesamten Zulagen in Euro - basierend auf bisher erhaltenen Zahlungen (ZARA, nich', btgjahr  INTEGER COMMENT 'Beitragsjahr der Zulagengewaehrung', beiwechseljahr  DECIMAL(16,2) COMMENT 'Beitraege im Beitragsjahr in Euro (wie AZ01): Beitrag Wechseljahr (BEITRAG_WJ).', sumbeivorjahre  DECIMAL(16,2) COMMENT 'Beitraege im Beitragsjahr in Euro (wie AZ01): Beitragssumme fuer alle VJ (SUM_BEITRAG_VJ).', beizulwechseljahr  DECIMAL(16,2) COMMENT 'Summe der Altersvorsorgebeitraege im sinne des § 82, auf die § 10a oder Abschnitt XI EStG ', sumbeizulvorjahre  DECIMAL(16,2) COMMENT 'Summe der Altersvorsorgebeitraege im Sinne des § 82, auf die § 10a oder Abschnitt XI EStG ', vorvtrnr  STRING COMMENT 'Vorvertragsnummer', gefke  DECIMAL(16,2) COMMENT 'Kapitalertrag aus gefoerdertem Kapital.', ngefke  DECIMAL(16,2) COMMENT 'Kapitalertrag aus nicht gefoerdertem Kapital.', kzabfindungkbr  INTEGER COMMENT 'Wird gesetzt, wenn im Geschaeftsprozess ""Vorbereitung Verrentung Riester"" die Abfindung ', kzabfindungmgl  INTEGER COMMENT 'Wird gesetzt, wenn im Geschaeftsprozess ""Simulation Ablauf"" ermittelt wird, dass die Abf', sumuebkap  DECIMAL(16,2) COMMENT 'Summe uebertragenes Kapital.', lvidextneu  STRING COMMENT 'lvIdExt des neuen Vertrags', pdidneu  STRING COMMENT 'pdId des neuen Vertrags', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', zeichjahrjur  TIMESTAMP COMMENT 'Zeichnungsjahr (juristisch)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Rows in Table jurVT repraesentieren jeweils genau einen Vertragsteil.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_key_pas_lv (tpa_mandant  STRING, lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_kinderzulage (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', hvgruppeid  SMALLINT COMMENT 'id of HvGruppe (generically derived from HvGruppe)', bearbid  INTEGER COMMENT 'the historical version number (logId)', kindid  SMALLINT COMMENT 'id of Kinderzulage (Identifizierung des Kindes)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', geburtsjahr  SMALLINT COMMENT 'Geburtsjahr des Kindes', jahrletzezulage  SMALLINT COMMENT 'Jahr der letzten Zulage', zuordnung  INTEGER COMMENT 'Kennzeichnung, ob die Kinderzulage dem Vertrag des VN oder einem Vertrag des Ehegatten gut', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Daten zur Riester-Kinderzulage' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_ktofonds (bearbid  INTEGER COMMENT 'the historical version number (logId)', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', ktobewid  INTEGER COMMENT 'id of KtoBwg (Eindeutige Identifizierung einer Kontobewegung.)', vtid  SMALLINT, vbid  SMALLINT, ktobewtypid  STRING COMMENT 'Eindeutige Identifizierung eines Typs von Kontobewegungen. (Contains the defined values fo', bewbetrag  DECIMAL(22,8) COMMENT '(Geld-)Betrag, um den sich ein Wert aendert, der in der Entitaet Kontobewegung dokumentier', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand. Identisch belegt wie bearb', wirkbeginn  TIMESTAMP COMMENT 'Termin, ab dem der neue Vertragsstand fachlich wirksam ist.', ktobewstoid  INTEGER COMMENT 'Eindeutige Identifizierung einer stornierten Kontobewegung', feinbeginn  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Beginn', wirkende  TIMESTAMP COMMENT 'Termin, ab dem der Vertragsstand fachlich nicht mehr wirksam ist.', feinende  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Ende', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', ktostdtypid  STRING COMMENT '(Contains the defined values for KtoStd.ktoStdTypId.)', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', zahlempfid  INTEGER COMMENT 'Eindeutige vertragsspezifische Identifizierung eines Zahlungsempfaengers', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', fondsid  INTEGER COMMENT 'Interne Kennummer eines Fonds', wterm  TIMESTAMP COMMENT 'Der Zeitpunkt, zu dem ein Betrag wertgestellt wird.', bearbidorig  INTEGER COMMENT 'Enthaelt die bearbId der Original-Bearbeitung:<br/> Wird eine Bearbeitung storniert, wird ', ktobelegid  INTEGER COMMENT 'Eindeutige Identifizierung eines Kontobelegs innerhalb eines Vertrags (wird automatscih ve', valutadat  TIMESTAMP COMMENT 'Datum des Geldeinganges beim Versicherungsunternehmen', portfid  INTEGER COMMENT 'Interne Kennnummer eines Portfolios', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'KtoBwg = View, die alle Eintraege aus ktoall/ktofonds/ktoveran enthaelt. KtoFonds: Kontobewegungen zu Fondskonten KtoVeran: Kontobewegungen zu Riester- und Iststellungskonten KtoAll: Kontobewegungen, die nicht ktoFonds und ktoVeran gespe' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_ktostd (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', ktostdtypid  STRING COMMENT 'id of KtoStd (Eindeutige Identifizierung eines Kontostand-Typs.)', saldo  DECIMAL(22,8) COMMENT 'Saldo des entsprechenden Kontos zu einem bestimmten Zeitpunkt.', vtid  SMALLINT COMMENT 'id of KtoStd (Das Field vtId identifiziert zusammen mit dem Field lvId denVertragsteil, zu', vbid  SMALLINT COMMENT 'id of KtoStd (Nummer zur eindeutigen Identifizierung eines Vertragsbausteins innerhalb ein', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', fondsid  INTEGER COMMENT 'id of KtoStd (Interne Kennummer eines Fonds)', portfid  INTEGER COMMENT 'id of KtoStd (Interne Kennnummer eines Portfolios)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Kontostand' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_lv (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', generation  STRING COMMENT 'Kennzeichnet die Generationenfolge grundsaetzlich identischer Produkte oder Tarife im Zeit', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', verzinsbeginn  TIMESTAMP COMMENT 'Termin, ab dem das Beitragsdepotkonto verzinst wird.', zweiink  INTEGER COMMENT 'Eindeutige Identifizierung einer Beitragszahlweise.', zinsbdep  DECIMAL(16,8) COMMENT 'Hoehe des fuer das Beitragsdepot festgelegten Zinssatzes in Prozent.', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', guebiszins  TIMESTAMP COMMENT 'Datum, bis zu dem der fest vorgegebene Zinssatz am Beitragsdepot gueltig ist.', betrag  DECIMAL(16,2) COMMENT 'Betrag, der in das Beitragsdepot eingezahlt oder ihm entnommen wird.', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', lvbegt  TIMESTAMP COMMENT 'Erster technischer Beginn des Vertrages.', lvablt  TIMESTAMP COMMENT 'Ablauftermin des Vertrags', trdk  DECIMAL(16,2) COMMENT 'Die technische Rundungskorrektur dient dazu, bei der Berechnung des Zahlbeitrags die Addit', btrdiffmig  DECIMAL(16,2) COMMENT 'Wird im Rahmen einer Migration als Differenz aus bisherigem und errechnetem Beitrag (gemae', btrabgl  DECIMAL(16,2) COMMENT 'Dient zum Abgleich zwischen vorgegebenem und errechnetem Beitrag; wird gemaess Beitragsfae', vstkk  DECIMAL(16,2) COMMENT 'In den Beitrag eingerechnete Stueckkosten, die bei laufender Beitragszahlung pro Ratenzahl', uebverr  DECIMAL(16,2) COMMENT 'Der laufende, vorschuessig zugeteilte ueberschuss von Vertragsteilen kann zur Verrechnung ', lvjahrtag  TIMESTAMP COMMENT 'Hier wird der Jahrestag der Versicherung gefuehrt.', lvstatus  INTEGER COMMENT 'Status, in dem sich ein Antrag bzw. Vertrag befindet', zb  DECIMAL(16,2) COMMENT 'Der je Ratenzahlungsabschnitt (tariflich) faellige Zahlbeitrag. Eine Beitragsreduktion aus', vzborig  DECIMAL(16,2) COMMENT 'Brutto-Zahlbeitrag gemaess Zahlweise (historischer Stand, Merkposten)', kzvorg  INTEGER COMMENT 'Bestimmt die Qualitaet der Vorgabe: z.B. Vorgabe der Leistung, des Beitrags oder der Ablau', kz_anr  INTEGER COMMENT 'Kennzeichen, ob anrechenbare Werte angegeben werden sollen.', anrewert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert aus einem Vorvertrag', annahmeart  SMALLINT COMMENT 'Art der Annahme: Zur Zeit nur Unterteilung in Annahme mit oder ohne Gesundheitspruefung', fr_switch  INTEGER COMMENT 'Gibt die Anzahl der restlichen gebuehrenfreien Switchvorgaenge an.', let_switch  TIMESTAMP COMMENT 'Datum des letzten Switchen.', kz_versst  INTEGER COMMENT 'Gibt an, ob eine Versicherungssteuer zu bezahlen ist oder nicht.', versst  DECIMAL(16,2) COMMENT 'Versicherungssteuer in Landeswaehrung.', rentbekz  INTEGER COMMENT 'Kennzeichen, ob eine Rente (tatsaechlich) bezogen wird', vertriebsweg  INTEGER COMMENT 'Vertriebsweg', versstnate  DECIMAL(16,2) COMMENT 'Stempelsteuerbetrag auf Naturaleinlagebetrag', errbtgniv  DECIMAL(16,2) COMMENT 'Erreichtes Beitragsniveau', minbtg  DECIMAL(16,2) COMMENT 'Vereinbarter Mindestbeitrag', zweivorza  INTEGER COMMENT 'Zahlweise fuer die Zinsen der Vorauszahlung', btrdiffwsw  DECIMAL(16,2) COMMENT 'Beitragsdifferenz aus einer Waehrungsumstellung', kznachz  INTEGER COMMENT 'Kennzeichen bzgl. Nachzahlungsvariante fuer Altersvorsorgevertrag', uebverrnsp  DECIMAL(16,2) COMMENT 'Uebersch-Verrechnung-rat nach Beitragssprung', kzanbieterwechsel  INTEGER COMMENT 'Kennzeichen, ob ein Anbieterwechsel vorliegt.', kzrelease  INTEGER COMMENT 'Releasekennzeichen', antragssteuerung  INTEGER COMMENT 'Kennzeichen fuer die Steuerung des Antragsprozesses', partkey  SMALLINT COMMENT 'the partition key', kzangvers  INTEGER COMMENT 'Kennzeichen, ob bei Antrag Speichern Angebotsbriefe versendet wurden.', kzauszstop  INTEGER COMMENT 'Kennzeichen, ob das Guthaben auf dem Abklaerungskonto ausgezahlt werden kann (0) oder es e', kzabfindungkbr  INTEGER COMMENT 'Wird gesetzt, wenn im Geschaeftsprozess Vorbereitung Verrentung Riester die Abfindung Klei', kollnr  STRING COMMENT 'Kollektiv-Nummer', lfdkollnr  STRING COMMENT 'Laufende Nummer als Ergaenzung zur Kollektiv-Nummer', verwgrpnr  STRING COMMENT 'Verwaltungsgruppennummer', musterid  STRING COMMENT 'Muster-Kennung', zuzahlpol  DECIMAL(16,2) COMMENT 'Zuzahlung bei Policierung', isvoraussschaedverw  SMALLINT COMMENT 'Gibt an, ob die fachliche Voraussetzung fuer schaedliche Verwendung gemaess gegeben ist (0', kistamwirkdat  TIMESTAMP COMMENT 'Wirksamkeitstermin des letzten Leistungsgevos zu dem in der Simulation Ablauf die Schnitts', kzleistungsarttod  INTEGER COMMENT 'Kennzeichnung, ob bei Tod kapitalisiert werden oder die Zeitrente berechnet werden soll', kistambearbdat  TIMESTAMP COMMENT 'Bearbeitungsdatum der letzten Simulation Ablauf, bei der die Schnittstelle EKTC01 (fuer ei', steulandsekundaer  INTEGER COMMENT 'Von steuLandPrimaer abweichendes Land, fuer den der Vertrag aufgrund des Wohnsitzes des VN', steuzuschlagzuzahl  DECIMAL(15,2) COMMENT 'Steuerzuschlag auf Zuzahlungen, summiert die Steuerzuschlaege auf Praemien der Zuzahlungs-', steuzuschlag  DECIMAL(15,2) COMMENT 'Steuerzuschlag der auslaendischen Versicherungssteuer. Summiert die Steuerzuschlaege der V', steulandprimaer  INTEGER COMMENT 'Angabe des Landes, fuer welches der Vertrag aufgrund des abschliessenden VU primaer steuer', kzrechenkern  INTEGER COMMENT 'Kennzeichen, ob der Vertrag mit TBF=1 oder LP=2 angelegt wurde (The sign of the account mo', vorgperformance  DECIMAL(15,8) COMMENT 'Durch den Sachbearbeiter erfasste Vorgabe fuer die individuelle Modellrechnung.', c_werbhilf  INTEGER COMMENT 'Schluesselfeld mit dem erfasst wird, mit welcher Verkaufsmethode der Vertrieb den Vertrag ', c_zugweg  INTEGER COMMENT 'Schluesselfeld mit dem erfasst wird, ueber welchen Zugangsweg bzw. Vertriebspfad ein Vertr', c_wikmgl  INTEGER COMMENT 'Kennzeichnet ob der Vertrag wieder in Kraft gesetzt werden darf', c_wirkdatmig  TIMESTAMP COMMENT 'Wirksamkeitstermin der Migration (""Migrationsstichtag"")', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Rows in Table lv repraesentieren einen oder mehrere Vertragsstaende; temporal identifiziert durch das Field lvId. Die Vertragsstaende sind von 1 beginnend durchnummeriert, wobei es auch Luecken geben darf. Welche Vertragsstaende eine Row repraesentie' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_lvstand (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', fortbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Beitragszerlegung und Fortschreibung der Res', dynbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung Dynamik.', dynanglast  TIMESTAMP COMMENT 'Datum der letzten angenommenen Dynamik', dynabganz  SMALLINT COMMENT 'Anzahl der abgelehnten Dynamikerhoehungen', uebvorbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: ueberschusszuteilung vorschuessig', uebnachbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: ueberschusszuteilung nachschuessig', uebvwbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: ueberschussverwendung', vorabbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Vorabschaetzwerte', ablbzdbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Ablauf Beitragszahlungsdauer', ablversdbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Ablauf Versicherungsdauer', ablrizubis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Ablauf Risikozuschlag', ablaufschubbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Ablauf Aufschubzeit', optverlbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Verschiebung des Ablauftermins innerhalb der', teilausbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Teilauszahlung', nextplanbdep  TIMESTAMP COMMENT 'Wirksamkeitstermin der naechsten planmaessigen Beitragsdepotverzinsung', verzdepotbis  TIMESTAMP COMMENT 'Termin, bis zu dem das Beitragsdepot verzinst ist', sprungbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Beitragssprung', inkassobis  TIMESTAMP COMMENT 'Termin, bis zu dem der aktuelle Vertragsstand inkasso fortgeschrieben ist.<br /> auftrag.i', exkbis  TIMESTAMP COMMENT 'Termin, bis zu dem der aktuelle Vertragsstand exkasso fortgeschrieben ist', schrittidlast  INTEGER COMMENT 'Kennung (schrittId) des zuletzt durchgefuehrten Arbeitsschrittes', wirkdatlast  TIMESTAMP COMMENT 'Termin, zu dem der letzte Arbeitsschritt wirksam wurde', bearbidbuvp1  INTEGER COMMENT 'Nummer der Bearbeitung, mit der die Invalidisierung der ersten versicherten Person (HV) du', bearbidbuvp2  INTEGER COMMENT 'Nummer der Bearbeitung, mit der die Invalidisierung der zweiten versicherten Person (HV) d', dynsimbis  TIMESTAMP COMMENT 'Termin der naechsten Simulation Dynamik.', kundbis  TIMESTAMP COMMENT 'Termin der naechsten FLV-Kundeninformation.', provbis  TIMESTAMP COMMENT 'Termin der naechsten Provisionsberechnung.', fortsimbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung Simulation Beitragszerlegung', naefaus  TIMESTAMP COMMENT 'Termin der naechsten Fondsausschuettung', naerueck  TIMESTAMP COMMENT 'Termin der naechsten Rueckerstattung Koerperschaftssteuer', naeveranl  TIMESTAMP COMMENT 'Termin der naechsten Veranlagung des FLV-Beitrags.', naeswitch  TIMESTAMP COMMENT 'Termin des naechsten planmaessigen Switchens', leveranl  TIMESTAMP COMMENT 'Termin der letzten Veranlagung des FLV-Beitrags.', lesimveranl  TIMESTAMP COMMENT 'Termin der letzten Simulation der Veranlagung des FLV-Beitrags.', leveranlbwgid  INTEGER COMMENT 'Nummer der Kontobewegung, die zuletzt die Durchfuehrung einer Veranlagung veranlasst hat.', leportfumsch  TIMESTAMP COMMENT 'Termin fuer die letzte Portefeuilleumschichtung', portfumschsimubis  TIMESTAMP COMMENT 'Termin fuer die letzte Simulation der Portefeuilleumschichtung', naemgmtgebuehr  TIMESTAMP COMMENT 'Naechster Termin fuer die Entnahme der Managementgebuehr', naevtaktivierung  TIMESTAMP COMMENT 'Termin fuer die naechste Aktivierung eines Vertragsteils; dieses Attribut berechnet sich a', uebzusatzbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden zusaetzlichen ueberschuss-Ausschuettung', naeswidatfp  TIMESTAMP COMMENT 'Das Datum, zu dem die Step-2-Verarbeitung fuer einen Forward-Pricing-Switch durchzufuehren', naeauszdatfp  TIMESTAMP COMMENT 'Das Datum, zu dem die Step-2-Verarbeitung fuer einen Forward-Pricing-Auszahlung durchzufue', naefortfp  TIMESTAMP COMMENT 'Das Datum, an dem die naechste Step-1-Verarbeitung fuer die Beitragszerlegung durchgefuehr', naeveranlfp  TIMESTAMP COMMENT 'Das Datum, an dem die naechste Step-1-Verarbeitung der Beitragsveranlagung durchgefuehrt w', uebvwnachbis  TIMESTAMP COMMENT 'Termin der naechsten nachschuessigen ueberschussverwendung', naeplantrkfp  TIMESTAMP COMMENT 'An diesem Termin muss ein Inkasso durchgefuehrt werden. Normalerweise belegt nach techn. A', leuebnach  TIMESTAMP COMMENT 'Letzte durchgefuehrte nachschuessige ueberschusszuteilung', leuebvwnach  TIMESTAMP COMMENT 'Letzte durchgefuehrte nachschuessige ueberschussverwendung', solllfdebbis  TIMESTAMP COMMENT 'Datum der naechsten planmaessigen Sollstellung eines laufenden Einmalbeitrags', lefortbearbid  INTEGER COMMENT 'Die bearbId der zuletzt an diesem Vertrag durchgefuehrten Fortschreibung', naewaeswitch  TIMESTAMP COMMENT 'Das Datum, an dem die naechste Waehrungsumstellung geplant ist; wird bei Policierung von D', naevorwaeswitch  TIMESTAMP COMMENT 'Das Datum, an dem die naechste Vorbereitung der Waehrungsumstellung geplant ist; wird bei ', lewaeswitch  TIMESTAMP COMMENT 'Das Datum der letzten Waehrungsumstellung', naeabrkaljahrinfo  TIMESTAMP COMMENT 'Termin der naechsten Abrechnung Kalenderjahr informatorisch', naeumwvorschalt  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Umwandlung Vorschaltprodukt', schwebebis  TIMESTAMP COMMENT 'schwebeBis wird von einem Batch-Programm ausgewertet, um den Schwebezustand aufzuloesen. D', leveranlbwgfpid  INTEGER COMMENT 'Nummer der Kontobewegung, die zuletzt die Durchfuehrung einer Veranlagung Schritt 2 veranl', lekorrbewid  INTEGER COMMENT 'Zu einer Zulagenkorrektur gehoeren n (n=1) Kontobewegungen mit ktoStdtypId = ""VERAN"" und', naekorr  TIMESTAMP COMMENT 'Datum der naechsten Zulagen-Korrektur.', naeplanmabr  TIMESTAMP COMMENT 'Eine planmaessige Abrechnung wird nur fuer Rueckforderungen aus Zulagenkorrekturen der ZfA', bearbidreakt  INTEGER COMMENT 'Zahlungseingaenge koennen auch rueckwirkend erfolgen. Der Batch muss erkennen, dass der Ve', naebeizerl  TIMESTAMP COMMENT 'Termin der naechsten planmaessigen Bearbeitung', naeuebvor  TIMESTAMP COMMENT 'Termin der naechsten planmaessigen vorschuessigen Ueberschusszuteilung', naeuebvwvor  TIMESTAMP COMMENT 'Termin der naechsten planmaessigen vorschuessigen Ueberschussverwendung', inkassoerzwingenam  TIMESTAMP COMMENT 'Fuer Aenderungen zu Nicht-Faelligkeitsterminen ist es notwendig, einer darauf zu diesem Ni', naebilterm  TIMESTAMP COMMENT 'Termin der naechsten Bilanzwertberechnung.', zuveranlbwgid  INTEGER COMMENT 'ktoBewId der letzten neu eingestellten Z-Buchung. Ueber den Vergleich mit leVeranlBwgId is', naeshift  TIMESTAMP COMMENT 'Termin des naechsten planmaessigen Shifts', simablbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung Simulation des Ablaufs Versicherungsdauer', naesteuwerte  TIMESTAMP COMMENT 'Termin der naechsten Fortschreibung Steuerwerte', partkey  SMALLINT COMMENT 'the partition key', end_btgpause  TIMESTAMP COMMENT 'Ende der Beitragspause', naeexkassoalle  TIMESTAMP COMMENT 'Naechster gemeinsamer planmaessiger oder ausserplanmaessiger Exkasso-Faelligkeitstermin al', naeuebvwumwfonds  TIMESTAMP COMMENT 'Termin der naechsten planmaessigen zeitnahen Ueberschussverwendung in Fonds.', verzpoldarlbis  TIMESTAMP COMMENT 'Zeipunkt, bis zu dem das Policendarlehen verzinst ist.', naeanpgarpar  TIMESTAMP COMMENT 'Termin fuer die naechste Anpassung der Garantieparameter.', naeanpleist  TIMESTAMP COMMENT 'Termin fuer die naechste planmaessige Anpassung der Leistungen', vorbverrentbis  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: ""Vorbereitung Verrentung""', leinkasso  TIMESTAMP COMMENT 'Wirksamkeitsbeginn der letzten durchgefuehrten Inkassobearbeitung', ablrgzbis  TIMESTAMP COMMENT 'Termin der naechsten planmaessigen Bearbeitung Ablauf Rentengarantiezeit.', naekorrrbez  TIMESTAMP COMMENT 'Datum der naechsten Zulagenkorrektur im Rentenbezug.', naezgefrbez  TIMESTAMP COMMENT 'Datum der naechsten Meldung -gefoerderter Beitrag- im Rentenbezug.', lezgefrbezbewid  INTEGER COMMENT 'Kontobewegungs-ID der letzten Meldung -gefoerderter Beitrag- im Rentenbezug.', kaljwertebis  TIMESTAMP COMMENT 'Termin, zu dem der Arbeitsschritt &quot;Ermittlung Kalenderjahreswerte&quot; wieder stattf', aktkontostaendebis  TIMESTAMP COMMENT 'Termin, bis zu dem zu verzinsende Einzelkonten verzinst sind', naeinforbeg  TIMESTAMP COMMENT 'Termin der naechsten Information vor Rentenbeginn', naebestandskorr  TIMESTAMP COMMENT 'Termin der naechsten Bestandskorrektur', lebestandskorrbewid  INTEGER COMMENT 'Nummer der Kontobewegung , die zuletzt eine Bestandskorrektur veranlasst hat.', naeablkarenz  TIMESTAMP COMMENT 'Termin der naechsten anstehenden Bearbeitung: Ablauf Karenzzeit', naeaktpib  TIMESTAMP COMMENT 'Termin der naechsten (semiplanmaessigen) Aktualisierung des Produktinformationsblatt', naeablwifri  TIMESTAMP COMMENT 'Ablauf Widerrufsfrist', leaktpib  TIMESTAMP COMMENT 'Termin der letzten (semiplanmaessigen) Aktualisierung des Produktinformationsblatts', naekursabhbilwerte  TIMESTAMP COMMENT 'Naechster Termin fuer die Berechnung der fondskursabhaengigen Bilanzwerte', naeteilverrentung  TIMESTAMP COMMENT 'Termin der naechsten flexiblen Teilverrentung.', dynsolllast  TIMESTAMP COMMENT 'Datum, an dem die letzte Dynamik stattgefunden hat oder stattfinden haette sollen (aber wi', naegewinnsicherung  TIMESTAMP COMMENT 'Termin der naechsten planmaessigen Gewinnsicherung', naebstdswitch  TIMESTAMP COMMENT 'Datum naechster Bestandsswitch', naefondsverrentung  TIMESTAMP COMMENT 'Termin fuer die naechste planmaessige Fondsverrentung', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Aktualisierungstermine und weitere fuer eine Vertragsbearbeitung erforderliche Steuerungsdaten.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenSteuerungsstand: In dieser Entitaet werden Aktualisierungstermine und' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_nbsmappingintext (id_type  INTEGER COMMENT 'id of NbsMappingIntExt (Gibt den Typ an, fuer den das Attribut ID_INT das letzte vergebene', id_int  INTEGER COMMENT 'id of NbsMappingIntExt (Interne numerische ID (z.B. partnerID usw.))', mandantid  INTEGER COMMENT 'Das Field mandantID enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', id_ext  STRING COMMENT 'Externe alpha-numerische ID', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Mappingtabelle interne zu externer ID und vv.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_notiz (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', kontextid  INTEGER COMMENT 'id of Notiz (Eindeutige Rolle der Notiz in dem zugeordneten Vertrag.)', textinhalt  STRING COMMENT 'Freitext innerhalb einer Notiz', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'In der Table notiz koennen beliebige Freitexte zu einem Vertrag abgelegt werden.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_partnerlv (partnerid  INTEGER COMMENT 'id of PartnerLV (Das Field partnerId identifiziert denPartner, zu dem diese Row eine Aussa', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', rollenid  INTEGER COMMENT 'id of PartnerLV (Identifikation einer Partnerrolle in einer Partner-Vertrags-Beziehung)', bearbid  INTEGER COMMENT 'the historical version number (logId)', kontoid  INTEGER COMMENT 'ID der zugeordneten Bankverbindung zum Partner', kzhauptvn  INTEGER COMMENT 'Dieses Kennzeichen gibt an, ob der jeweilige Versicherungsnehmer der sog. ""Haupt-VN"" ist', anschriftid  INTEGER COMMENT 'ID der zugeordneten Anschrift zum Partner', gebdat  TIMESTAMP COMMENT 'Das Geburtsdatum ist der Termin, an dem die natuerliche Person geboren wurde.', landid  INTEGER COMMENT 'Wohnsitzland des Partners. Schluessel fuer den in definierenden Daten hinterlegten Wert fu', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', kzpartnerart  INTEGER COMMENT 'Kennzeichnung, ob es sich um eine juristische oder natuerliche Person', kistaminfodat  TIMESTAMP COMMENT 'Datum eines Hinweisschreiben fuer das Widerspruchsrecht bzgl. der KiStAM-Abfrage', risikoprofil  INTEGER COMMENT 'Erfahrung des Partners bei der Anlage in fondsgebundene Produkte.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Partner werden einzelnen Vertraegen bzw. Vertragsteilen zugeordnet. Dabei wird auch festgehalten, welche Rolle er spielt.Beitragszahler: Der Beitragszahler ist ein Partner zum LV-Vertrag, der die Beitraege bezahlt. Der Beitragszahler kann vom Versicherun' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_poldarl (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', zahlwegpoldarl  INTEGER COMMENT 'Zahlweg Policendarlehen', zahlwegzins  INTEGER COMMENT 'Zahlweg Zinszahler Policendarlehen', zahlwegrueckz  INTEGER COMMENT 'Zahlweg fuer die Rueckzahlung des Policendarlehens', zinssatz  DECIMAL(7,3) COMMENT 'Prozentsatz; wird bestimmt auf globpara', abwzinssatz  DECIMAL(7,3) COMMENT 'Abweichender Zins (Prozentsatz)', zinsab  TIMESTAMP COMMENT 'Zeitpunkt ab dem das Policendarlehen zu verzinsen ist', zweizins  INTEGER COMMENT 'Vereinbarte Zahlweise der Zinsen fuer das Policendarlehen', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Policendarlehen' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_provdaten (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', abagenturid  STRING COMMENT 'Nummer der Abschluss-Agentur', beagenturid  STRING COMMENT 'Nummer der Bestands-Agentur', miagenturid  STRING COMMENT 'Nummer der mitwirkenden Agentur', kzmanprov  INTEGER COMMENT 'Kennzeichen, ob die Provision manuell zu vergeben oder zu veraendern ist', kzvertraktion  INTEGER COMMENT 'Kennzeichen fuer Vertriebsaktionen.', kzwettbew  INTEGER COMMENT 'Kennzeichen fuer Vertriebswettbewerbe', bewsfakt  DECIMAL(16,8) COMMENT 'Bewertungsfaktor bei der Provisionierung', provkuerz  DECIMAL(16,8) COMMENT 'Faktor zur Kuerzung der Provision', kzprovdyn  INTEGER COMMENT 'Gibt an, wie im Falle eines Vermittler-Wechsels die Provision aus Dynamik aufgeteilt wird.', kzstores  INTEGER COMMENT 'Gibt Besonderheiten bei der Behandlung der Stornoreserve an.', kzmarket  INTEGER COMMENT 'Enthaelt eine Kennzeichnung des Marketings.', vertriebsweg  INTEGER COMMENT 'Vertriebsweg', maxzinsmod  DECIMAL(16,8) COMMENT 'maximaler Zinssatz fuer die Modellrechnung, vertriebswegabhaengig', zahlwegqual  INTEGER COMMENT 'Naehere Qualifikation des Zahlwegs', provart  INTEGER COMMENT 'Art des Provisionssatzes (Schluesselverzeichnis)1 - Abschlussprovision2 - Bestandsprovisio', kzberatprot  INTEGER COMMENT 'Kennzeichen Beratungsprotokoll', kzbako  INTEGER COMMENT 'Kennzeichen BAKO', kzlabel  INTEGER COMMENT 'Auspraegung: WL - Wuertt. Leben; KLV - Karlsruher Leben; Sonst - sonstige Altvertraege.', bearbstdort  INTEGER COMMENT 'Bearbeitungsstandort', beratprotpflicht  INTEGER COMMENT 'Beratungsprotokoll', partkey  SMALLINT COMMENT 'the partition key', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Fuehrung historisch relevanter Provisionsdaten am Vertrag' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_prv (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', agenturid  INTEGER COMMENT 'id of Prv (Eindeutige Nummer einer Agentur)', kz_prod  INTEGER COMMENT 'Kennzeichnet, ob die Agentur der Produzent ist.', proz_ant  DECIMAL(12,8) COMMENT 'Prozentualer Anteil an einer Groesse.Constraint proz_ant_RANGE: die prozentualen Provision', rollenid  INTEGER COMMENT 'Identifikation einer Partnerrolle in einer Partner-Vertrags-Beziehung', orgeinheit  STRING COMMENT 'Organisationseinheit, der der Vermittler zugeordnet ist (z.B. Regionaldirektion)Organisati', anteilvm2  DECIMAL(9,4) COMMENT 'Anteil an der Provision fuer den zweiten Vermittler', bearbid  INTEGER COMMENT 'the historical version number (logId)', aprov_max  DECIMAL(9,4) COMMENT 'Maximaler Satz der Abschlussprovision (in % der Jahrespraemie)', fprov_max  DECIMAL(9,4) COMMENT 'Maximaler Satz der Folgeprovision (in % der Jahrespraemie)', aprov_relabw  DECIMAL(9,4) COMMENT 'Von der Provisions-Vereinbarung abweichender, vertragsindividueller Promille-Satz der Absc', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', aprov_rel  DECIMAL(9,4) COMMENT 'Promille-Satz der Abschlussprovision.', fprov_rel  DECIMAL(9,4) COMMENT 'Folge-Provisionssatz in Promille.', eprov_rel  DECIMAL(9,4) COMMENT 'Einmalpraemien-Abschluss-Provisionssatz relativ (in Promille).', efprov_rel  DECIMAL(9,4) COMMENT 'Einmalpraemien-Folge-Provisionssatz relativ (in Promille).', mgp_ant  DECIMAL(16,8) COMMENT 'Anteil an der Managmentprovisoion', ausgprov_ant  DECIMAL(16,8) COMMENT 'Anteil an der Ausgabeaufschlags-Provision', partkey  SMALLINT COMMENT 'the partition key', prvid  INTEGER COMMENT 'id of Prv (technischer Zaehler an prv)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die fuer einen Vertrag geltende Vereinbarung mit einem VermittlerHistorie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenProvisionssatz: Anteil an verschiedenen ProvisionsartenProvisions_Vereinbarung: Die fuer einen Vert' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_rismerkmal (partnerid  INTEGER COMMENT 'id of VpVT (Das Field partnerId identifiziert die versicherte Person, zu der diese Row ein', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', rollenid  INTEGER COMMENT 'id of VpVT (Identifikation einer Partnerrolle in einer Partner-Vertrags-BeziehungConstrain', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', rismerkmalid  INTEGER COMMENT 'id of RisMerkmal (Das Feld risMerkmalId identifiziert das Risikomerkmal, zu dem diese Zeil', partkey  SMALLINT COMMENT 'the partition key', rismerkmaldouble  DECIMAL(16,2) COMMENT 'Gibt den Wert des Risikomerkmals als Double an.', rismerkmalinteger  INTEGER COMMENT 'Gibt den Wert des Risikomerkmals als Integer an.', rismerkmaldate  TIMESTAMP COMMENT 'Gibt den Wert des Risikomerkmals als Date an.', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Risiko-Merkmale sind personenbezogene Merkmale zur Einschaetzung des Risikos.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_risschaetz (partnerid  INTEGER COMMENT 'id of VpVT (Das Field partnerId identifiziert die versicherte Person, zu der diese Row ein', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', rollenid  INTEGER COMMENT 'id of VpVT (Identifikation einer Partnerrolle in einer Partner-Vertrags-BeziehungConstrain', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', rizumed  DECIMAL(12,6) COMMENT 'Beitragszuschlag, der aufgrund eines erhoehten gesundheitlichen Risikos vergeben wird.', ablrizumed  TIMESTAMP COMMENT 'Ablauftermin des medizinischen Risikozuschlags', rizuson  DECIMAL(12,6) COMMENT 'Beitragszuschlag, der aufgrund eines erhoehten sonstigen Risikos vergeben wird.', ablrizuson  TIMESTAMP COMMENT 'Ablauftermin der Risikozuschlaege, die nicht medizinischer oder zusaetzlich temporaerer Ar', rizuzus  DECIMAL(12,6) COMMENT 'Zusaetzlicher sonstiger Risikozuschlag, der im Regelfall nur temporaer gueltig ist.', ablrizuzus  TIMESTAMP COMMENT 'Ablauftermin fuer den zusaetzlichen temporaeren Risikozuschlag', uebsterb  DECIMAL(16,8) COMMENT 'Prozentangabe der uebersterblichkeit. Dieser Wert geht in die Ermittlung der Ausscheidewah', staffelung  SMALLINT COMMENT 'Angabe einer von der VP abhaengigen linearen Leistungsstaffel bei Tod in den ersten Versic', risikogruppe  INTEGER COMMENT 'Eine Risikogruppe bezeichnet eine Gruppe von Risiken, die unter dem Gesichtspunkt der Risi', zielgruppe  INTEGER COMMENT 'Eine Zielgruppe bezeichnet eine Menge von Personen, die unter dem Gesichtspunkt der Risiko', berufsgruppe  INTEGER COMMENT 'Eine Berufsgruppe bezeichnet eine Menge von Berufen, die unter dem Gesichtspunkt der Risik', anomalie1id  INTEGER COMMENT 'Verschluesselung einer Anomalie des Versicherten', anomalie2id  INTEGER COMMENT 'Verschluesselung einer weiteren Anomalie des Versicherten', herkunftid  INTEGER COMMENT 'Klassifiziert die Herkunft von Informationen, z.B. der Risikoschaetzung', kzsondwag  INTEGER COMMENT 'Kennzeichen Sonderwagnis: Gibt an, ob die VP ein spezielles Risiko darstellt, weil sie z.B', rispruefer  STRING COMMENT 'Name des Risikopruefers', partkey  SMALLINT COMMENT 'the partition key', risikoklasse  INTEGER COMMENT 'Die Risikoklasse ist das Ergebnis der Risikoselektion. fuer eine versicherte Person bezoge', c_rizuak  DECIMAL(16,2) COMMENT 'Abschlusskostensatz auf Risikozuschlag', kzmanuell  INTEGER COMMENT 'Kennzeichen, ob die Risikoklasse vom Sachbearbeiter direkt erfasst wurde', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Risiko-Einschaetzung ist das Ergebnis der Risikopruefung auf der Grundlage der Risikobeschreibung.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenRisikoeinschaetzung: Die Risiko-Einschaetzung ist das Ergebnis' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbbstdbwg (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine aenderung wirksam wird.', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', sbid  INTEGER COMMENT 'id of SbBstdBwg (Eindeutige Kennzeichnung einer Sammelbewegung)', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', statvsumbpfzug  DECIMAL(16,2) COMMENT 'Bei Policierung bzw. technischen Vertragsaenderungen zugehende beitragspflichtige statisti', statvsumbpffrei  DECIMAL(16,2) COMMENT 'Bei technischen Vertragsaenderungen bzw. Abgaengen freiwerdende beitragspflichtige statist', statvsumbfrzug  DECIMAL(16,2) COMMENT 'Bei Policierung bzw. technischen Vertragsaenderungen zugehende beitragsfreie statistische ', statvsumbfrfrei  DECIMAL(16,2) COMMENT 'Bei technischen Vertragsaenderungen bzw. Abgaengen freiwerdende beitragsfreie statistische', statbeitrzug  DECIMAL(16,2) COMMENT 'Bei Policierung bzw. technischen Vertragsaenderungen zugehender statistischer Beitrag', statbeitrfrei  DECIMAL(16,2) COMMENT 'Bei technischen Vertragsaenderungen bzw. Abhaengen freiwerdender statistischer Beitrag', stateinmbeitr  DECIMAL(16,2) COMMENT 'Zugehender statistischer Einmalbeitrag', statanz  INTEGER COMMENT 'Statistische Anzahl (z.B. zum Bilanztermin)', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', statzbsumbpfzug  DECIMAL(16,2) COMMENT 'statistische beitragspflichtige Beitragssumme, zugehend', statzbsumbpffrei  DECIMAL(16,2) COMMENT 'statistische beitragspflichtige Beitragssumme, freiwerdend', statzbsumbfrzug  DECIMAL(16,2) COMMENT 'statistische beitragsfreie Beitragssumme, zugehend', statzbsumbfrfrei  DECIMAL(16,2) COMMENT 'statistische beitragsfreie Beitragssumme, freiwerdend', varianteid  STRING COMMENT 'id of SbBstdBwg (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', statanzpol  INTEGER COMMENT 'Ausweis in der Statistik fuer die statistische Anzahl der Vertraege (Policen)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelbewegung Bestandsbewegung Sammelbewegung Bestandsbewegung zur Fuehrung von Anzahl, statistisch relevanter Versicherungssumme, Jahresbeitrag und Einmalbeitrag.Gruppierungsmerkmale: Fuer die Rechnungslegung relevante Gruppierungsmerkmale.SB-Bestandsb' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbbz (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', wirkbeginn  TIMESTAMP COMMENT 'Termin, ab dem der neue Vertragsstand fachlich wirksam ist.', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', feinbeginn  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Beginn', sbid  INTEGER COMMENT 'id of SbBz (Eindeutige Kennzeichnung einer Sammelbewegung)', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', wirkende  TIMESTAMP COMMENT 'Termin, ab dem der Vertragsstand fachlich nicht mehr wirksam ist.', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', sp  DECIMAL(16,2) COMMENT 'Der Teil des Beitrags, der im Rahmen der Beitragszerlegung dem Deckungskapital zugefuehrt ', feinende  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Ende', rb1  DECIMAL(16,2) COMMENT 'Der Teil des Beitrags fuer die Abdeckung des Todesfallrisikos', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', rb2  DECIMAL(16,2) COMMENT 'Der Teil des Beitrags fuer die Abdeckung des sonstigen Risikos', ris1dk  DECIMAL(16,2) COMMENT 'Risikobeitrag fuer das Todesfallrisiko, der im Rahmen der Beitragszerlegung aus dem Deckun', ris2dk  DECIMAL(16,2) COMMENT 'Risikobeitrag fuer das sonstige Risiko, der im Rahmen der Beitragszerlegung aus dem Deckun', vwkdk  DECIMAL(16,2) COMMENT 'Verwaltungskosten, die im Rahmen der Beitragszerlegung aus dem Deckungskapital entnommen w', sizukdk  DECIMAL(16,2) COMMENT 'Sicherheitszuschlag fuer Hinterbliebenenrente, der im Rahmen der Beitragszerlegung aus dem', rzres  DECIMAL(16,2) COMMENT 'Rechnungsmaessige Zinsen auf das Deckungskapital', rzrb1  DECIMAL(16,2) COMMENT 'Rechnungsmaessige Zinsen auf den Risikobeitrag fuer das Todesfallrisiko', rzrb2  DECIMAL(16,2) COMMENT 'Rechnungsmaessige Zinsen auf den Risikobeitrag fuer das sonstige Risiko', entsp  DECIMAL(16,2) COMMENT 'Dieses Attribut weist die erbrachte (externe) Erlebensfalleistung einer Fortschreibungsper', akla  DECIMAL(16,2) COMMENT 'Die Amortisationskosten sind die laufenden Abschlusskosten, die waehrend der betrachteten ', inka  DECIMAL(16,2) COMMENT 'In diesem Attribut werden im Rahmen der Beitragszerlegung pro Vertragsbaustein die Inkasso', vwka  DECIMAL(16,2) COMMENT 'In diesem Attribut werden im Rahmen der Beitragszerlegung die Verwaltungskosten (inklusive', ratzua  DECIMAL(16,2) COMMENT 'Im Rahmen der Beitragszerlegung (sbbz) ratierlich fuer den Fortschreibungszeitraum ausgewi', btgzu  DECIMAL(16,2) COMMENT 'In diesem Attribut wird die Differenz zwischen Tarif- und Normbeitrag, soweit positiv, aus', vstkk  DECIMAL(16,2) COMMENT 'In den Beitrag eingerechnete Stueckkosten, die bei laufender Beitragszahlung pro Ratenzahl', rizu  DECIMAL(16,2) COMMENT 'Im Rahmen der Beitragszerlegung ratierlich fuer den Fortschreibungszeitraum ausgewiesener ', rizuogp  DECIMAL(16,2) COMMENT 'Eigenstaendiger Risikozuschlag bei Policierung ohne vorherige Gesundheitspruefung', sizuk  DECIMAL(16,2) COMMENT 'Sicherheitszuschlag fuer Hinterbliebenenrente', vtsamink  DECIMAL(16,2) COMMENT 'Absolutbetrag je Zahlweise, um den der Vertragsteil-Beitrag aufgrund Sammelrabatt reduzier', btgrab  DECIMAL(16,2) COMMENT 'Im Rahmen der Beitragszerlegung wird pro Vertragsteil der anteilige Beitragsrabatt fuer de', srab  DECIMAL(16,2) COMMENT 'Summenrabatt', aknz  DECIMAL(16,2) COMMENT 'nicht gezillmerte Abschlusskosten', rizudk  DECIMAL(16,2) COMMENT 'Risikozuschlag, der aus der Deckungsrueckstellung entnommen wird', akdk  DECIMAL(16,2) COMMENT 'Abschlusskosten, die aus der Deckungsrueckstellung entnommen werden.', akldk  DECIMAL(16,2) COMMENT 'Amortisationskosten, die aus der Deckungsrueckstellung entnommen werden.', inkdk  DECIMAL(16,2) COMMENT 'Inkassokosten, die aus der Deckungsrueckstellung entnommen werden.', riueb  DECIMAL(16,2) COMMENT 'Risikoueberschuss der im Rahmen der ueberschussverteilung der FLV gewaehrt wird.', koueb  DECIMAL(16,2) COMMENT 'Kostenueberschuss der im Rahmen der ueberschussverteilung der FLV gewaehrt wird.', zinsueb  DECIMAL(16,2) COMMENT 'Bei leistungspfl. Buz anfallender Zinsueberschuss.', aus_auf_e  DECIMAL(16,2) COMMENT 'Bei der Anlage von Anteilen erhobener Ausgabeaufschlag.', aus_auf_w  DECIMAL(16,2) COMMENT 'Beim Verkauf von Fondsanteilen wiedergutgebrachter Ausgabeaufschlag.', aus_auf_ue  DECIMAL(16,2) COMMENT 'Ausgabeaufschlag, der bei der Anlage vo n ueberschuessen erhoben wird.', aus_auf_z  DECIMAL(16,2) COMMENT 'Bei leistungspfl.BUZ erhobener Ausgabeaufschlag beim Wiederanlegen des Zinsueb. im Fondsve', rbkdk  DECIMAL(16,2) COMMENT 'Risikobezogene Kosten, die aus dem Deckungskapital entnommen werden', kouebrfb  DECIMAL(16,2) COMMENT 'Kostenueberschuss-RfB, der im Rahmen der ueberschussverteilung der FLV gewaehrt wird.', riuebrfb  DECIMAL(16,2) COMMENT 'Risikoueberschuss-RfB, der im Rahmen der ueberschussverteilung der FLV gewaehrt wird.', rueckabschl  DECIMAL(8,6) COMMENT 'Ruecknahmeabschlag in Prozent des Anlagebetrags', umsstempbtrg  DECIMAL(16,2) COMMENT 'Umsatzstempelbetrag, der bei manchen Fonds in der Schweiz erhoben wird', retrobtrg  DECIMAL(16,2) COMMENT 'Betrag der errechneten Retrozessionen', spfvm  DECIMAL(16,2) COMMENT 'Sparbeitrag - Der Teil des Beitrags, der im Rahmen der Beitragszerlegung dem Fondsvermoege', entspfvm  DECIMAL(16,2) COMMENT 'Entsparung - Die Erlebensfalleistung einer Fortschreibungsperiode, die aus dem Fondsvermoe', kokonsfueh  DECIMAL(16,2) COMMENT 'Das Field koKonsFueh enthaelt die Kosten, die dem federfuehrenden VU eines Konsortiums dur', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', vwkdkbil  DECIMAL(16,2) COMMENT 'Verwaltungskosten aus Deckungsrueckstellung einer Zusatzversicherung ohne eigenes Deckungs', ris1dkbil  DECIMAL(16,2) COMMENT 'Risikobeitraege fuer das Todesfallrisiko aus Deckungsrueckstellung einer Zusatzversicherun', varianteid  STRING COMMENT 'id of SbBz (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', aendkw  DECIMAL(16,2) COMMENT 'Aenderung der Bilanzdeckungsrueckstellung durch Aenderung von KW', reswechsel  DECIMAL(16,2) COMMENT 'Aenderung der Bilanzdeckungsrueckstellung aufgrund des Positivteils in der Formel der Nach', ratzuavwk  DECIMAL(16,2) COMMENT 'Ratenzuschlags fuer Verwaltungskosten', ratzuaza  DECIMAL(16,2) COMMENT 'Ratenzuschlags fuer Zinsausfall', ratzuaritod  DECIMAL(16,2) COMMENT 'Ratenzuschlags fuer Risiko Tod', ratzuarison  DECIMAL(16,2) COMMENT 'Ratenzuschlags fuer sonstige Risiken', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', gebwertsicher  DECIMAL(16,2) COMMENT 'jaehrliche Gebuehren fuer Wertsicherung', vwkufa  DECIMAL(16,2) COMMENT 'Verwaltungskosten auf Fondsvermoegen aus Ueberschuessen', garprmtats  DECIMAL(15,2) COMMENT 'Tatsaechlich benoetigter Beitrag zur Absicherung der Garantie', restposition  DECIMAL(15,2) COMMENT 'Zusaetzliche, ergaenzende Ausweisung der Restposition der Beitragszerlegung, die durch Run', garprm  DECIMAL(15,2) COMMENT 'nominelle Garantiegebuehr', erhverrkto  DECIMAL(15,2) COMMENT 'Summierte Erhoehungsbeitraege aller Verrechnungskonten einer Tarifvariante', erhzusprmkto  DECIMAL(15,2) COMMENT 'Summierte Erhoehungsbeitraege aller Verrechnungskonten einer Tarifvariante', inkazuz  DECIMAL(15,2) COMMENT 'In diesem Attribut werden im Rahmen der Beitragszerlegung pro Vertragsbaustein die Inkasso', rizuzuz  DECIMAL(15,2) COMMENT 'Im Rahmen der Beitragszerlegung ratierlich fuer den Fortschreibungszeitraum ausgewiesener ', rizuogpzuz  DECIMAL(15,2) COMMENT 'Eigenstaendiger Risikozuschlag aus Zuzahlung bei Policierung ohne vorherige Gesundheitspru', aknzzuz  DECIMAL(15,2) COMMENT 'nicht gezillmerte Abschlusskosten aus Zuzahlung', spfvmzuz  DECIMAL(15,2) COMMENT 'Sparbeitrag aus Zuzahlung - Der Teil des Beitrags, der im Rahmen der Beitragszerlegung dem', spzuz  DECIMAL(15,2) COMMENT 'Der Teil der Zuzahlung der im Rahmen der Beitragszerlegung dem Deckungskapital zugefuehrt ', c_tbagarbon  DECIMAL(16,2) COMMENT 'Garantiebonusbeitrag', c_sbgarbon  DECIMAL(16,2) COMMENT 'Sparbeitrag aus Direktgutschrift Garantiebonus', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelbewegung Beitragszerlegung Sammelbewegung zur Fuehrung der Werte der Beitragszerlegung.Gruppierungsmerkmale: Fuer die Rechnungslegung relevante Gruppierungsmerkmale.SB-Beitragszerlegung: Sammelbewegung zur Fuehrung der Werte der Beitragszerlegung.T' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbinkasso (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', sbid  INTEGER COMMENT 'id of SbInkasso (Eindeutige Kennzeichnung einer Sammelbewegung)', bearbid  INTEGER COMMENT 'the historical version number (logId)', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', zb  DECIMAL(16,2) COMMENT 'Der je Ratenzahlungsabschnitt (tariflich) faellige Zahlbeitrag. Eine Beitragsreduktion aus', uebverr  DECIMAL(16,2) COMMENT 'Der laufende, vorschuessig zugeteilte Ueberschuss von Vertragsteilen kann zur Verrechnung ', zblvrest  DECIMAL(16,2) COMMENT 'Differenz zwischen lv-Zahlbeitrag und Summe der vt-Zahlbeitraege', wirkbeginn  TIMESTAMP COMMENT 'Termin, ab dem der neue Vertragsstand fachlich wirksam ist.', feinbeginn  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Beginn', wirkende  TIMESTAMP COMMENT 'Termin, ab dem der Vertragsstand fachlich nicht mehr wirksam ist.', feinende  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Ende', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SbInkasso (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'sbInkasso' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbleistwert (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine aenderung wirksam wird.', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', sbid  INTEGER COMMENT 'id of SbLeistWert (Eindeutige Kennzeichnung einer Sammelbewegung)', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', lstver  DECIMAL(16,2) COMMENT 'Im Versicherungsvertrag tariflich vereinbarte Leistung zum Zeitpunkt des Leistungsfalls. D', leistbon  DECIMAL(16,2) COMMENT 'Bonusleistung', lstans  DECIMAL(16,2) COMMENT 'Leistung eines Vertragsteils aus dem Ansammlungsguthaben. Die Leistungen aus der verzinsli', lstsgw  DECIMAL(16,2) COMMENT 'Leistung aus Schlussueberschuessen. Die Leistungen aus Schlussueberschuss werden auf Vertr', latodbon  DECIMAL(16,2) COMMENT 'Todesfalleistung Bonus', zbrat  DECIMAL(16,2) COMMENT 'Anteiliger Zahlbeitrag fuer ein beliebiges Intervall &lt;= Ratenzahlungsabschnitt', uebverrrat  DECIMAL(16,2) COMMENT 'Anteilige Beitragsverrechnung fuer ein beliebiges Intervall &lt;= Ratenzahlungsabschnitt', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SbLeistWert (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', lstfvm  DECIMAL(16,2) COMMENT 'Leistung aus uebriger versicherungstechnischer Rueckstellung', lstrefi  DECIMAL(16,2) COMMENT 'Leistung aus Refinanzierung', lstuebbr  DECIMAL(16,2) COMMENT 'Gesamte Leistung aus Bewertungsreserven', stornoabschlag  DECIMAL(16,2) COMMENT 'Stornoabschlag', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', stornoabschlagva  DECIMAL(16,2) COMMENT 'Stornoabschlag auf das Ansammlungsguthaben', lstuebbrmin  DECIMAL(16,2) COMMENT 'Leistung aus Mindestbeteiligung an Bewertungsreserven', lstuebbrzus  DECIMAL(16,2) COMMENT 'Zusaetzliche Leistung aus Bewertungsreserven', lstzeitwert  DECIMAL(15,2) COMMENT 'Leistung aus dem Zeitwert der Garantie', lstzuskto  DECIMAL(15,2) COMMENT 'Leistung aus dem Zusatzkonto', lstverrkto  DECIMAL(15,2) COMMENT 'Leistung aus Verrechnungskonten', lstsgwfonds  DECIMAL(16,2) COMMENT 'Leistung aus fondsgebundenen Schlussueberschuessen', nachsteuer  DECIMAL(15,2) COMMENT 'Steuerbetrag aus der Nachversteuerung von Praemien', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelbewegung Leistungswerte Sammelbewegung Leistungswerte zur Fuehrung von Auszahlungsbetraegen je Quelle (garantierte Leistung, laufender ueberschuss, Schlussueberschuss) im Rahmen von Leistungsbearbeitungen.Gruppierungsmerkmale: Fuer die Rechnungsleg' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbquotausgl (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', wirkbeginn  TIMESTAMP COMMENT 'Termin, ab dem der neue Vertragsstand fachlich wirksam ist.', sbid  INTEGER COMMENT 'id of SbQuotAusgl (Eindeutige Kennzeichnung einer Sammelbewegung)', feinbeginn  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Beginn', konspartid  INTEGER COMMENT 'id of SbQuotAusgl (Das Field konsPartId identifiziert den Konsortialpartner.)', wirkende  TIMESTAMP COMMENT 'Termin, ab dem der Vertragsstand fachlich nicht mehr wirksam ist.', bearbid  INTEGER COMMENT 'the historical version number (logId)', feinende  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Ende', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', quotausglproperty  INTEGER COMMENT 'Schluesselverzeichnis fuer quotalen Ausgleich', quotausglvalue  DECIMAL(16,2) COMMENT 'Der Wert der Property (das sind immer Geldbetraege)', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SbQuotAusgl (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'sbQuotAusgl' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbstichbwg (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine aenderung wirksam wird.', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', sbid  INTEGER COMMENT 'id of SbStichBwg (Eindeutige Kennzeichnung einer Sammelbewegung)', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', basfrei  DECIMAL(16,2) COMMENT 'Im Rahmen von technischen aenderungen oder Leistungsbearbeitung freiwerdende Basisreserve.', baszug  DECIMAL(16,2) COMMENT 'Im Rahmen von technischen aenderungen oder Policierung zugehende Basisreserve.', nrmresfrei  DECIMAL(16,2) COMMENT 'Im Rahmen von technischen aenderungen oder Leistungsbearbeitung freiwerdende Normreserve.', nrmreszug  DECIMAL(16,2) COMMENT 'Im Rahmen von technischen aenderungen oder Policierung zugehende Normreserve.', tarresfrei  DECIMAL(16,2) COMMENT 'Im Rahmen von technischen aenderungen oder Leistungsbearbeitung freiwerdende Tarifreserve.', tarreszug  DECIMAL(16,2) COMMENT 'Im Rahmen von technischen aenderungen oder Policierung zugehende Tarifreserve.', resvk  DECIMAL(16,2) COMMENT 'Aus dem Einmalbeitrag entnommene einmalige Verwaltungskosten (Inkassokosten) ""vor"" Begin', resak  DECIMAL(16,2) COMMENT 'Aus dem Einmalbeitrag entnommene einmalige Abschlusskosten ""vor"" Beginn der Versicherung', resrizu  DECIMAL(16,2) COMMENT 'Aus dem Einmalbeitrag entnommener einmaliger Risikozuschlag ""vor"" Beginn der Versicherun', resrizuogp  DECIMAL(16,2) COMMENT 'Aus dem Einmalbeitrag entnommener einmaliger Risikozuschlag ""vor"" Beginn der Versicherun', drfrei  DECIMAL(16,2) COMMENT 'Alle sonstigen Bewegungen, bei denen Reserve aufgeloest wird (z.B. Leistungsfaelle)', drzug  DECIMAL(16,2) COMMENT 'Alle sonstigen Bewegungen, bei denen die Reserve aufgefuellt wird.', spbtrg  DECIMAL(16,2) COMMENT 'Durch Einmalbeitrag eingebrachter Sparbeitrag.', zubtrg  DECIMAL(16,2) COMMENT 'In diesem Attribut wird im Falle des Einmalbeitrags die Differenz zwischen Tarif- und Norm', aufdr  DECIMAL(16,2) COMMENT 'Barwert der Differenz zwischen Norm- und Tarifbeitrag, falls positiv. Hier wird die Bewegu', inkakor  DECIMAL(16,2) COMMENT 'Korrektur der Inkassokosten (inklusive Sammelinkassorabatt) bei technischen Aenderungen.', ratzuakor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags bei technischen Aenderungen', vstkkkor  DECIMAL(16,2) COMMENT 'Korrektur der Stueckkosten (pro Ratenzahlung gemaess Zahlweise eingerechnet) bei technisch', vtsaminkkor  DECIMAL(16,2) COMMENT 'Korrektur der Reduktion des Sammelrabatts bei technischen Aenderungen. [Siehe sbbz.vtsamin', drfvmfrei  DECIMAL(16,2) COMMENT 'Freiwerdende Reserve aus dem Fondsvermoegen', drfvmzug  DECIMAL(16,2) COMMENT 'Zufluss zur Reserve aus dem Fondsvermoegen', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SbStichBwg (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', auffuellbedarf  DECIMAL(16,2) COMMENT 'Auffuellungsbedarf bei Renten fuer die Neubewertung aufgrund der neuen Sterbetafeln.', aendrefi  DECIMAL(16,2) COMMENT 'Aenderung der Bilanzdeckungsrueckstellung aufgrund der Aenderung des Refinanzierungskontos', vazug  DECIMAL(16,2) COMMENT 'Wird im Rahmen einer Stichtagsbearbeitung ein Geldbetrag dem Konto der Verzinslichen Ansam', vafrei  DECIMAL(16,2) COMMENT 'Wird im Rahmen einer Stichtagsbearbeitung ein Geldbetrag der Verzinslichen Ansammlung entn', sgrfrei  DECIMAL(16,2) COMMENT 'Wird im Rahmen einer Stichtagsbearbeitung ein Geldbetrag aus dem Schlussueberschuss entnom', ratzuavwkkor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags fuer Verwaltungskosten bei technischen Aenderungen', ratzuazakor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags fuer Zinsausfall bei technischen Aenderungen', ratzuaritodkor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags fuer Risiko Tod bei technischen Aenderungen', ratzuarisonkor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags fuer sonstige Risiken bei technischen Aenderungen', partkey  SMALLINT COMMENT 'the partition key', vwkreszug  DECIMAL(16,2) COMMENT 'Im Rahmen von Vertragsbearbeitungen zugehende Verwaltungskostenreserve', vwkresfrei  DECIMAL(16,2) COMMENT 'Im Rahmen von Vertragsbearbeitungen frei werdende Verwaltungskostenreserve', nettoreszug  DECIMAL(16,2) COMMENT 'Im Rahmen von Vertragsbearbeitungen zugehende (ungezillmerte) Nettoreserve', nettoresfrei  DECIMAL(16,2) COMMENT 'Im Rahmen von Vertragsbearbeitungen frei werdende (ungezillmerte) Nettoreserve', zillreszug  DECIMAL(16,2) COMMENT 'Im Rahmen von Vertragsbearbeitungen zugehende gezillmerte Nettoreserve (Zillmerreserve)', zillresfrei  DECIMAL(16,2) COMMENT 'Im Rahmen von Vertragsbearbeitungen frei werdende gezillmerte Nettoreserve (Zillmerreserve', akverlust  DECIMAL(16,2) COMMENT 'Im Rahmen von Vertragsbearbeitungen realisierter Abschlusskostenverlust (abgehende aktivie', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', sueafuebbrfrei  DECIMAL(16,2) COMMENT 'Wird im Rahmen einer Stichtagsbearbeitung ein Geldbetrag aus der Beteiligung an Bewertungs', akverlustkoba  DECIMAL(16,2) COMMENT 'Im Rahmen von Vertragsbearbeitungen der aus Zillmerung von Fondsguthaben resultierende Tei', fvmzug  DECIMAL(16,2) COMMENT 'Zugang Fondsvermoegen aus Ueberschuessen (fuer uebrige versicherungstechnische Rueckstellu', fvmfrei  DECIMAL(16,2) COMMENT 'Abgang Fondsvermoegen aus Ueberschuessen (fuer uebrige versicherungstechnische Rueckstellu', auffllerlklzug  DECIMAL(16,2) COMMENT 'Zugang zur klassischen Auffuellung fuer Nachreservierungstyp Erleben (ERL)', auffllzinsklzug  DECIMAL(16,2) COMMENT 'Zugang zur klassischen Auffuellung fuer Nachreservierungstyp Zinszusatzreserve (ZINS)', auffllbuklzug  DECIMAL(16,2) COMMENT 'Zugang zur klassischen Auffuellung fuer Nachreservierungstyp Berufsunfaehigkeit (BU)', auffllzinsvazug  DECIMAL(16,2) COMMENT 'Zugang zur Auffuellung fuer Verzinsliche Ansammlung fuer Nachreservierungstyp Zinszusatzre', auffllerlklfrei  DECIMAL(16,2) COMMENT 'Freiwerden von klassischen Auffuellung fuer Nachreservierungstyp Erleben (ERL)', auffllzinsklfrei  DECIMAL(16,2) COMMENT 'Freiwerden von klassischen Auffuellung fuer Nachreservierungstyp Zinszusatzreserve (ZINS)', auffllbuklfrei  DECIMAL(16,2) COMMENT 'Freiwerden von klassischen Auffuellung fuer Nachreservierungstyp Berufsunfaehigkeit (BU)', auffllzinsvafrei  DECIMAL(16,2) COMMENT 'Freiwerden von Auffuellung fuer Verzinsliche Ansammlung fuer Nachreservierungstyp Zinszusa', auffllgdrzug  DECIMAL(16,2) COMMENT 'Erhoehung der Differenz zwischen Reserve incl. Zusatzreserve (Bilanzdeckungsrueckstellung ', auffllgdrfrei  DECIMAL(16,2) COMMENT 'Verminderung der Differenz zwischen Reserve incl. Zusatzreserve (Bilanzdeckungsrueckstellu', auffllgaazug  DECIMAL(16,2) COMMENT 'Erhoehung der Differenz zwischen aktivierbaren Anspruechen nach den alten und den neuen Re', auffllgaafrei  DECIMAL(16,2) COMMENT 'Verminderung der Differenz zwischen aktivierbaren Anspruechen nach den alten und den neuen', lstsgwredrefi  DECIMAL(16,2) COMMENT 'Kuerzung der Leistung aus Schlussueberschuss bei Refinanzierung', resakzuz  DECIMAL(16,2) COMMENT 'Abschlusskosten auf Zuzahlung bei Policierung mit Zuzahlung oder Abschlusskosten auf Zulag', sueafuebbrminfrei  DECIMAL(16,2) COMMENT 'In sueafUebbrFrei enthaltene Bewegung aus Mindestbeteiligung an Bewertungsreserven', sueafuebbrzusfrei  DECIMAL(16,2) COMMENT 'In sueafUebbrFrei enthaltene und ueber die Mindestbeteiligung an Bewertungsreserven hinaus', stoabdkbfr  DECIMAL(16,2) COMMENT 'Stornoabschlag auf DK bei der Beitragsfreistellung', stoabbfrkonten  DECIMAL(16,2) COMMENT 'Stornoabschlag bei Beitragsfreistellung zur Entnahme aus kontenbasiertem Vermoegen', auffllbilrzzug  DECIMAL(16,2) COMMENT 'Zugang zur Auffuellung fuer Nachreservierungstyp BILRZ', auffllbilrzfrei  DECIMAL(16,2) COMMENT 'Freiwerden von Auffuellung fuer Nachreservierungstyp BILRZ', auffllbilrzkbzug  DECIMAL(16,2) COMMENT 'Zugang zur Auffuellung fuer Nachreservierungstyp BILRZ kontenbasiert', auffllbilrzkbfrei  DECIMAL(16,2) COMMENT 'Freiwerden von Auffuellung fuer Nachreservierungstyp BILRZ kontenbasiert', sgrumwdr  DECIMAL(15,2) COMMENT 'Umwandlung Schlussgewinn in Deckungsrueckstellung', sueafuebbrumwdr  DECIMAL(15,2) COMMENT 'Umwandlung Ueberschuesse aus Bewertungsreserven in Deckungsrueckstellung', vaumwdr  DECIMAL(15,2) COMMENT 'Umwandlung Verzinsliche Ansammlung in Deckungsrueckstellung', fvmuebumwdr  DECIMAL(15,2) COMMENT 'Umwandlung Fondsvermoegen aus Ueberschuessen in Deckungsrueckstellung', entnrueckbtg  DECIMAL(15,2) COMMENT 'Das durch Entnahme rueckstaendiger Beitraege freigewordene Guthaben', restbetrag  DECIMAL(15,2) COMMENT 'Restbetrag bei Umwandlung in Deckungsrueckstellung', guthabenzvumwdr  DECIMAL(15,2) COMMENT 'Guthaben fuer Verrentung aus einer ZusatzversicherungRestbetrag bei Umwandlung in Deckungs', verrktofrei  DECIMAL(15,2) COMMENT 'Freiwerdenes Kapital aus Verrechnungskonten', zusprmktofrei  DECIMAL(15,2) COMMENT 'Freiwerdenes Kapital aus Zusatzpraemienkonten', zusguthktofrei  DECIMAL(15,2) COMMENT 'Freiwerdenes Kapital aus Zusatzguthabenkonten', zeitwertgarfrei  DECIMAL(15,2) COMMENT 'Freiwerden des Zeitwerts der Garantie', zeitwertgarzug  DECIMAL(15,2) COMMENT 'Zugang zum Zeitwert der Garantie', verrktozug  DECIMAL(15,2) COMMENT 'In Verrechnungskonten zugehendes Kapital', zusprmktozug  DECIMAL(15,2) COMMENT 'In Zusatzpraemienkonten zugehendes Kapital', zusguthktozug  DECIMAL(15,2) COMMENT 'Zugehendes Kapital in Zusatzguthabenkonten', entndk  DECIMAL(15,2) COMMENT 'Entnahme aus Deckungskapital', erhdruebzielres  DECIMAL(15,2) COMMENT 'Erhoehung der Deckungsrueckstellung aus dem Konto bedingter Ueberschuesse zur Finanzierung', sgruebzielr  DECIMAL(15,2) COMMENT 'Schlussgewinn in Konto bedingter Ueberschuesse zur Finanzierung der Zielreserve', sueafuebbruebzielr  DECIMAL(15,2) COMMENT 'Ueberschuesse aus Bwertungsreserven aus Schlussueberschussanteilfonds in Konto bedingter U', vauebzielr  DECIMAL(15,2) COMMENT 'Verzinsliche Ansammlung in Konto bedingter Ueberschuesse zur Finanzierung der Zielreserve', fvmuebuebzielr  DECIMAL(15,2) COMMENT 'Fondsvermoegen aus Ueberschuessen in Konto bedingter Ueberschuesse zur Finanzierung der Zi', sgrfvmfrei  DECIMAL(15,2) COMMENT 'Freiwerdende Reserve aus fondsgebundenen Schlussueberschuessen', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelbewegung Stichtagsbewegung Sammelbewegung Stichtagsbewegungen zur Fuehrung einzelner stichtagsbezogener Reserveaenderungen (Abschlusskosten, Verwaltungskosten, Risikozuschlaege, Abgang des Vertrags, sonstiges) z.B. bei Policierung, Abgaengen oder t' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbuebverw (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', wirkbeginn  TIMESTAMP COMMENT 'Termin, ab dem der neue Vertragsstand fachlich wirksam ist.', feinbeginn  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Beginn', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', sbid  INTEGER COMMENT 'id of SbUebVerw (Eindeutige Kennzeichnung einer Sammelbewegung)', vsys  INTEGER COMMENT 'id of SbUebVerw (Systematik fuer die ueberschuss - Verwendung: ratierlich oder Stichtag)', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', wirkende  TIMESTAMP COMMENT 'Termin, ab dem der Vertragsstand fachlich nicht mehr wirksam ist.', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', feinende  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Ende', vva  DECIMAL(16,2) COMMENT 'ueberschussanteil, der in die verzinsliche Ansammlung fliesst.', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', vbon  DECIMAL(16,2) COMMENT 'ueberschussanteil, der in den Bonus fliesst.', vbarr  DECIMAL(16,2) COMMENT 'ueberschussanteil, der bar ausgezahlt wird.', vver  DECIMAL(16,2) COMMENT 'ueberschussanteil, der fuer die Beitragsverrechnung verwendet wird.', vtodbon  DECIMAL(16,2) COMMENT 'ueberschussanteil, der fuer den Todesfall-Sofortbonus verwendet wird.', anteilausrfb  DECIMAL(12,8) COMMENT 'Aus der RfB stammender Anteil pro ueberschussverwendung (der Rest stammt aus Direktgutschr', vfonds  DECIMAL(16,2) COMMENT 'Aufwand Fondsanteile - ueberschussanteil, der in Fondsanteilen angelegt wird.', vsofortbon  DECIMAL(16,2) COMMENT 'Aufwand-Sofortbonus (nicht Todesfall) - ueberschussanteil, der fuer den Sofortbonus verwen', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', vfondsbil  DECIMAL(16,2) COMMENT 'Aufwand Fondsanteile - ueberschussanteil, angefallen an einer Zusatzversicherung ohne eige', varianteid  STRING COMMENT 'id of SbUebVerw (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', bewresantausrfb  DECIMAL(12,8) COMMENT 'Fuer Ueberschuesse aus Bewertungsreserven: Aus Rfb stammender Anteil pro Ueberschussverwen', bewresvbar  DECIMAL(16,2) COMMENT 'Ueberschuesse aus Bewertungsreserven als Barauszahlung (kein davon-Wert, zusaetzlich zu vb', bewresvbon  DECIMAL(16,2) COMMENT 'Ueberschuesse aus Bewertungsreserven zur Erhoehung der Bonusleistung (kein davon-Wert, zus', uebtransferabgrfb  DECIMAL(15,2) COMMENT 'Betrag der lfd. Ueberschuesse aus RfB, der von einem Vertragsteil an einen oder mehrere an', uebtransferabgdg  DECIMAL(15,2) COMMENT 'Betrag der lfd. Ueberschuesse aus Dg, der von einem Vertragsteil an einen oder mehrere and', uebtransferaufnrfb  DECIMAL(15,2) COMMENT 'Betrag der lfd. Ueberschuesse aus RfB, der von einem oder mehreren Vertragsteilen an diese', uebtransferaufndg  DECIMAL(15,2) COMMENT 'Betrag der lfd. Ueberschuesse aus Dg, der von einem oder mehreren Vertragsteilen an diesen', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelbewegung ueberschussverwendung Sammelbewegung zur Dokumentation des verwendeten ueberschusses, aufgegliedert auf die einzelnen Verwendungsarten.Gruppierungsmerkmale: Fuer die Rechnungslegung relevante Gruppierungsmerkmale.SB-Ueberschussverwendung: ' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbuebzu (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', wirkbeginn  TIMESTAMP COMMENT 'Termin, ab dem der neue Vertragsstand fachlich wirksam ist.', feinbeginn  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Beginn', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', sbid  INTEGER COMMENT 'id of SbUebZu (Eindeutige Kennzeichnung einer Sammelbewegung)', zutsys  INTEGER COMMENT 'id of SbUebZu (Systematik fuer die ueberschuss - Zuteilung: nachschuessig, vorschuessig ra', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', wirkende  TIMESTAMP COMMENT 'Termin, ab dem der Vertragsstand fachlich nicht mehr wirksam ist.', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', feinende  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Ende', uebverwsys  INTEGER COMMENT 'Eindeutige Identifizierung eines ueberschussverwendungssystems.', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', risdir  DECIMAL(16,2) COMMENT 'Zugeteilter Risikoueberschuss aus der Direktgutschrift.', risrfb  DECIMAL(16,2) COMMENT 'Zugeteilter Risikoueberschuss aus der RfB.', grdir  DECIMAL(16,2) COMMENT 'Zugeteilter Grundueberschuss aus der Direktgutschrift.', grrfb  DECIMAL(16,2) COMMENT 'Zugeteilter Grundueberschuss aus der RfB.', zidir  DECIMAL(16,2) COMMENT 'Zugeteilter Zinsueberschuss aus der Direktgutschrift.', zirfb  DECIMAL(16,2) COMMENT 'Zugeteilter Zinsueberschuss aus der RfB.', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SbUebZu (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', anzirfbbed  DECIMAL(16,2) COMMENT 'Bedingte Zinsen auf das Ansammlungsguthaben aus der RfB', anzidirbed  DECIMAL(16,2) COMMENT 'Bedingte Zinsen auf das Ansammlungsguthaben aus der Direktgutschrift', refizidir  DECIMAL(16,2) COMMENT 'Zinsen auf das Refinanzierungskonto aus der Direktgutschrift.', refizirfb  DECIMAL(16,2) COMMENT 'Zinsen auf das Refinanzierungskonto aus der RfB.', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', bewresdir  DECIMAL(16,2) COMMENT 'Zugeteilter Ueberschuss fuer Bewertungsreserven aus Direktgutschrift', bewresrfb  DECIMAL(16,2) COMMENT 'Zugeteilter Ueberschuss fuer Bewertungsreserven aus RfB', bewresmindir  DECIMAL(16,2) COMMENT 'Zugeteilter Ueberschuss fuer Mindestbeteiligung an Bewertungsreserven aus Direktgutschrift', bewresminrfb  DECIMAL(16,2) COMMENT 'Zugeteilter Ueberschuss fuer Mindestbeteiligung an Bewertungsreserven aus Rfb', fondskickback  DECIMAL(15,2) COMMENT 'Fondskickbacks im Rahmen der laufenden (Kosten-) Ueberschussbeteiligung (nicht nach RfB un', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelbewegung ueberschusszuteilung Sammelbewegung zur Dokumentation des zugeteilten ueberschusses, aufgegliedert auf die einzelnen ueberschussentstehungsquellen.Gruppierungsmerkmale: Fuer die Rechnungslegung relevante Gruppierungsmerkmale.SB-Ueberschuss' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sbverzans (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', wirkbeginn  TIMESTAMP COMMENT 'Termin, ab dem der neue Vertragsstand fachlich wirksam ist.', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', feinbeginn  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Beginn', sbid  INTEGER COMMENT 'id of SbVerzAns (Eindeutige Kennzeichnung einer Sammelbewegung)', standid  INTEGER COMMENT 'Zuordnung einer Bewegung zu einem (historischen) Vertragsstand', wirkende  TIMESTAMP COMMENT 'Termin, ab dem der Vertragsstand fachlich nicht mehr wirksam ist.', bwggrdid  INTEGER COMMENT 'Eindeutige Identifikation der Ursache fuer bestimmte Kontobewegungen, die in Form einer Sa', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, enthaelt die bearbIdSto des aktuellen Vorgangs die bearbI', anzir  DECIMAL(16,2) COMMENT 'Absolutbetrag der Zinsen auf das verzinsliche Ansammlungsguthaben', feinende  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit-Ende', anzidir  DECIMAL(16,2) COMMENT 'Zinsen auf das Ansammlungsguthaben aus Direktgutschrift', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', anzirfb  DECIMAL(16,2) COMMENT 'Zinsen auf das Ansammlungsguthaben aus der RfB', vwkans  DECIMAL(16,2) COMMENT 'Verwaltungskosten auf das verzinsliche Ansammlungsguthaben bei Verzinsung des Ansammlungsg', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SbVerzAns (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', refizir  DECIMAL(16,2) COMMENT 'Rechnungsmaessige Zinsen auf das Refinanzierungskonto', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelbewegung Verzinsung Ansammlungsguthaben Sammelbewegung zur Dokumentation der Verzinsung des Ansammlungsguthabens, aufgegliedert nach Finanzierungsquelle (rechnungsmaessig, Direktgutschrift, aus RfB)Gruppierungsmerkmale: Fuer die Rechnungslegung rel' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_skbilwert (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbdatsto  TIMESTAMP COMMENT 'Bearbeitungstermin des stornierenden Vorgangs', bilaa  DECIMAL(16,2) COMMENT 'Aktivierte Ansprueche zum Bilanztermin.', bilnrmres  DECIMAL(16,2) COMMENT 'Normreserve am Bilanztermin', biltarres  DECIMAL(16,2) COMMENT 'Tarifreserve am Bilanztermin', bilbub  DECIMAL(16,2) COMMENT 'Beitragsuebertrag zum Bilanztermin.', bildr  DECIMAL(16,2) COMMENT 'Das Deckungskapital ist eine Rechengroesse, die den Wert eines Vertrages bzw. eines Vertra', bonres  DECIMAL(16,2) COMMENT 'Bonusreserve', statanz  INTEGER COMMENT 'Statistische Anzahl (z.B. zum Bilanztermin)', statanzbfr  INTEGER COMMENT 'Statistische Anzahl beitragsfreier Vertraege (z.B. zum Bilanztermin)', statbeitr  DECIMAL(16,2) COMMENT 'Statistischer Beitrag (z.B. zum Bilanztermin)', statvsum  DECIMAL(16,2) COMMENT 'Statistische Versicherungssumme (z.B. zum Bilanztermin)', statvsumbfr  DECIMAL(16,2) COMMENT 'Beitragsfreie statistische Versicherungssumme (z.B. zum Bilanztermin)', risikosumme  DECIMAL(16,2) COMMENT 'Pro VT oder VB unter Risiko stehende Summe (""brutto"", d.h. ohne Abzug von DK o.ae.)', riskap1  DECIMAL(16,2) COMMENT 'Riskiertes Kapital bezueglich der ersten versicherten Risikoart.', riskap2  DECIMAL(16,2) COMMENT 'Riskiertes Kapital bezueglich der zweiten versicherten Risikoart.', bilsgr  DECIMAL(16,2) COMMENT 'Rueckstellung fuer den Schlussueberschuss', gebsgrb  DECIMAL(16,2) COMMENT 'gebundene Rueckstellung fuer den Schlussueberschuss', btgrest  DECIMAL(16,2) COMMENT 'Die Differenz zwischen sollgestelltem und inkassiertem Beitrag.', zusrkstrente  DECIMAL(16,2) COMMENT 'Rueckstellung fuer einen pauschal kalkulierten Rentenzuschlag', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine aenderung wirksam wird.', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', statzbsum  DECIMAL(16,2) COMMENT 'statistische Beitragssumme', statzbsumbfr  DECIMAL(16,2) COMMENT 'statistische beitragsfreie Beitragssumme', varianteid  STRING COMMENT 'id of SkBilWert (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', kzschadenresbuz  SMALLINT COMMENT 'Kennzeichen fuer die BUZ-Schadenreserve.', kzschadenrestod  SMALLINT COMMENT 'Kennzeichen fuer die Tod-Schadenreserve.', negbildr  DECIMAL(16,2) COMMENT 'Kann ein Teil einer negativen Basisreserve nicht aktiviert werden, so wird dieser Teil hie', basisuebbr  DECIMAL(16,2) COMMENT 'einzelvertragliche Basisgroesse zur Berechnung der Ueberschuesse aus Bewertungsreserven', partkey  SMALLINT COMMENT 'the partition key', bilzillres  DECIMAL(16,2) COMMENT 'gezillmerte Nettoreserve (Zillmerreserve) am Bilanztermin', bilnettores  DECIMAL(16,2) COMMENT '(ungezillmerte) Nettoreserve am Bilanztermin', bonnettores  DECIMAL(16,2) COMMENT 'Bonus-Nettoreserve am Bilanztermin', bilvwkres  DECIMAL(16,2) COMMENT 'Verwaltungskostenreserve am Bilanztermin', bonvwkres  DECIMAL(16,2) COMMENT 'Bonus-Verwaltungskostenreserve am Bilanztermin', bilnettobub  DECIMAL(16,2) COMMENT 'Netto-Beitragsuebertrag zum Bilanztermin', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', bilnachres  DECIMAL(16,2) COMMENT 'Reserve mit den Rechnungsgrundlagen fuer die Nachreservierung am Bilanztermin', bilauffuellbasis  DECIMAL(16,2) COMMENT 'Reserve mit den Rechnungsgrundlagen fuer die Bilanzierung zum Beginn der Nachreservierung ', gebsueafuebbr  DECIMAL(16,2) COMMENT 'Gebundene Rueckstellung fuer die gesamte Leistung aus Bewertungsreserven', bilsueafuebbr  DECIMAL(16,2) COMMENT 'freie Rueckstellung (frei innerhalb der RfB) fuer die Leistung aus Bewertungsreserven, i.d', bilaakoba  DECIMAL(16,2) COMMENT 'Aktivierte Ansprueche aus Zillmerung von Fondsguthaben zum Bilanztermin.', aktivwert  DECIMAL(16,8) COMMENT 'Bei Rueckdeckungsversicherungen vom VN am Wirksamkeitstermin zu aktivierender Wert.', aktivwertp1mon  DECIMAL(16,8) COMMENT 'Bei Rueckdeckungsversicherungen vom VN einen Monat nach dem Wirksamkeitstermin zu aktivier', psvwertp1mon  DECIMAL(16,8) COMMENT 'Bemessungsgrundlage des Beitrags zum Pensions-Sicherungs-Verein (PSV) bei Direktversicheru', psvwert  DECIMAL(16,8) COMMENT 'Bemessungsgrundlage des Beitrags zum Pensions-Sicherungs-Verein (PSV) bei Direktversicheru', kumauffuellbedarf  DECIMAL(16,2) COMMENT 'Kumulierter Auffuellungsbedarf bei Renten fuer die Neubewertung aufgrund der neuen Sterbet', refikap  DECIMAL(16,2) COMMENT 'Refinanzierungskapital', wertstand  DECIMAL(16,2) COMMENT 'Wertstand des Vertragsteils (ohne Beitragsuebertrag)', auffllerlkl  DECIMAL(16,2) COMMENT 'Klassische Auffuellung fuer Nachreservierungstyp Erleben (ERL)', auffllzinskl  DECIMAL(16,2) COMMENT 'Klassische Auffuellung fuer Nachreservierungstyp Zinszusatzreserve (ZINS)', auffllbukl  DECIMAL(16,2) COMMENT 'Klassische Auffuellung fuer Nachreservierungstyp Berufsunfaehigkeit (BU)', auffllzinsva  DECIMAL(16,2) COMMENT 'Klassische Auffuellung fuer Verzinslicher Ansammlung fuer Nachreservierungstyp Zinszusatzr', auffllraa  DECIMAL(16,2) COMMENT 'Reduktion aktivierbarer Ansprueche aus Auffuellung bei Nachreservierung', auffllgdr  DECIMAL(16,2) COMMENT 'Differenz zwischen Reserve incl. Zusatzreserve (Bilanzdeckungsrueckstellung nach den neuen', auffllgaa  DECIMAL(16,2) COMMENT 'Differenz zwischen aktivierbaren Anspruechen nach den alten und den neuen Rechnungsgrundla', ausglherlkl  DECIMAL(16,2) COMMENT 'Bei Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastung durch die Neu', ausglhzinslkl  DECIMAL(16,2) COMMENT 'Bei Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastung durch die Neu', ausglhzinsva  DECIMAL(16,2) COMMENT 'Bei Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastung durch die Neu', bilsgrredrefi  DECIMAL(16,2) COMMENT 'Kuerzung der Schlussueberschussreserve bei Refinanzierung', gebsgrbredrefi  DECIMAL(16,2) COMMENT 'Kuerzung der gebundenen Schlussueberschussreserve bei Refinanzierung', aufstockbg  DECIMAL(16,2) COMMENT 'Aufstockung der Deckungsrueckstellung wegen Beitragsgarantie (beim Sollstellungsriester un', checkdr  DECIMAL(16,2) COMMENT 'Kontrollreserve', checkdrvgl  DECIMAL(16,2) COMMENT 'Vergleichsgroesse zur Kontrollreserve', gebsueafuebbrmin  DECIMAL(16,2) COMMENT 'Gebundene Rueckstellung fuer die Leistung aus Mindestbeteiligung an Bewertungsreserven', gebsueafuebbrzus  DECIMAL(16,2) COMMENT 'Gebundene Rueckstellung fuer die zusaetzliche Leistung aus Bewertungsreserven', basres  DECIMAL(16,2) COMMENT 'Basisreserve am Bilanztermin', bonbasres  DECIMAL(16,2) COMMENT 'Bonus-Basisreserve am Bilanztermin', kzschadenrespflege  INTEGER COMMENT 'Kennzeichen fuer die Pflegerenten-Schadenreserve', auffllbilrz  DECIMAL(16,2) COMMENT 'Auffuellung fuer Nachreservierungstyp BILRZ', ausglhbilrz  DECIMAL(16,2) COMMENT 'Bei Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastung durch untersc', ausglsbilrz  DECIMAL(16,2) COMMENT 'Bei Refinanzierung wird hier die Belastung durch die Neubewertung aus unterschiedlichen bi', auffllbilrzkb  DECIMAL(16,2) COMMENT 'Auffuellung fuer Nachreservierungstyp BILRZ kontenbasiert', ausglhbilrzkb  DECIMAL(16,2) COMMENT 'Bei Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastung durch untersc', renueb  DECIMAL(15,2) COMMENT 'Rentenuebertrag', bilbubuebverr  DECIMAL(15,2) COMMENT 'Beitragsuebertrag bezogen auf die Ueberschussverrechnung', kzschadenresdd  INTEGER COMMENT 'Kennzeichen fuer die Dread Disease-Schadenreserve', herderueckstell  DECIMAL(15,2) COMMENT 'Herde-Rueckstellung', gargebverrkto  DECIMAL(15,2) COMMENT 'Summierter Stand aller Verrechnungskonten einer Tarifvariante', zusguthkto  DECIMAL(15,2) COMMENT 'Zusatzguthaben einer Tarifvariante', zusprmkto  DECIMAL(15,2) COMMENT 'Summierter Stand aller Zusatzpraemienkonten einer Tarifvariante', basisuebbrkg1  DECIMAL(15,2) COMMENT 'Einzelvertragliche Basisgroesse gemaess Kommunikationsgroesse 1 der GDV-Ausarbeitung zur B', auffllzinsvaren  DECIMAL(15,2) COMMENT 'Auffuellung fuer Verzinsliche Ansammlung fuer Nachreservierungstyp Zins, aus Rentenbezugsz', auffllerlva  DECIMAL(15,2) COMMENT 'Auffuellung fuer Verzinsliche Ansammlung fuer Nachreservierungstyp Erleben', auffllerlvaren  DECIMAL(15,2) COMMENT 'Auffuellung fuer Verzinsliche Ansammlung fuer Nachreservierungstyp Erleben, aus Rentenbezu', ausglhzinsvaren  DECIMAL(15,2) COMMENT 'Bei Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastung durch die Neu', ausglherlva  DECIMAL(15,2) COMMENT 'Bei Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastung durch die Neu', ausglherlvaren  DECIMAL(15,2) COMMENT 'Bei Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastung durch die Neu', uebzielres  DECIMAL(15,2) COMMENT 'Konto zum Aufsammeln bedingter Ueberschuesse zur Finanzierung der Zielreserve', ausglhbilrzev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglhbilrzkbev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglherlklev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglherlvaev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglherlvarenev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglhzinslklev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglhzinsvaev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglhzinsvarenev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglsbilrzev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglsbilrzkbev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglserlklev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglserlvaev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglserlvarenev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglszinslklev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglszinsvaev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglszinsvarenev  DECIMAL(15,2) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglhbilrztk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglhbilrzkbtk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglherlkltk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglherlvatk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglherlvarentk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglhzinslkltk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglhzinsvatk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglhzinsvarentk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglsbilrztk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus unte', ausglsbilrzkbtk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus unte', ausglserlkltk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus Erle', ausglserlvatk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus Erle', ausglserlvarentk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus Erle', ausglszinslkltk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus Zins', ausglszinsvatk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus Zins', ausglszinsvarentk  DECIMAL(15,2) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus Zins', statanzpol  INTEGER COMMENT 'Ausweis in der Statistik fuer die statistische Anzahl der Vertraege (Policen)', auffllraaerl  DECIMAL(15,2) COMMENT 'Reduktion aktivierbarer Ansprueche aus Auffuellung bei Nachreservierung Erleben', auffllraazins  DECIMAL(15,2) COMMENT 'Reduktion aktivierbarer Ansprueche aus Auffuellung bei Nachreservierung Zins (Zinszusatzre', akresrkg  DECIMAL(15,2) COMMENT 'Reserve Abschlusskosten Rueckgewaehr', akresrkgmod  DECIMAL(15,2) COMMENT 'Reserve Abschlusskosten Rueckgewaehr modifiziert mit Stornogewichtung', c_tarresgarbon  DECIMAL(16,2) COMMENT 'Tarifreserve Garantiebonus', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelkontostand Bilanzwerte Kontostaende, die im Rahmen der Beitragszerlegung und bei technischen aenderungen ermittelt und zum Bilanztermin ausgewiesen werden.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenSK-' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_skfondsanteil (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', fondsid  INTEGER COMMENT 'id of SkFondsanteil (Interne Kennummer eines Fonds)', anteile  DECIMAL(22,8) COMMENT 'Anteile eines Fonds bzw. einer Waehrung.', bearbdatsto  TIMESTAMP COMMENT 'Bearbeitungstermin des stornierenden Vorgangs', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine aenderung wirksam wird.', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SkFondsanteil (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', nachres_fa_anteile  DECIMAL(22,8) COMMENT 'Anteile fuer nachres_FA, fuer Nachreservierung zu FA-Anteilen', refi_fa_anteile  DECIMAL(22,8) COMMENT 'Anteile fuer refi_FA, fuer Refinanzierung zu FA-Anteilen', auffllerl_anteile  DECIMAL(22,8) COMMENT 'Fondsanteile zur Auffuellung fuer Nachreservierungstyp Erleben (ERL)', auffllzins_anteile  DECIMAL(22,8) COMMENT 'Fondsanteile zur Auffuellung fuer Nachreservierungstyp Zinszusatzreserve (ZINS)', anteilesuea  DECIMAL(22,8) COMMENT 'Fondsanteile aus Schlussueberschuessen', anteilegebsuea  DECIMAL(22,8) COMMENT 'Fondsanteile aus gebundenen Schlussueberschuessen', ausglherlanteileev  DECIMAL(22,8) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglhzinsanteileev  DECIMAL(22,8) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier der bereits gegenfinanzierte Teil der Bel', ausglserlanteileev  DECIMAL(22,8) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglszinsanteileev  DECIMAL(22,8) COMMENT 'Bei einzelvertraglicher Refinanzierung wird hier die Belastung durch die Neubewertung aus ', ausglherlanteiletk  DECIMAL(22,8) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglhzinsanteiletk  DECIMAL(22,8) COMMENT 'Bei teilkollektiver Refinanzierung wird hier der bereits gegenfinanzierte Teil der Belastu', ausglserlanteiletk  DECIMAL(22,8) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus Erle', ausglszinsanteiletk  DECIMAL(22,8) COMMENT 'Bei teilkollektiver Refinanzierung wird hier die Belastung durch die Neubewertung aus Zins', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelkonto fuer Fondsanteile' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_skquotausgl (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', konspartid  INTEGER COMMENT 'id of SkQuotAusgl (Das Field konsPartID identifiziert den Konsortialpartner.)', varianteid  STRING COMMENT 'id of SkQuotAusgl (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', bearbdatsto  TIMESTAMP COMMENT 'Bearbeitungstermin des stornierenden Vorgangs', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', konsortid  INTEGER COMMENT 'identifiziert den Konsortialpartner', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', mandantid  INTEGER COMMENT 'Das Field mandantID enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', quotausglproperty  INTEGER COMMENT 'id of SkQuotAusgl (Schluesselverzeichnis fuer quotalen Ausgleich)', quotausglvalue  DECIMAL(15,2) COMMENT 'Wert des quotalen Ausgleichs in Waehrungseinheiten', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine Aenderung wirksam wird.', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr', zustand  INTEGER COMMENT 'Gruppierungsmerkmal', partkey  SMALLINT COMMENT 'the partition key', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Tabelle fuer den quotalen Ausgleich von Kontostaenden' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_skschadenres (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbdatsto  TIMESTAMP COMMENT 'Bearbeitungstermin des stornierenden Vorgangs', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine Aenderung wirksam wird.', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SkSchadenres (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', lstver  DECIMAL(16,2) COMMENT 'Im Versicherungsvertrag tariflich vereinbarte Leistung zum Zeitpunkt des Leistungsfalls. D', leistbon  DECIMAL(16,2) COMMENT 'Bonusleistung', lstans  DECIMAL(16,2) COMMENT 'Leistung eines Vertragsteils aus dem Ansammlungsguthaben. Die Leistungen aus der verzinsli', lstsgw  DECIMAL(16,2) COMMENT 'Leistung aus Schlussueberschuessen. Die Leistungen aus Schlussueberschuss werden auf Vertr', lstfvm  DECIMAL(16,2) COMMENT 'Leistung aus uebriger versicherungstechnischer Rueckstellung', lstson  DECIMAL(16,2) COMMENT 'Sonstige Leistung', kzschadenrestod  SMALLINT COMMENT 'Kennzeichen fuer die Tod-Schadenreserve.', kzschadenresbuz  SMALLINT COMMENT 'Kennzeichen fuer die BUZ-Schadenreserve.', schrittid  INTEGER COMMENT 'Eindeutige Identifizierung eines Arbeitsschritts', lstuebbr  DECIMAL(16,2) COMMENT 'Leistung aus Ueberschuessen aus Bewertungsreserven', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', kzschadenrespflege  INTEGER COMMENT 'Kennzeichen fuer die Pflegerenten-Schadenreserve', kzschadenresdd  INTEGER COMMENT 'Kennzeichen fuer die Dread Disease-Schadenreserve', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelkonto fuer die Schadenreserve' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sksga (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', sgaerr  DECIMAL(16,2) COMMENT 'Erreichter Stand des Schlussueberschussguthabens.', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', sgazutbed  DECIMAL(16,2) COMMENT 'Bedingte Zuteilung zur Erhoehung der Schlussgewinnanwartschaft', partkey  SMALLINT COMMENT 'the partition key', konspartid  INTEGER COMMENT 'id of SkSga (Das Field konsPartID identifiziert den Konsortialpartner.)', c_korr1  DECIMAL(16,2) COMMENT 'Korrekturbetrag 1', c_korr2  DECIMAL(16,2) COMMENT 'Korrekturbetrag 2', c_begdatsgaerr  TIMESTAMP COMMENT 'Schlussueberschussbeginndatum', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelkontostand fuer die Schlussueberschussanwartschaft Kontostand, der den erreichten Stand des Schlussueberschussguthabens ausweist.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenSK-Schlussueberschuss-Anwart:' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_skuebverw (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', vsys  INTEGER COMMENT 'id of SkUebVerw (Systematik fuer die ueberschuss - Verwendung: ratierlich oder Stichtag)', bearbdatsto  TIMESTAMP COMMENT 'Bearbeitungstermin des stornierenden Vorgangs', verans  DECIMAL(16,2) COMMENT 'Erreichter Stand des Ansammlungsguthabens.', zutverans  DECIMAL(16,2) COMMENT 'Ausweisung unterjaehriger Zuteilungen ins Ansammlungsguthaben (zur Vermeidung von Zinseszi', zutkorvs  DECIMAL(16,2) COMMENT 'Vorschuessig zugeteilte, aber noch nicht verwendete ueberschussanteile.', zutkorns  DECIMAL(16,2) COMMENT 'Nachschuessig zugeteilte, aber noch nicht verwendete ueberschussanteile. Nachschuessige ue', gewzut  DECIMAL(16,2) COMMENT 'Gesamte laufende ueberschusszuteilung zu einem Zuteilungstermin', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine aenderung wirksam wird.', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SkUebVerw (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', zutkorvs_bewres  DECIMAL(16,2) COMMENT 'Vorschuessig zugeteilte, aber noch nicht verwendete ueberschussanteile aus BWR', zutkorns_bewres  DECIMAL(16,2) COMMENT 'Nachschuessig zugeteilte, aber noch nicht verwendete ueberschussanteile aus BWR', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelkontostand ueberschussverwendung Kontostand des Ansammlungsguthabens und ggf. vorhandener Zuteilungskorrekturen der ueberschussverwendung.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenSK-Verwendeter-Ueber' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_skuebzu (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', zutsys  INTEGER COMMENT 'id of SkUebZu (Systematik fuer die ueberschuss - Zuteilung: nachschuessig, vorschuessig ra', anzir  DECIMAL(16,2) COMMENT 'Absolutbetrag der Zinsen auf das verzinsliche Ansammlungsguthaben', anzidir  DECIMAL(16,2) COMMENT 'Zinsen auf das Ansammlungsguthaben aus Direktgutschrift', anzirfb  DECIMAL(16,2) COMMENT 'Zinsen auf das Ansammlungsguthaben aus der RfB', risdir  DECIMAL(16,2) COMMENT 'Zugeteilter Risikoueberschuss aus der Direktgutschrift.', risrfb  DECIMAL(16,2) COMMENT 'Zugeteilter Risikoueberschuss aus der RfB.', grdir  DECIMAL(16,2) COMMENT 'Zugeteilter Grundueberschuss aus der Direktgutschrift.', grrfb  DECIMAL(16,2) COMMENT 'Zugeteilter Grundueberschuss aus der RfB.', zidir  DECIMAL(16,2) COMMENT 'Zugeteilter Zinsueberschuss aus der Direktgutschrift.', zirfb  DECIMAL(16,2) COMMENT 'Zugeteilter Zinsueberschuss aus der RfB.', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', anzirfbbed  DECIMAL(16,2) COMMENT 'Bedingte Zinsen auf das Ansammlungsguthaben aus der RfB', anzidirbed  DECIMAL(16,2) COMMENT 'Bedingte Zinsen auf das Ansammlungsguthaben aus der Direktgutschrift', refizidir  DECIMAL(16,2) COMMENT 'Zinsen auf das Refinanzierungskonto aus der Direktgutschrift', refizirfb  DECIMAL(16,2) COMMENT 'Zinsen auf das Refinanzierungskonto aus der RfB', partkey  SMALLINT COMMENT 'the partition key', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', bewresdir  DECIMAL(16,2) COMMENT 'Zugeteilter Ueberschuss fuer Bewertungsreserven aus Direktgutschrift', bewresrfb  DECIMAL(16,2) COMMENT 'Zugeteilter Ueberschuss fuer Bewertungsreserven aus RfB', bewresmindir  DECIMAL(16,2) COMMENT 'Zugeteilter Ueberschuss fuer Mindestbeteiligung an Bewertungsreserven aus Direktgutschrift', bewresminrfb  DECIMAL(16,2) COMMENT 'Zugeteilter Ueberschuss fuer Mindestbeteiligung an Bewertungsreserven aus Rfb', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelkontostand ueberschusszuteilung Kontostaende fuer die Fuehrung der zugeteilten, aber noch nicht verwendeten ueberschussanteile.Gruppierungsmerkmale: Fuer die Rechnungslegung relevante Gruppierungsmerkmale.Historie-streng: Attribute, die zur strenge' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_skvorab (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbdatsto  TIMESTAMP COMMENT 'Bearbeitungstermin des stornierenden Vorgangs', vorabrfb  DECIMAL(16,2) COMMENT 'Vorabschaetzung des im Folgejahr aus der RfB zuzuteilenden ueberschuss', vorabdg  DECIMAL(16,2) COMMENT 'Vorabschaetzung des im Folgejahr aus der Direktgutschrift zuzuteilenden ueberschuss', vorabrm  DECIMAL(16,2) COMMENT 'Vorabschaetzung der rechnungsmaessigen Verzinsung des ueberschussguthabens im Folgejahr', biluebrfb  DECIMAL(16,2) COMMENT 'Vorabschaetzung des im Bilanzjahr (zusaetzlich) aus der RfB zuzuteilenden ueberschuss', biluebdg  DECIMAL(16,2) COMMENT 'Vorabschaetzung des im Bilanzjahr (zusaetzlich) aus der Direktgutschrift zuzuteilenden ueb', biluebrm  DECIMAL(16,2) COMMENT 'Vorabschaetzung der (zusaetzlichen) rechnungsmaessigen Verzinsung des ueberschussguthabens', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', wirkdat  TIMESTAMP COMMENT 'Termin, zu dem eine aenderung wirksam wird.', feindat  SMALLINT COMMENT 'Feinsteuerungsinformation zum Termin Termin-Wirksamkeit', bearbdat  TIMESTAMP COMMENT 'Termin, an dem das Objekt bearbeitet wurde.', pdid  STRING COMMENT 'Eindeutige Identifikation des Produkts, das dem LV-Vertrag zugeordnet ist.', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', kzeinmalbtrg  INTEGER COMMENT 'Kennzeichen, ob Einmalbeitrag vorliegt oder nicht.', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', mandantid  INTEGER COMMENT 'Das Field mandantId enthaelt einen Schluesselwert fuer den Mandant, fuer den diese Row gue', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', varianteid  STRING COMMENT 'id of SkVorab (Attribut zur eindeutigen Identifizierung einer Tarifvariante.)', partkey  SMALLINT COMMENT 'the partition key', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', vorabrfbdekl  DECIMAL(16,2) COMMENT 'Vorabschaetzung des im Deklarationszeitraum aus der RfB zuzuteilenden Ueberschuss', vorabdgdekl  DECIMAL(16,2) COMMENT 'Vorabschaetzung des im Deklarationszeitraum aus der Direktgutschrift zuzuteilenden Uebersc', vorabrmdekl  DECIMAL(16,2) COMMENT 'Vorabschaetzung der rechnungsmaessigen Verzinsung des Ueberschussguthabens im Deklarations', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Sammelkontostand Vorabschaetzwerte Kontostaende der Vorabschaetzwerte fuer die laufende ueberschussbeteiligung im Folgejahr und im Bilanzjahr, sofern sie noch nicht zugeteilt wurden (wie z.B. die Verzinsung des Ansammlungsguthabens).SK-Vorabschaetzwerte:' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sntvtlstg (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'id of SntVtLstg (Das Field bearbID identifiziert den Vertragsstand (und damit gleichzeitig', bearbidref  INTEGER COMMENT 'id of SntVtLstg (Das Field bearbIdRef identifiziert zusammen mit dem Field lvId den Vertra', lstgtyp  INTEGER COMMENT 'id of SntVtLstg (Leistungsart)', lstgwertakt  DECIMAL(18,4) COMMENT 'Aktueller Leistungswert', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Speicherung von Leistungen je Leistungsart am Vertragsteil' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sntvt (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'id of SntVt (Das Field bearbID identifiziert den Vertragsstand (und damit gleichzeitig gen', bearbidref  INTEGER COMMENT 'id of SntVt (Das Field bearbIdRef identifiziert zusammen mit dem Field lvId den Vertragsst', tfid  STRING COMMENT 'Das Field identifiziert denTarif, der dem durch bearbIdRef identifiziertenVertragsteilstan', zb  DECIMAL(16,2) COMMENT 'Der je Ratenzahlungsabschnitt (tariflich) faellige Zahlbeitrag. Eine Beitragsreduktion aus', la1  DECIMAL(18,4) COMMENT 'In der Tarifklasse Klassik-Kapital oder Risiko ist la1 die (anfaengliche) Todesfallsumme, ', la2  DECIMAL(16,2) COMMENT 'In der Tarifklasse Klassik-Kapital ist la2 die (abweichende) Erlebensfallsumme, bei Rente ', res  DECIMAL(16,2) COMMENT 'In der anlageorientierten Versicherungsmathematik gibt es ""die Reserve"" res, in der klas', rkw  DECIMAL(16,2) COMMENT 'Rueckkaufswert - z.B. pro Hauptversicherungsteil in den Garantiewerten', akt_leist  DECIMAL(16,2) COMMENT 'Aktuelle Versicherungssumme.', rbeg  TIMESTAMP COMMENT 'Rentenbeginntermin', beginnvt  TIMESTAMP COMMENT 'Beginn des Vertragsteils (Termin)', vtabl  TIMESTAMP COMMENT 'Datum, zu dem der LV-Vertragsteil ablaeuft', bzabl  TIMESTAMP COMMENT 'Zu diesem Datum endet die planmaessige Beitragszahlung fuer den LV-Vertragsteil. Der Ablau', labl  TIMESTAMP COMMENT 'Ablauftermin der Leistung bei BUZ / HZV', gabl  TIMESTAMP COMMENT 'Ablauftermin der Garantiezeit', optabl  TIMESTAMP COMMENT 'Termin, an dem die flexible Ablaufphase endet.', waehrungid  INTEGER COMMENT 'Das Attribut dient zur eindeutigen Identifizierung einer Waehrung', schrittid  INTEGER COMMENT 'Die schrittId desArbeitsschritts, durch den der Vertragsstand bearbIdRef entstand.', akla  DECIMAL(16,2) COMMENT 'Abschlusskosten, die bei beitragspflichtigenVertragsteilstaendenim abgelaufenen Kalenderja', inka  DECIMAL(16,2) COMMENT 'Inkassokosten (inklusive Sammelinkassorabatt), die bei beitragspflichtigen Vertragsteilsta', rb1  DECIMAL(16,2) COMMENT 'Das Field rb1 enthaelt jenen Betrag, der im abgelaufenen Kalenderjahr zur Abdeckung des To', rzres  DECIMAL(16,2) COMMENT 'Das Field rzres enthaelt sie Summe der rechnungsmaessigen Zinsen auf das Deckungskapital, ', vwkdkr  DECIMAL(16,2) COMMENT 'Verwaltungskosten, die im Rahmen der Beitragszerlegung im abgelaufenen Kalenderjahr aus de', koueb  DECIMAL(16,2) COMMENT 'Kostenueberschuss, der im Rahmen der anlageorientierten ueberschussverteilung im abgelaufe', riueb  DECIMAL(16,2) COMMENT 'Risikoueberschuss, der im Rahmen der anlageorientierten ueberschussverteilung im abgelaufe', zinsueb  DECIMAL(16,2) COMMENT 'Die Summe der im abgelaufenen Kalenderjahr anfallenden ueberschuesse auf rechnungsmaessige', fvmueb  DECIMAL(16,2) COMMENT 'Fondsvermoegen aus ueberschuessen zum Zeitpunkt bearbIdRef.', verans  DECIMAL(16,2) COMMENT 'Erreichter Stand des Ansammlungsguthabens zum Zeitpunkt bearbIdRef. Siehe auch ColumnskBil', bonres  DECIMAL(16,2) COMMENT 'Bonusreserve zum Zeitpunkt bearbIdRef. Siehe auch Column sntVt.res.', basres  DECIMAL(16,2) COMMENT 'Basisreserve zum Zeitpunkt bearbIdRef. Siehe auch Column sntVt.res.', leistbon  DECIMAL(16,2) COMMENT 'Bonusleistung', minbtg  DECIMAL(16,2) COMMENT 'Vereinbarter Mindestbeitrag', gebuehr  DECIMAL(16,2) COMMENT 'Angefallene Gebuehren', jahr  SMALLINT COMMENT 'Das Kalenderjahr, fuer welches die Summe der Zulagen im Field zulSum ausgewiesen ist.', btgsumjahr  DECIMAL(16,2) COMMENT 'Die Summe der Beitraege im Bezugsjahr.', zulsum  DECIMAL(16,2) COMMENT 'Die Summe der Zulagen des Vertragsteils im Kalenderjahr, das durch das Field jahr bestimmt', zulsumjahr  DECIMAL(16,2) COMMENT 'Das Field zulSumJahr enthaelt die in einem Kalenderjahr gutgeschriebenen Riester-Zulagen; ', btgsum  DECIMAL(16,2) COMMENT 'Die absolute Summe der Beitraege.', lstgef  DECIMAL(16,2) COMMENT 'Leistung aus gefoerderten Beitraegen.', btggef  DECIMAL(16,2) COMMENT 'gefoerderte Beitraege', fondsertrag  DECIMAL(16,2) COMMENT 'fondsErtrag', uebverr  DECIMAL(16,2) COMMENT 'Beitragsverrechnung / Barauszahlung', suetod  DECIMAL(16,2) COMMENT 'Leistung aus Schlussueberschuss bei Tod', rkwsue  DECIMAL(16,2) COMMENT 'Leistung aus Schlussueberschuss bei Rueckkauf', lstsgw  DECIMAL(16,2) COMMENT 'Leistung aus Schlussueberschuessen. Die Leistungen aus Schlussueberschuss werden auf Vertr', kuebr  DECIMAL(16,2) COMMENT 'Differenz zwischen konstanter Ueberschussrente und bereits zugeteilter Bonusrente', ent_dm  DECIMAL(16,2) COMMENT 'Betrag (in Landeswaehrung ) bei Switchen und bei Entnahme.', uebverwsys  INTEGER COMMENT 'Eindeutige Identifizierung eines Ueberschussverwendungssystems.', stornoabschlag  DECIMAL(16,2) COMMENT 'Stornoabschlag beim Rueckkauf', lstuebbr  DECIMAL(16,2) COMMENT 'Leistung aus Bewertungsreserven', bezuguebbr  DECIMAL(16,2) COMMENT 'fuer die Leistungsbearbeitung relevante Bewertungsreserve (Groesse aus BewertReserve)', basisuebbr  DECIMAL(16,2) COMMENT 'fuer die Leistungsbearbeitung relevante kollektive Basisgroesse (Groesse aus BestandsUebBR', lstges  DECIMAL(16,2) COMMENT 'Gesamtleistung', ertrges  DECIMAL(16,2) COMMENT 'Gesamtertrag/Kapitalertrag', ertrgef  DECIMAL(16,2) COMMENT 'Ertrag aus gefoerderten Beitraegen.', fvmwertsicher  DECIMAL(16,2) COMMENT 'Wert der Anteile der wertgesicherten Anlage', lstuebbrtod  DECIMAL(16,2) COMMENT 'Leistung aus Bewertungsreserven bei Tod', ertrngef  DECIMAL(16,2) COMMENT 'nicht gefoerderter Ertrag', akt_rent  DECIMAL(16,2) COMMENT 'Rente (ohne Rente aus Ueberschussbeteiligung)', akt_rent_ues  DECIMAL(16,2) COMMENT 'Rente aus Ueberschussbeteiligung', garguthabbe  DECIMAL(16,2) COMMENT 'erreichtes garantiertes Guthaben gemaess Beitragserhalt', garguthabge  DECIMAL(16,2) COMMENT 'erreichtes garantiertes Guthaben gemaess Guthabenerhalt', la3  DECIMAL(16,2) COMMENT 'Enthaelt bei laufenden DH-Renten die maximal garantierbare Rente, ansonsten leer', garniveaurente  DECIMAL(9,6) COMMENT 'Niveau der Rentengarantie', kzrente  SMALLINT COMMENT 'Art der Verrentung', guth_ues_unverw  DECIMAL(16,2) COMMENT 'Guthaben noch nicht verwendeter Ueberschuesse', larbegges  DECIMAL(16,2) COMMENT 'Gesamtrente bei Rentenbeginn - fuer Pruefung auf Kleinbetragsrente', beivorrat  DECIMAL(16,2) COMMENT 'Beitragsuebertrag im Bezugsjahr. Dieser enthaelt die Summe derjenigen im Bezugsjahr gezahl', sueres  DECIMAL(16,2) COMMENT 'Schlussueberschussreserve im Bezugsjahr', zulkorrjahr  DECIMAL(16,2) COMMENT 'Entnahme bei Zulagenkorrektur im Bezugsjahr', zuzsumjahr  DECIMAL(16,2) COMMENT 'Summe der Zuzahlungen im Bezugsjahr', anrkapjahr  DECIMAL(16,2) COMMENT 'Kapital aus Anbieterwechsel im Bezugsjahr', anzi  DECIMAL(16,2) COMMENT 'Zinsen auf verzinsliche Ansammlung im Bezugsjahr', inkavorrat  DECIMAL(16,2) COMMENT 'Inkassokostenuebertrag im Bezugsjahr. Dieser enthaelt den Anteil der bereits entnommenen I', sueresbewjahr  DECIMAL(16,2) COMMENT 'Veraenderung der Schlussueberschussreserve im Bezugsjahr', fvm  DECIMAL(16,2) COMMENT 'Wert (in Landeswaehrung) der Fondsanteile', rensumjahr  DECIMAL(16,2) COMMENT 'Summe der planmaessigen Rentenzahlungen im Bezugsjahr', lstuebbrbewjahr  DECIMAL(16,2) COMMENT 'Veraenderung der Leistung aus Ueberschuessen aus Bewertungsreserven im Bezugsjahr', lstuebbrmin  DECIMAL(16,2) COMMENT 'Leistung aus Mindestbeteiligung an Bewertungsreserven', lstuebbrmintod  DECIMAL(16,2) COMMENT 'Leistung aus Mindestbeteiligung an Bewertungsreserven bei Tod', ablaufalterjahre  INTEGER COMMENT 'Alter in Jahren der versicherten Person zum planmaessigen Ablauf einer Rente', ablaufaltermonate  INTEGER COMMENT 'Alter in Monaten der versicherten Person zum planmaessigen Ablauf einer Rente', uebverrsumjahr  DECIMAL(16,2) COMMENT 'Summe der Beitragsverrechnungen im Bezugsjahr', fondskickbackjahr  DECIMAL(15,2) COMMENT 'Fondskickbacks im Rahmen der laufenden (Kosten-) Ueberschussbeteiligung im Bezugsjahr', fondskostenjahr  DECIMAL(15,2) COMMENT 'Ausweisung der externen Fondskosten des abgelaufenen Kalenderjahres kumuliert ueber alle F', renueb  DECIMAL(15,2) COMMENT 'Rentenuebertrag', forderungakoffen  DECIMAL(15,2) COMMENT 'Forderungsbetrag fuer nicht getilgte Abschlusskosten bei Uebertragung', steuzuschlag  DECIMAL(15,2) COMMENT 'Steuerzuschlag', steuzuschlagsumjahr  DECIMAL(15,2) COMMENT 'Summe der Steuerzuschlaege im Bezugsjahr', ertrngefkorr  DECIMAL(15,2) COMMENT 'Ungefoerderter Ertrag, der nachtaeglich zu bescheinigen ist. Der Ausweis betrifft nur Teil', lstgefkorr  DECIMAL(15,2) COMMENT 'Gefoerderte Leistung, die nachtaeglich zu bescheinigen ist. Der Ausweis betrifft nur Teilr', wigutko  DECIMAL(15,2) COMMENT 'Das Field wigutko enthaelt die Summe der Kosten, die im abgelaufenen Kalenderjahr wiedergu', rentfaktgar  DECIMAL(16,8) COMMENT 'garantierter Rentenfaktor, d.h. die garantierte Rente je 10000 Euro Vermoegen zu Rentenbeg', lsterlgar  DECIMAL(16,2) COMMENT 'garantierte Erlebensfallleistung bei Ablauf', rentbetrgarakt  DECIMAL(16,2) COMMENT 'Garantierte Rente zum Zeitpunkt der aktuellen Berechnung.', fvmsuea  DECIMAL(16,2) COMMENT 'Fondsvermoegen aus Schlussueberschuessen', akt_rent_bewres  DECIMAL(16,2) COMMENT 'akt_rent_bewres', nachsteuer  DECIMAL(15,2) COMMENT 'Steuerbetrag aus der Nachversteuerung von Praemien', uebverrsum  DECIMAL(15,2) COMMENT 'Summe der Beitragsverrechnungen im gesamten Leben des Vertragsteils', zuzsum  DECIMAL(15,2) COMMENT 'Summe der Zuzahlungen im gesamten Leben des Vertragsteils', rensum  DECIMAL(15,2) COMMENT 'Summe der planmaessigen Rentenzahlungen im gesamten Leben des Vertragsteils', zulkorrsum  DECIMAL(15,2) COMMENT 'Summe der Entnahmen bei Zulagenkorrekturen im gesamten Leben des Vertragsteils', btgsonstsum  DECIMAL(15,2) COMMENT 'Summe der sonstigen Beitraege (z.B. Anbieterwechsel) im gesamten Leben des Vertragsteils', lstvertod  DECIMAL(15,2) COMMENT 'vereinbarte Leistung (ohne Ueberschuesse) bei Tod', lstuestod  DECIMAL(15,2) COMMENT 'Leistung aus laufender Ueberschussbeteiligung bei Tod', lstues  DECIMAL(15,2) COMMENT 'Leistung aus laufender Ueberschussbeteiligung bei Eintritt des primaer versicherten Risiko', btgsonstsumjahr  DECIMAL(15,2) COMMENT 'Summe der sonstigen Beitraege (z.B. Anbieterwechsel) im Bezugsjahr', aus_auf  DECIMAL(15,2) COMMENT 'Summe der Ausgabeaufschlaege, die im Bezugsjahr erhoben oder zurueckerstattet wurden', lstverunftod  DECIMAL(15,2) COMMENT 'vereinbarte Leistung (ohne Ueberschuesse) bei Unfalltod', lstuesunftod  DECIMAL(15,2) COMMENT 'Leistung aus laufender Ueberschussbeteiligung bei Unfalltod', bfrsum  DECIMAL(16,2) COMMENT 'beitragsfreie Summe', guthaendsonst  DECIMAL(15,2) COMMENT 'Sonstige Guthabenaenderung im Rahmen der jaehrlichen Kundeninformation', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Rows in Table sntVt repraesentieren ausgewaehlte Vertragsteileigenschaften nach bestimmten. Die folgenden Non-Key-Columns sind immer besetzt:* tfId* bearbIdRef* schrittIdAndere Columns sind nur nach bestimmtenbesetzt. Der Ausdruck ""das abgelaufene K' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sresaggskbilwert (wirkdat  TIMESTAMP COMMENT 'Schadensanmeldung', lvid  STRING COMMENT 'id of SResaggskBilWert (Das Field lvID identifiziert den Vertrag, zu dem diese Row gehoert', pdid  STRING COMMENT 'pdID', tfid  STRING COMMENT 'tfID', varianteid  STRING COMMENT 'Attribut zur eindeutigen Identifizierung einer Tarifvariante.', sex  INTEGER COMMENT 'sex', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', kzkoll  SMALLINT COMMENT 'kzKoll', mandantid  INTEGER COMMENT 'mandantID', waehrungid  INTEGER COMMENT 'waehrungID', konsortid  INTEGER COMMENT 'konsortID', bilaa  DECIMAL(16,2) COMMENT 'bilaa', bilbub  DECIMAL(16,2) COMMENT 'bilbub', bildr  DECIMAL(16,2) COMMENT 'bildr', bonres  DECIMAL(16,2) COMMENT 'bonres', bilaakoba  DECIMAL(16,2) COMMENT 'Aktivierte Ansprueche aus Zillmerung von Fondsguthaben zum Bilanztermin.', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sreseinzel (wirkdat  TIMESTAMP COMMENT 'Schadensanmeldung', schadendat  TIMESTAMP COMMENT 'Schadensanmeldung', meldedat  TIMESTAMP COMMENT 'meldeDat', lvid  STRING COMMENT 'id of Sreseinzel (Das Field lvID identifiziert den Vertrag, zu dem diese Row gehoert.)', pdid  STRING COMMENT 'pdID', tfid  STRING COMMENT 'tfID', varianteid  STRING COMMENT 'Attribut zur eindeutigen Identifizierung einer Tarifvariante.', sex  INTEGER COMMENT 'sex', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', kzkoll  SMALLINT COMMENT 'kzKoll', mandantid  INTEGER COMMENT 'mandantID', waehrungid  INTEGER COMMENT 'waehrungID', konsortid  INTEGER COMMENT 'konsortID', kzschadenresbuz  SMALLINT COMMENT 'kzschadenresBuz', kzschadenrestod  SMALLINT COMMENT 'kzschadenresTod', schrittid  INTEGER COMMENT 'schrittid', lstver  DECIMAL(16,2) COMMENT 'lstver', bildr  DECIMAL(16,2) COMMENT 'bildr', bilaa  DECIMAL(16,2) COMMENT 'bilaa', bilbub  DECIMAL(16,2) COMMENT 'bilbub', schadenresvt  DECIMAL(16,2) COMMENT 'schadenresvt', leistbon  DECIMAL(16,2) COMMENT 'leistbon', bonres  DECIMAL(16,2) COMMENT 'bonres', schadenresbon  DECIMAL(16,2) COMMENT 'schadenresbon', lstsgw  DECIMAL(16,2) COMMENT 'lstsgw', lstfvm  DECIMAL(16,2) COMMENT 'lstfvm', lstson  DECIMAL(16,2) COMMENT 'lstson', bilaakoba  DECIMAL(16,2) COMMENT 'Aktivierte Ansprueche aus Zillmerung von Fondsguthaben zum Bilanztermin.', kzschadenrespflege  INTEGER COMMENT 'Kennzeichen fuer die Pflegerenten-Schadenreserve', kzschadenresdd  INTEGER COMMENT 'Kennzeichen fuer die Dread Disease-Schadenreserve', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Tabelle zum Speichern der Schadenrueckstellung, einzelvertraglich.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_sres (wirkdat  TIMESTAMP COMMENT 'Schadensanmeldung', schadendat  TIMESTAMP COMMENT 'Schadensanmeldung', meldedat  TIMESTAMP COMMENT 'meldeDat', lvid  STRING COMMENT 'id of Sres (Das Field lvID identifiziert den Vertrag, zu dem diese Row gehoert.)', pdid  STRING COMMENT 'pdID', tfid  STRING COMMENT 'tfID', varianteid  STRING COMMENT 'Attribut zur eindeutigen Identifizierung einer Tarifvariante.', sex  INTEGER COMMENT 'sex', zustand  INTEGER COMMENT 'In diesem Attribut wird der aktuelle Status des Vertragsbausteins verschluesselt.', kzkoll  SMALLINT COMMENT 'kzKoll', mandantid  INTEGER COMMENT 'mandantID', waehrungid  INTEGER COMMENT 'waehrungID', konsortid  INTEGER COMMENT 'konsortID', kzschadenresbuz  SMALLINT COMMENT 'kzschadenresBuz', kzschadenrestod  SMALLINT COMMENT 'kzschadenresTod', schrittid  INTEGER COMMENT 'schrittid', lstver  DECIMAL(16,2) COMMENT 'lstver', leistbon  DECIMAL(16,2) COMMENT 'leistbon', lstsgw  DECIMAL(16,2) COMMENT 'lstsgw', lstfvm  DECIMAL(16,2) COMMENT 'lstfvm', lstson  DECIMAL(16,2) COMMENT 'lstson', kzschadenrespflege  INTEGER COMMENT 'Kennzeichen fuer die Pflegerenten-Schadenreserve', kzschadenresdd  INTEGER COMMENT 'Kennzeichen fuer die Dread Disease-Schadenreserve', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_steuauftreg (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', regid  INTEGER COMMENT 'id of SteuAuftReg (Die letzte vergebene laufende Nummer in steuAuftReg)', beitragstyp  INTEGER COMMENT 'Steuerlicher Beitragstyp', betragsart  INTEGER COMMENT 'Betragsart: z.B. Beitrag, Auszahlung, Abfluss, Zufluss', gueab  TIMESTAMP COMMENT 'Beitragstyp und Aufteilungsformel wird erst ab Zeitpunkt ""Gueltig ab"" beruecksichtigt', guebis  TIMESTAMP COMMENT 'Beitragstyp und Aufteilungsformel wird zu Zeitpunkten ab dem ""Gueltig bis"" - Datum nicht', bearbid  INTEGER COMMENT 'the historical version number (logId)', auftlgformel  SMALLINT COMMENT 'Formel / Formelauspraegung als Verweis auf die steuerliche Aufteilungsregel', paranteil  DECIMAL(16,3) COMMENT 'Parameter Anteil fuer Aufteilungsformel', paruntergr  DECIMAL(16,3) COMMENT 'Parameter Untergrenze fuer Aufteilungsformel', parobergr  DECIMAL(16,3) COMMENT 'Parameter Obergrenze fuer Aufteilungsformel', kzerlaub  INTEGER COMMENT 'Kennzeichen fuer Aenderungserlaubnis (Sachbearbeiter, Zulagen-SNT, Initialbefuellung, etc.', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'steuAuftReg = SteuerAufteilungRegelung Die Entitaet beinhaltet die Regelungen zur Aufteilung von Beitraegen auf die verschiedenen Beitragstypen. Die Regeln werden auf Vertragsteilebene gefuehrt.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_steuschicht (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', schichtid  SMALLINT COMMENT 'id of SteuSchicht (Zur Identifizierung der Steuerschicht)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', partkey  SMALLINT COMMENT 'the partition key', steubeg  TIMESTAMP COMMENT 'Steuerlich relevanter Beginn. Zu diesem Termin beginnen die steuerlichen Fristen zu laufen', grund  INTEGER COMMENT 'Grund fuer Einrichtung der Steuerschicht (Defines the reason why a tax value was created. ', steuabg  TIMESTAMP COMMENT 'Termin des Abgangs der Steuerschicht im Zuge einer Vollnovation', steurecht  SMALLINT COMMENT 'Das auf Versicherungsleistungen und -ertraege anzuwendende Steuerrecht', schichtidref  SMALLINT COMMENT 'Verweis auf zugehoerige Steuerschicht: schichtIdRef = schichtID der zugehoerigen Steuersch', kzsteuersatz  INTEGER COMMENT 'Kennzeichen fuer den landesspezifischen Beitragssteuersatz in der Steuerschicht (SteuSchic', leiststeuurspr  DECIMAL(15,2) COMMENT 'Urspruenglicher Leistungswert bei Vertragsentstehung, wird benoetigt um das steuerliche Kr', mindausteu  SMALLINT COMMENT 'Mindestvertragslaufzeit fuer eine steuerlich bevorzugte Behandlung in Jahren', btgsteuurspr  DECIMAL(15,2) COMMENT 'Im steuerlichen Kontext urspruenglich vereinbarte Jahrespraemie bei Vertragsentstehung.', steurechtbtg  INTEGER COMMENT 'Das auf Versicherungsbeitraege anzuwendende Steuerrecht', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Eine Steuerschicht repraesentiert einen Vertrag in steuerlicher Sicht. Bei teilnovationsrelevanten Aenderung oder novationsrelevanten Aenderungen wird eine neue Steuerschicht angelegt.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_steuwerteauszauft (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', schichtid  SMALLINT COMMENT 'id of SteuWerteAuszAuft (Steuerschicht)', beitragstyp  INTEGER COMMENT 'id of SteuWerteAuszAuft (Auszahlbetrag des Beitragstyps)', bearbidref  INTEGER COMMENT 'id of SteuWerteAuszAuft (Das Field bearbIdRef identifiziert die Bearbeitung, d.h. die Teil', partkey  SMALLINT COMMENT 'the partition key', bearbid  INTEGER COMMENT 'the historical version number (logId)', ausz  DECIMAL(15,2) COMMENT 'Auszahlbetrag des Beitragstyps', kzsteuerabzugbav  INTEGER COMMENT 'Kennzeichen, ob die Auszahlung bescheinigt wurde (Auspraegung = ""nein"") oder dem Steuera', wertvorausz  DECIMAL(15,2) COMMENT 'Wertstand vor Auszahlung (die Auszahlung erfolgte aus diesem Vertragsvermoegen)', wterm  TIMESTAMP COMMENT 'Wirksamkeitstermin der Auszahlung', beschke  DECIMAL(16,2) COMMENT 'Gesamter fuer die Auszahlung bescheinigter Kapitalertrag (unter Beruecksichtigung von Steu', antkestertrag2005  DECIMAL(15,2) COMMENT 'Gesamter ausgezahlter Ertrag (Differenzmethode ab 2005) des Beitragstyps', antkestertragalt  DECIMAL(15,2) COMMENT 'Gesamte ausgezahlte Zinsen (Ertragsbegriff vor 2005) des Beitragstyps', antfondsertrag2005  DECIMAL(15,2) COMMENT 'In antKestErtrag2005 enthaltener Ertrag, der aus der Anlage in steuerbelasteten Publikumsf', btgsteu  DECIMAL(15,2) COMMENT 'Absoluter Beitragsanteil, auf den sich die Auszahlung bezieht', nachsteuer  DECIMAL(15,2) COMMENT 'Steuerbetrag aus der Nachversteuerung von Praemien, die von der angegebenen Auszahlung abg', entnprozsatzstpfl  DECIMAL(12,8) COMMENT 'Gibt an, wieviel Prozent des steuerpflichtigen Vermoegens mit dieser Auszahlung entnommen ', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Aufgeteilte Steuerwerte fuer jede Auszahlung' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_steuwertekum (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', schichtid  SMALLINT COMMENT 'id of SteuSchicht (Zur Identifizierung der Steuerschicht)', zuz  DECIMAL(16,2) COMMENT 'Summe aller Zuzahlungen', btgsteu  DECIMAL(16,2) COMMENT 'Summe der istBeitraege', abfluss  DECIMAL(16,2) COMMENT 'Abfluesse aus Vertragsteil durch vertragsinterne Umbuchungen', zufluss  DECIMAL(16,2) COMMENT 'Zufluss zum Vertragsteil aus vertragsinternen Umbuchungen oder anrechenbaren Werten', foeinzausz  DECIMAL(16,2) COMMENT 'Summe der Einzahlungen in Fonds', ziertr  DECIMAL(16,2) COMMENT 'Summe der Zinsertraege am Baustein', partkey  SMALLINT COMMENT 'the partition key', zulage  DECIMAL(16,2) COMMENT 'Summe der Zulagen', foeinzauszstbel  DECIMAL(15,2) COMMENT 'Fondsein- und auszahlungen zu steuerbelasteten Fonds, die als Publikumsfonds im Sinne des ', foertrstbelinv  DECIMAL(15,2) COMMENT 'Netto-Ertrag, der aus der Anlage in steuerbelasteten Publikumsfonds (gem. Investment-Steue', kosteninvdelta  DECIMAL(15,2) COMMENT 'Kosten oder Kostenkorrekturen im Sinne des Investmentsteuergesetzes', kosteninvsteuer  DECIMAL(15,2) COMMENT 'Summe der Kosten im Sinne des Investmentsteuergesetzes im steuerl. Fortschreibungsinterval', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Steuerliche Werte werden pro Steuerschicht berechnet. Dazu ist es notwendig gewisse Werte im Laufe der Vertragsentwicklung zu dokumentieren: Beispielsweise die Summe an Istbeitraegen oder Zu- bzw. Abfluesse vom Baustein, die dieser Steuerschicht zugeordn' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_steuwerte (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bezugsjahr  SMALLINT COMMENT 'id of SteuWerte (Bezugsjahr: Einkommenssteuerlich zuzuordnende Periode (in Deutschland: Ka', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', wterm  TIMESTAMP COMMENT 'Wertstandsdatum', zufluss  DECIMAL(16,2) COMMENT 'Zufluss zum Vertragsteil aus vertragsinternen Umbuchungen oder anrechenbaren Werten', abfluss  DECIMAL(16,2) COMMENT 'Abfluesse aus Vertragsteil durch vertragsinterne Umbuchungen', ausz  DECIMAL(16,2) COMMENT 'Auszahlungsbetrag bei Leistung', zulage  DECIMAL(16,2) COMMENT 'geflossene Zulagen', btgsteu  DECIMAL(16,2) COMMENT 'Gesamtbeitrag des Vertragsteils im steuerlichen Sinne, ggf. incl. Wert aus Kapitaluebernah', btguebertrag  DECIMAL(16,2) COMMENT 'Anteil eines bereits faelligen Beitrags, der noch nicht im Deckungskapital des Vertrags st', wertstand  DECIMAL(16,2) COMMENT 'Wertstand des Vertragsteils (ohne Beitragsuebertrag)', partkey  SMALLINT COMMENT 'the partition key', schichtid  SMALLINT COMMENT 'id of SteuWerte (Zur Identifizierung der Steuerschicht.)', kestertrag2005  DECIMAL(16,2) COMMENT 'Versicherungstechnisch ermittelter Ertrag nach neuem KESt-Recht (Leistung - hierauf erbrac', kestertragalt  DECIMAL(16,2) COMMENT 'Versicherungstechnisch ermittelter Ertrag nach altem KESt-Recht (rechnungs- und ausserrech', zuz  DECIMAL(16,2) COMMENT 'Summe aller Zuzahlungen', akestertrag2005  DECIMAL(16,2) COMMENT 'KestErtrag2005 fuer Teilrueckkauf', akestertragalt  DECIMAL(16,2) COMMENT 'KestErtragAlt fuer Teilrueckkauf', aplanbearbrente  INTEGER COMMENT 'id of SteuWerte (Nummer der ausserplanmaessigen Bearbeitung in der leistungspflichtigen Ze', entnrueckbtg  DECIMAL(15,2) COMMENT 'Entnahmebetrag bei Entnahme rueckstaendiger Beitraege', entnrueckbtgsteu  DECIMAL(15,2) COMMENT 'Reduktion der steuerlichen Beitraege (btgSteu) bei Entnahme rueckstaendiger Beitraege', leiststeu  DECIMAL(15,2) COMMENT 'Summe aller in der Steuerschicht enthaltenen steuerlich relevanten Bausteinleistungen.', wertstandcrs  DECIMAL(15,2) COMMENT 'Wertstand fuer Common-Reporting-Standard', afondsertrag2005  DECIMAL(15,2) COMMENT 'In aKestErtrag2005 enthaltener Ertrag, der aus der Anlage in steuerbelasteten Publikumsfon', fondsertrag2005  DECIMAL(15,2) COMMENT 'In kestErtrag2005 enthaltener Ertrag, der aus der Anlage in steuerbelasteten Publikumsfond', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'steuWert = Steuerwerte Fuer jedes Kalenderjahr (d.h. Wertstandsdatum 31.12.) bzw. im Leistungsfall (Wertstandsdatum = Wirksamkeitstermin des Leistungsfalls) werden steuerlich relevante Vertragswerte festgehalten.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_steuwertestand (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', schichtid  SMALLINT COMMENT 'id of SteuSchicht (Zur Identifizierung der Steuerschicht)', wterm_alt  TIMESTAMP COMMENT 'Wirksamkeitstermin der letzten Meldung an die Steuerschichten', btguebertrag_alt  DECIMAL(16,2) COMMENT 'Beitragsuebertrag der letzten Meldung an die Steuerschichten', wertstand_alt  DECIMAL(16,2) COMMENT 'Summe der Guthaben im Vertrag bei der letzten Meldung an die Steuerschichten', fvm_alt  DECIMAL(16,2) COMMENT 'Fondsvermoegen der letzten Meldung an die Steuerschichten', btggez  DECIMAL(16,2) COMMENT 'gezahlte Beitraege: Summe steuerlicher Beitraege', skestertragalt  DECIMAL(16,2) COMMENT 'Summe ueber Ertraege nach altem KESt-Recht', partkey  SMALLINT COMMENT 'the partition key', wertstand_beginn  DECIMAL(16,2) COMMENT 'Zufluss zu einer Steuerschicht bei Vollnovation', fvmstbel_alt  DECIMAL(15,2) COMMENT 'Fondsvermoegen aus steuerbelasteten Fonds zu Beginn der Bearbeitung', skestertragaltinv  DECIMAL(15,2) COMMENT 'Summe ueber Ertraege im Sinne des Investmentsteuergesetzes', skosteninvsteuer  DECIMAL(15,2) COMMENT 'Summe der Kosten im Sinne des Investmentsteuergesetzes', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Steuerliche Werte werden an der Steuerschicht berechnet. Im Gegensatz zu den Attributen in steuWerteKum sind in steuWerteStand Werte, die nur bei Meldung an die Steuerschicht berechnet werden muessen.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_steuwerteueb (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'id of SteuWerteUeb (Das Field bearbID identifiziert den Vertragsstand (und damit gleichzei', bezugsjahr  SMALLINT COMMENT 'id of SteuWerteUeb (Bezugsjahr: Einkommenssteuerlich zuzuordnende Periode (in Deutschland:', wterm  TIMESTAMP COMMENT 'Wertstandsdatum', zulage  DECIMAL(16,2) COMMENT 'geflossene Zulagen', btgsteu  DECIMAL(16,2) COMMENT 'Gesamtbeitrag des Vertragsteils im steuerlichen Sinne, ggf. incl. Wert aus Kapitaluebernah', wertstand  DECIMAL(16,2) COMMENT 'Wertstand des Vertragsteils (ohne Beitragsuebertrag)', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, wird hier KENN-Bearbeitungsnachweis des stornierenden Vor', btggef  DECIMAL(16,2) COMMENT 'Gefoerderter Beitrag des Bezugsjahres', datumuebertrag  TIMESTAMP COMMENT 'Datum der Uebertragung', anbieternralt  STRING COMMENT 'id of SteuWerteUeb (Anbieternummer des Voranbieters)', vertragsnralt  STRING COMMENT 'id of SteuWerteUeb (Vertragsnummer des uebernommenen Vertrages beim Voranbieter)', zertnralt  STRING COMMENT 'Zertifizierungsnummer beim bisherigen Anbieter', zinsen  DECIMAL(16,2) COMMENT 'Zinsen aus Anbieterwechsel Zugang , die der alten KESt unterliegen.', ertragzugang  DECIMAL(16,2) COMMENT 'Ertrag aus Anbieterwechsel Zugang , der der neuen KESt unterliegt.', steubeg  TIMESTAMP COMMENT 'Steuerbeginn der aeltesten HV', kzuebertrehegatte  INTEGER COMMENT 'Kennzeichen Uebertragung aus Ehegattenvertrag: J = Uebertragung von Ehegattenvertrag N = U', zahlzul  DECIMAL(16,2) COMMENT 'Gezahlte Zulage im Bezugsjahr', rzahlzul  DECIMAL(16,2) COMMENT 'Rueckgeforderte Zulage im Bezugsjahr', meldegrund  INTEGER COMMENT 'Zur Unterscheidung der uebernommenen oder uebertragenen Steuerwerte.', ertungefstfrei  DECIMAL(16,2) COMMENT 'Steuerfreier, ungefoerdeter Ertrag im Beitragsjahr', faktorstfrei  DECIMAL(12,8) COMMENT 'Prozentsatz zu dem Ertraege im Beitragsjahr steuerfrei sind', kzkapuebertr  INTEGER COMMENT 'Kennzeichen, ob im Beitragsjahr beim Voranbieter bereits ein Anbieterwechsel stattgefunden', ertgef  DECIMAL(16,2) COMMENT 'Gefoerderter Ertrag', gefkap  DECIMAL(16,2) COMMENT 'Gefoerdertes Kapital', schichtid  SMALLINT COMMENT 'id of SteuWerteUeb (Steuerschicht, der die uebernommene steuerliche Historie zugeordnet is', bearbidorig  INTEGER COMMENT 'Enthaelt die bearbId der Original-Bearbeitung (der Erstmeldung). Geht eine Aenderungsmeldu', urkapital  DECIMAL(16,2) COMMENT 'Gefoerdetes Kapital zum Rentenbegin', vertragskennungnb  STRING COMMENT 'Eindeutige Kennung eines Untervertrages im Nachbarsystem', ertungefstpfl  DECIMAL(15,2) COMMENT 'Steuerpflichtiger, ungefoerdeter Ertrag im Beitragsjahr', vertrversfoermig  INTEGER COMMENT 'Merkmal, ob der allererste Riestervertrag ein versicherungsfoermiger Vertrag gewesen ist.W', vorgangsnr  STRING COMMENT 'Vorgangsnummer der Kapitaluebertragung', fristabluebkap  TIMESTAMP COMMENT 'Kapitaluebertragung muss bis zum Fristablauf durchgefuehrt werden.', fondsertragges  DECIMAL(15,2) COMMENT 'Hoehe der grundsaetzlich teilfreistellbaren Ertraege aus Fondsanlage, die in ertragZugang ', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Steuerwerte aus Uebertragung. Fuer jedes Kalenderjahr kleiner gleich dem Uebertragungsjahr werden steuerlich relevante Vertragswerte festgehalten.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_transparenzgarko (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', partkey  SMALLINT COMMENT 'the partition key', varianteid  STRING COMMENT 'id of TransparenzGarKo (Attribut zur eindeutigen Identifizierung einer Tarifvariante (wie ', lfdnr  INTEGER COMMENT 'id of TransparenzGarKo (Laufende Nummer des Datensatzes innerhalb der Satzmenge eines VTs ', garbetr  DECIMAL(15,2) COMMENT 'Absolutbetrag der Garantiekosten waehrend dieses Zeitabschnittes.', garprz  DECIMAL(10,8) COMMENT 'Relative Hoehe der Garantiekosten im Zeitabschnitt. (relativ zum Zahlbeitrag)', begdat  TIMESTAMP COMMENT 'Beginn des Zeitabschnitts', enddat  TIMESTAMP COMMENT 'Ende des Zeitabschnitts (bzw. erster Tag der nicht dazu gehoert)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Diese Tabelle wird parallel zu den Transparenzdaten mit dem Verlauf der Garantiekosten gefuellt.Nach dem Beginn einer Beitragspause kann der Verlauf der Garantiekosten so komplex werde dass er in den Transparenzdaten oder in Form einzelner Attribute in s' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_transparenz (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'the historical version number (logId)', infotyp  INTEGER COMMENT 'id of Transparenz (Art einer Information)', infobetrag  DECIMAL(16,5) COMMENT 'Information in Form einer Zahl', infobezug  INTEGER COMMENT 'Bezugsgroesse, auf die sich die ermittelten Werte zu dem Typ beziehen', varianteid  STRING COMMENT 'id of Transparenz (Attribut zur eindeutigen Identifizierung einer Tarifvariante (wie in sb', gueab  TIMESTAMP COMMENT 'Gueltig ab, Beginntermin der Zuordnung, Zuordnung ist zum Beginntermin und ab dem Beginnte', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Eine Zeile in der Tabelle ""transparenz"" repraesentiert eine Information, die an den Versicherungsnehmer weitergegeben werden muss.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vbext (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', ausstkost1  DECIMAL(16,2) COMMENT 'Noch ausstehende Kosten im laufenden Jahr.', ausstkost2  DECIMAL(16,2) COMMENT 'Noch ausstehende Kosten im laufenden Jahr.', ausstbtg  DECIMAL(16,2) COMMENT 'Noch ausstehende Beitraege im laufenden Jahr.', kofak1  DECIMAL(8,6) COMMENT 'Veraenderlicher Kostenfaktor 1 (Barwertabhaengig)', kofak2  DECIMAL(8,6) COMMENT 'Veraenderlicher Kostenfaktor 2 (Barwertabhaengig)', bemsue  DECIMAL(16,2) COMMENT '2) Bemessungsgroesse fuer Schlussueberschuss-Beteiligung', bemzins  DECIMAL(16,2) COMMENT '1) Bemessungsgroesse fuer laufende Zinsueberschuss-Anteile', stoabsch  DECIMAL(16,2) COMMENT 'Abschlag (absolut) der im Stornofall von der Leistung einbehalten wird.', minbtginfo  DECIMAL(16,2) COMMENT 'Vereinbarter Mindestbeitrag (fuer Kundeninformation)', regbsumkalj  DECIMAL(16,2) COMMENT '1) Regelbeitragssumme des aktuellen Kalenderjahres', gtilabkkalj  DECIMAL(8,6) COMMENT 'Anteil von Monaten, fuer die die Abschlusskosten im aktuellen Kalenderjahr getilgt sind (W', anrziverl  DECIMAL(16,2) COMMENT 'Anrechenbarer Zins in der Verlaengerungsphase', gfmin  DECIMAL(16,2) COMMENT 'Das GF-Konto ist ein Garantiefonds-Konto und dem VB zugeordnet. Befuellt wird es sowohl vo', vwkmon  DECIMAL(16,8) COMMENT 'Geplante Verwaltungskosten vom Wirkungsdatum bis zum naechsten Monatsersten. Zwischenspeic', rzresmon  DECIMAL(16,8) COMMENT 'Geplante Zinsen aus Deckungskapital vom Wirkungsdatum bis zum naechsten Monatsersten. Zwis', zidirmon  DECIMAL(16,8) COMMENT 'Geplante Zinsen aus Direktgutschrift vom Wirkungsdatum bis zum naechsten Monatsersten. Zwi', zirfbmon  DECIMAL(16,8) COMMENT 'Geplante Zinsen aus Rueckstellung fuer Beitragsrueckgewaehr vom Wirkungsdatum bis zum naec', zinsndkmon  DECIMAL(16,8) COMMENT 'Geplante Zinsen aus negativem Deckungskapital vom Wirkungsdatum bis zum naechsten Monatser', partkey  SMALLINT COMMENT 'the partition key', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Historische Ergaenzungen des Vertragsbausteins ohne Nachweisung' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vblstg (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', lstgtyp  INTEGER COMMENT 'id of VbLstg (Leistungsart )', partkey  SMALLINT COMMENT 'the partition key', bearbid  INTEGER COMMENT 'the historical version number (logId)', lstgwertakt  DECIMAL(18,4) COMMENT 'Aktueller Leistungswert', lstgwertnominal  DECIMAL(18,4) COMMENT 'Nominaler Leistungswert', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Speicherung von Leistungen und Leistungsvorgabe je Leistungsart am Vertragsteil' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vb (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', varianteid  STRING COMMENT 'Attribut zur eindeutigen Identifizierung einer Tarifvariante. (Contains constants for the ', tbtyp  INTEGER COMMENT 'Eindeutige Identifizierung eines Tarifbaustein-Typs (Stamm, Anpassung, Bonus,...). (Contai', ablbau  TIMESTAMP COMMENT 'Termin zu dem ein Versicherungsbaustein ablaeuft.', tbid  STRING COMMENT 'Eindeutige Identifizierung eines Tarifbausteins', vbbeg  TIMESTAMP COMMENT 'Termin, an dem der LV-Vertragsbaustein technisch wirksam wird.', abl_prber  TIMESTAMP COMMENT 'Ab diesem Zeitpunkt findet keine Berechnung der Provision mehr statt (Initialwert i.d.R. B', zustand  INTEGER COMMENT 'Zustand des Vertragsbausteins, beispielweise beitragspflichtig, leistungspflichtig oder ab', la1  DECIMAL(18,4) COMMENT 'In der Tarifklasse Klassik-Kapital oder Risiko ist la1 die (anfaengliche) Todesfallsumme, ', la2  DECIMAL(16,2) COMMENT 'In der Tarifklasse Klassik-Kapital ist la2 die (abweichende) Erlebensfallsumme, bei Rente ', ratzua  DECIMAL(16,2) COMMENT 'Im Rahmen der Beitragszerlegung ratierlich fuer den Fortschreibungszeitraum ausgewiesener ', rizu  DECIMAL(16,2) COMMENT 'Im Rahmen der Beitragszerlegung ratierlich fuer den Fortschreibungszeitraum ausgewiesener ', rizuogp  DECIMAL(16,2) COMMENT 'Eigenstaendiger Risikozuschlag bei Policierung ohne vorherige Gesundheitspruefung', bssigma  DECIMAL(16,2) COMMENT 'Beitragsbestandteil Sicherheitszuschlag bei Hinterbliebenen-ZV', trdk  DECIMAL(16,2) COMMENT 'Die technische Rundungskorrektur dient dazu, bei der Berechnung des Zahlbeitrags die Addit', tbr  DECIMAL(16,5) COMMENT 'Tarifbeitrag fuer eine tarifspezifische Standardsumme, z.B. 1000,-- DM', tba  DECIMAL(16,2) COMMENT 'Der Beitrag, der auf der jeweiligen Ebene (Vertrag, Vertragsteil) pro Jahr zu entrichten i', tbasum  DECIMAL(16,2) COMMENT 'Enthaelt die voraussichtliche Beitragssumme der Tarifbeitraege fuer den gesamten Zeitraum ', tbak  DECIMAL(16,2) COMMENT 'Der absolute Tarifbeitragsteil fuer nicht gezillmerte einmalige Abschlusskosten ist ein de', tbinkzu  DECIMAL(16,2) COMMENT 'Der absolute Tarifbeitrag eines Versicherungsbausteins kann ausser den ueber Barwertformel', rab  DECIMAL(16,2) COMMENT 'Bei der Berechnung des Zahlbeitrags auf Bausteinebene wird der Beitragsrabatt in dem vorli', nba  DECIMAL(16,2) COMMENT 'Der Normbeitrag ist ein dem Vertragsbaustein zugeordneter absoluter Beitrag, der versicher', nbak  DECIMAL(16,2) COMMENT 'Der absolute Normbeitragsteil fuer nicht gezillmerte einmalige Abschlusskosten ist ein dem', nbinkzu  DECIMAL(16,2) COMMENT 'Der absolute Normbeitrag eines Vertragsbausteins kann ausser den ueber Barwertformeln bere', gba  DECIMAL(16,2) COMMENT 'Der Garantiereservebeitrag ist ein dem Vertragsbaustein zugeordneter absoluter Beitrag, de', zb  DECIMAL(16,2) COMMENT 'Der je Ratenzahlungsabschnitt (tariflich) faellige Zahlbeitrag. Eine Beitragsreduktion aus', bszb  DECIMAL(16,2) COMMENT 'Dieses Attribut enthaelt bei Vertragsbausteinen gegen laufenden Beitrag den jaehrlichen In', zbsum  DECIMAL(16,2) COMMENT 'Enthaelt die voraussichtliche Beitragssumme der Zahlbeitraege fuer den gesamten Zeitraum d', besitzstand  DECIMAL(16,2) COMMENT 'Wird fuer einen Vertrag eine technische aenderung durchgefuehrt, so darf der neue garantie', bstberh  DECIMAL(16,2) COMMENT 'absolute Erhoehung des Tarifbeitrags im Rahmen des Beitragssprungs', bszberh  DECIMAL(16,2) COMMENT 'absolute Erhoehung des Zahlbeitrags im Rahmen des Beitragssprungs', bstbanf  DECIMAL(16,2) COMMENT 'Tarifbeitrag zu Beginn', bszbanf  DECIMAL(16,2) COMMENT 'Zahlbeitrag zu Beginn', bews  DECIMAL(16,2) COMMENT 'Bemessungsgroesse fuer die Kosten.', jb  DECIMAL(16,2) COMMENT 'Juristischer Jahresbeitrag, massgeblich in den AVB', mrs  DECIMAL(16,2) COMMENT 'Mindestrisikosumme errechnet sich als Quotient aus Mindestrisikoleistung (la2) und Mindest', mts  DECIMAL(16,2) COMMENT 'Mindesttodesfallsumme errechnet sich als Quotient aus Mindesttodesfalleistung (la1) und Mi', sra  DECIMAL(16,2) COMMENT 'Bei Altvertraegen: Jaehrlich kalkulierter Beitrag (absolut,vorzeichenbehaftet), der auf Su', gen  SMALLINT COMMENT 'Die Generationsnummer verbindet die VBs einer Schicht, z.B. bei Policierung, Dynamik oder ', bsrdauer  SMALLINT COMMENT 'Rueckgewaehrdauer bei Renten', pb  DECIMAL(16,2) COMMENT 'Provisionsbeitrag', pborig  DECIMAL(16,2) COMMENT 'Anfangsprovisionsbeitrag', pbsprung  DECIMAL(16,2) COMMENT 'Provisionsbeitragssprung', pbsum  DECIMAL(16,2) COMMENT 'Provisionsbeitragssumme-gesamt', bewprov  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer die Provision', akrabatt  DECIMAL(16,2) COMMENT 'Die im Rahmen der Rueckgabe von Provisionen rabattierten Abschlusskosten', garba  DECIMAL(16,2) COMMENT 'Beitrag der zur Finanzierung von Garantien verwendet wird', diffmonprov  INTEGER COMMENT 'die fuer die Provisionsberechnung relevanten Differenzmonate zu einem Endalter', diffmonabko  INTEGER COMMENT 'die fuer die Abschlusskostenberechnung relevanten Differenzmonate zu einem Endalter', umschlagperiode  INTEGER COMMENT 'Dauer (in Jahren) bis zum Erreichen des ""Umschlagtermins"". Ab dem Umschlagtermin ist das', ablzurech  TIMESTAMP COMMENT 'Ablauf der Versicherungsdauer in Bezug auf Leistungen aus der Zurechnungszeit', minbtg  DECIMAL(16,2) COMMENT 'Vereinbarter Mindestbeitrag', la3  DECIMAL(16,2) COMMENT 'Anfangstodesfallleistung bei Tarifen mit Leistungssprung', minbtgsum  DECIMAL(16,2) COMMENT 'Das Attribut enthaelt die vereinbarte Regelbeitragssumme. Der Wert wird bei der Policierun', lakorr_trk  DECIMAL(16,2) COMMENT 'Leistungskorrektur beim Teilrueckkauf', partkey  SMALLINT COMMENT 'the partition key', zillba  DECIMAL(16,2) COMMENT 'Der Zillmerbeitrag ist ein dem Vertragsbaustein zugeordneter absoluter Beitrag, der versic', nettoba  DECIMAL(16,2) COMMENT 'Der Nettobeitrag ist ein dem Vertragsbaustein zugeordneter absoluter Beitrag, der versiche', kzrefkto2lpfl  SMALLINT COMMENT 'Kennzeichen, ob Auffuellung in refKto2Lpfl() durchgefuehrt ist', varianteidint  STRING COMMENT 'Attribut zur eindeutigen Identifizierung der fuer das SST relevanten internen Tarifvariant', anteilgarniveau  DECIMAL(8,6) COMMENT 'Anteilssatz des Garantieniveaus des Bausteins am Garantieniveau des Vertragsteils', antgarniveauguth  DECIMAL(8,6) COMMENT 'Anteilssatz des Garantieniveaus des Bausteins am Garantieniveau des Guthabens des Vertrags', uebverr  DECIMAL(16,2) COMMENT 'Das Field uebverr enthaelt den Betrag, um den der ratierliche Zahlbeitrag pro Vertragsteil', kuebr  DECIMAL(16,2) COMMENT 'Differenz zwischen konstanter Ueberschussrente und bereits zugeteilter Bonusrente', latodbon  DECIMAL(16,2) COMMENT 'Todesfalleistung Bonus', lasofortbon  DECIMAL(16,2) COMMENT 'Leistung-Sofortbonus (ausser Todesfall)', tbtyporig  INTEGER COMMENT 'Urspruengliche Belegung von tbTyp (Contains the defined segment types for vb.tbTyp. (lf4 s', larbeg  DECIMAL(16,2) COMMENT 'Garantierte Rente plus Bonusrente aus Ueberschussanteilen der Aufschubzeit', rentbbetr  DECIMAL(16,4) COMMENT 'Wert (Hoehe) einer laufenden Bonus-Rente', rentbetr  DECIMAL(16,4) COMMENT 'Wert (Hoehe) einer laufenden Rente', rentgbetr  DECIMAL(16,4) COMMENT 'Wert (Hoehe) einer laufenden Garantie-Rente', rentmbetr  DECIMAL(16,4) COMMENT 'Wert (Hoehe) einer minimalen Garantierente', gargebuehrrel  DECIMAL(10,8) COMMENT 'Die Garantiegebuehr ist eine einmalige oder laufende Gebuehr, die aus dem Beitrag oder dem', gargebuehrrelabw  DECIMAL(10,8) COMMENT 'garGebuehrRelAbw kann durch Vorgabe eines abweichenden Termins garAbwTermin oder direkt be', gueabvariante  TIMESTAMP COMMENT 'Datum, seit dem die Tarifvariante fuer den Baustein wirksam ist', konstuebbeg  TIMESTAMP COMMENT 'Bezugstermin fuer die konstante Ueberschussrente.', labezkonstueb  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer die konstante Ueberschussrente.', guthabrentueb  DECIMAL(16,2) COMMENT 'Guthaben bei Rentenuebergang fuer Teilkapitalisierung zum Rentenbeginn.', rizuintegr  DECIMAL(16,2) COMMENT 'Differenz des berechneten Zahlbeitrags zu dem Zahlbeitrag ohne Beruecksichtigung der Ueber', tbaorizu  DECIMAL(16,2) COMMENT 'Tarifbeitrag ohne Beruecksichtigung der Uebersterblichkeit', btrdiffmig  DECIMAL(16,2) COMMENT 'Migrationsrabatt am BS', uebverrdiffmig  DECIMAL(16,2) COMMENT 'Verrechnungskorrektur am BS', bewresbar  DECIMAL(16,2) COMMENT 'Barrente aus Bewertungsreserven im Rentenbezug (Jahreswert) am BS', indexnachbearb  INTEGER COMMENT 'Angabe des Indices, durch den die vertragsindividuellen Rechnungsgrundlagen des Bausteins ', erlgar  DECIMAL(16,2) COMMENT 'Erlebensfallgarantie', abschlkovar  INTEGER COMMENT 'Variante der Abschlusskostenmodifikation', steuzuschlag  DECIMAL(15,2) COMMENT 'Steuerzuschlag fuer eine Steuer auf Praemien', gba_nominal  DECIMAL(18,4) COMMENT 'Nominaler Beitrag zur Skalierung von gba', nba_nominal  DECIMAL(18,4) COMMENT 'Nominaler Beitrag zur Skalierung von nba', nettoba_nominal  DECIMAL(18,4) COMMENT 'Nominaler Beitrag zur Skalierung von nettoba', tba_nominal  DECIMAL(18,4) COMMENT 'Nominaler Beitrag zur Skalierung von tba', zillba_nominal  DECIMAL(18,4) COMMENT 'Nominaler Beitrag zur Skalierung von zillba', akzkalk  DECIMAL(15,2) COMMENT 'Volumen der klassischen gezillmerten kalkulatorischen AK', aknzkalk  DECIMAL(15,2) COMMENT 'Volumen der klassischen nicht gezillmerten kalkulatorischen AK', akzbil  DECIMAL(15,2) COMMENT 'Volumen der klassischen gezillmerten bilanziellen AK', aknzbil  DECIMAL(15,2) COMMENT 'Volumen der klassischen nicht gezillmerten bilanziellen AK', kzzielreserve  INTEGER COMMENT 'Kennzeichen zur Verwendung der Ueberschuesse fuer Zielreserve', bszb_nominal  DECIMAL(18,4) COMMENT 'Nominaler Beitrag zur Skalierung von bszb.', garantieniveau  DECIMAL(9,6) COMMENT 'Niveau der Beitragsgarantie', garantiefinanzierungstyp  INTEGER COMMENT 'Typ der Finanzierung der Garantie, etwa durch Sparbeitraege (Unique identifier of the meth', steuzuschlagsum  DECIMAL(15,2) COMMENT 'Summe der voraussichtlich insgesamt zu entrichtenden Steuer auf Praemien fuer die gesamte ', c_alttarifid  STRING COMMENT 'Alte Tarifbezeichnung fuer ERO-Tarife bei Migration', c_gammamig  DECIMAL(12,8) COMMENT 'Zusaetzliche Verwaltungskosten aufgrund Deckungskapitaldifferenz bei Migration', c_la1_akt  DECIMAL(16,2) COMMENT 'Aktuelle Leistung la1 am Vertragsbaustein', c_kzlstspektrum  INTEGER COMMENT 'Kennzeichen, ob der Baustein dem Leistungsprofil des VT folgt.', c_gammamigren  DECIMAL(12,8) COMMENT 'Zusaetzliche Verwaltungskosten aufgrund Deckungskapitaldifferenz fuer die leistungspflicht', c_gammamigbfr  DECIMAL(12,8) COMMENT 'Zusaetzliche Verwaltungskosten aufgrund Deckungskapitaldifferenz fuer die beitragsfreie Ze', c_tba_ungezillmert  DECIMAL(16,2) COMMENT 'Der Tarifbeitrag ohne Beruecksichtung der gezillmerten Abschlusskosten.', c_tba_zstrich  DECIMAL(16,2) COMMENT 'Der Tarifbeitrag verschoben um ein Jahr fuer angepasste Abschlusskosten.', c_la2_akt  DECIMAL(16,2) COMMENT 'Aktuelle Leistung la2 am Vertragsbaustein', c_ak_rizu  DECIMAL(16,2) COMMENT 'Abschlusskosten auf Risikozuschlag absolut', c_fba  DECIMAL(16,2) COMMENT 'Fiktiver Beitrag als Bezugsgroesse fuer den Grundueberschuss', c_bezgrundueb  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer den Grundueberschuss', c_bezzinsueb  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer den Zinsueberschuss', c_dauzusleist  DECIMAL(16,10) COMMENT 'Zusatzleistungsdauer', c_larisueb  DECIMAL(16,2) COMMENT 'Bonusleistung aus Risikoueberschuessen', c_antfakzinsueb  DECIMAL(12,10) COMMENT 'Anteilsfaktor Bonusleistung / Ansammlungsguthaben aus Zinsueberschuessen im Verhaeltnis zu', c_antfakbezgrundueb  DECIMAL(12,10) COMMENT 'Anteilsfaktor auf die Bezugsgroesse fuer den Grundueberschuss', c_lagarbon  DECIMAL(16,2) COMMENT 'Garantiebonusleistung', c_tbagarbon  DECIMAL(16,2) COMMENT 'Garantiebonusbeitrag', c_antfaksue  DECIMAL(16,10) COMMENT 'Anteilsfaktor auf die Bemessungsgroesse fuer den Schlussueberschuss', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'vb' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vbuebverw (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', vsys  INTEGER COMMENT 'id of VbUebVerw (Systematik fuer die Ueberschuss - Verwendung: ratierlich oder Stichtag)', partkey  SMALLINT COMMENT 'the partition key', verans  DECIMAL(16,2) COMMENT 'Erreichter Stand des Ansammlungsguthabens.', zutverans  DECIMAL(16,2) COMMENT 'Ausweisung unterjaehriger Zuteilungen ins Ansammlungsguthaben (zur Vermeidung von Zinseszi', zutkorvs  DECIMAL(16,2) COMMENT 'Vorschuessig zugeteilte, aber noch nicht verwendete Ueberschussanteile.', zutkorns  DECIMAL(16,2) COMMENT 'Nachschuessig zugeteilte, aber noch nicht verwendete Ueberschussanteile. Nachschuessige Ue', zutkorvs_bewres  DECIMAL(16,2) COMMENT 'Vorschuessig zugeteilte, aber noch nicht verwendete ueberschussanteile aus BWR', zutkorns_bewres  DECIMAL(16,2) COMMENT 'Nachschuessig zugeteilte, aber noch nicht verwendete ueberschussanteile aus BWR', c_beiverrns  DECIMAL(16,2) COMMENT 'Nachschuessig zugeteilte Ueberschuesse fuer die Verrechnung mit Beitraegen des folgenden V', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Tabelle vbUebVerw wird bei vor- oder nachschuessigen UeberschussVerwendungen mit Ueberschusswerten auf Bausteinebene gefuellt und dient als Basis fuer die bisherige Tabelle skUebVerw auf Vertragsteilebene.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_versausglentn (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', hvgruppeid  SMALLINT COMMENT 'id of HvGruppe (generically derived from HvGruppe)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidref  INTEGER COMMENT 'Das Field bearbIdRef identifiziert zusammen mit dem Field lvId den Vertragsstand, von dem ', entn_dk  DECIMAL(16,2) COMMENT 'Entnahmebetrag Deckungskapital', entn_fvm  DECIMAL(16,2) COMMENT 'Entnahmebetrag Fondsvermoegen', entn_lue  DECIMAL(16,2) COMMENT 'Entnahmebetrag Lfd. Ueberschuesse', entn_sue  DECIMAL(16,2) COMMENT 'Entnahmebetrag Schlussueberschuss', entn_lstuebbr  DECIMAL(16,2) COMMENT 'Entnahmebetrag Leistung aus Bewertungsreserven', entn_ausglwert  DECIMAL(16,2) COMMENT 'Entnahmebetrag Ausgleichswert', entn_kosten  DECIMAL(16,2) COMMENT 'Entnahmebetrag Kosten', entn_datum  TIMESTAMP COMMENT 'Datum der Entnahme', basisuebbr  DECIMAL(16,2) COMMENT 'Bewegungen in den Basisgroessen fuer Bewertungsreserve', basissue  DECIMAL(16,2) COMMENT 'Bewegungen in den Basisgroessen fuer Schlussueberschuss', entn_ausglwertvorg  DECIMAL(16,2) COMMENT 'vorgegebener Entnahmebetrag Ausgleichswert vor Umbewertung', beschlussdat  TIMESTAMP COMMENT 'Datum des Beschlusses des Familiengerichts zu einem Versorgungsausgleich. Ist fuer Riester', kzversausglueb  INTEGER COMMENT 'Kennzeichen, ob im Rahmen des Versorgungsausgleichs eine Uebertragung der Bezugsgroessen a', prozueb  DECIMAL(12,8) COMMENT 'Der uebertragene Prozentsatz bei VA Riester', zins  DECIMAL(6,4) COMMENT 'Zinssatz, mit dem der vorgegebene Ausgleichswert zwischen Eheende und Rechtskraft des Besc', zinsbis  TIMESTAMP COMMENT 'Termin bis zu dem der vorgegebene Ausgleichswert ab dem Eheende verzinst wird. Dies ist in', kapitalverzehrsfaktor  DECIMAL(16,8) COMMENT 'Der Kapitalverzehrsfaktor basiert auf einem Barwertvergleich. Der Wert 1 - Kapitalverzehrs', kzumbewertung  INTEGER COMMENT 'Kennzeichen fuer Umbewertung bei Entnahme Versorgungsausgleich', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Schnittstelle Entnahme Versorgungsausgleich' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_versausgl (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', hvgruppeid  SMALLINT COMMENT 'id of HvGruppe (generically derived from HvGruppe)', ehezeitbeg  TIMESTAMP COMMENT 'id of VersAusgl (Beginn der Ehezeit)', bearbid  INTEGER COMMENT 'the historical version number (logId)', dkbeg  DECIMAL(16,2) COMMENT 'Deckungskapital zum Beginn der Ehezeit', luebeg  DECIMAL(16,2) COMMENT 'Lfd. Ueberschuesse zum Beginn der Ehezeit', suebeg  DECIMAL(16,2) COMMENT 'Schlussueberschuss zum Beginn der Ehezeit', lstuebbrbeg  DECIMAL(16,2) COMMENT 'Leistung aus Bewertungsreserven zum Beginn der Ehezeit', lstgesbeg  DECIMAL(16,2) COMMENT 'Gesamtleistung zum Beginn der Ehezeit', dkende  DECIMAL(16,2) COMMENT 'Deckungskapital zum Ende der Ehezeit', lueende  DECIMAL(16,2) COMMENT 'Lfd. Ueberschuesse zum Ende der Ehezeit', sueende  DECIMAL(16,2) COMMENT 'Schlussueberschuss zum Ende der Ehezeit', lstuebbrende  DECIMAL(16,2) COMMENT 'Leistung aus Bewertungsreserven zum Ende der Ehezeit', lstgesende  DECIMAL(16,2) COMMENT 'Gesamtleistung zum Ende der Ehezeit', kosten  DECIMAL(16,2) COMMENT 'Kosten der Teilung', kapitalwert  DECIMAL(16,2) COMMENT 'Kapitalwert waehrend der Ehezeit', ausgleichswert  DECIMAL(16,2) COMMENT 'Vorgeschlagener Ausgleichswert fuer die Ehezeit', ehezeitende  TIMESTAMP COMMENT 'Ende der Ehezeit', bezanrecht  INTEGER COMMENT 'Bezeichnung des zu uebertragenden Anrechts', burente  DECIMAL(16,2) COMMENT 'Betrag, der mtl. aufgrund einer leistungspflichtigen BU-Rente bezahlt wird.', fvmbeg  DECIMAL(16,2) COMMENT 'Fondsvermoegen zum Beginn der Ehezeit', basissuebeg  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer Schlussueberschuss zum Beginn der Ehezeit', basisuebbrbeg  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer Leistung aus Bewertungsreserven zum Beginn der Ehezeit', fvmende  DECIMAL(16,2) COMMENT 'Fondsvermoegen zum Ende der Ehezeit', basissueende  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer Schlussueberschuss zum Ende der Ehezeit', basisuebbrende  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer Leistung aus Bewertungsreserven zum Ende der Ehezeit', teilungsart  INTEGER COMMENT 'Art der Teilung, die dem Familiengericht vorgeschlagen wird.', ausgleichswertueb  DECIMAL(16,2) COMMENT 'Vorgeschlagener Ausgleichswert fuer die Ehezeit bei Uebertragung der Bezugsgroessen anstat', kapitalwertueb  DECIMAL(16,2) COMMENT 'Kapitalwert waehrend der Ehezeit bei Uebertragung der Bezugsgroessen anstatt Kapitalisieru', lstgesbegueb  DECIMAL(16,2) COMMENT 'Gesamtleistung zum Beginn der Ehezeit bei Uebertragung der Bezugsgroessen anstatt Kapitali', lstgesendeueb  DECIMAL(16,2) COMMENT 'Gesamtleistung zum Ende der Ehezeit bei Uebertragung der Bezugsgroessen anstatt Kapitalisi', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', kzversausglueb  INTEGER COMMENT 'Kennzeichen, ob im Rahmen des Versorgungsausgleichs eine Uebertragung der Bezugsgroessen a', zins  DECIMAL(6,4) COMMENT 'Zinssatz (z.B. Rechnungszins), der bei der Auskunft zu einem Versorgungsausgleich fuer die', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'In dieser Tabelle werden Daten fuer den Versorgungsausgleich zur Finanzierungs-Aufteilung je Finanzierungstyp gespeichert. Fuer bAV-Vertraege wird das Vermoegen je Finanzierungstyp zum Ehezeitbeginn und zum Ehezeitende aufgeteilt. Zusaetzlich wird angeze' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vertschl (bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', fondsid  INTEGER COMMENT 'id of Vertschl (Interne Kennummer eines Fonds)', pant  DECIMAL(16,8) COMMENT 'Proz. Anteil zu dem der Sparbeitrag in einen Fonds fliesst.Constraint pant_RANGE: die proz', naturp  INTEGER COMMENT 'Kennzeichen ob Naturalleistung zugelassen ist.', datleaus  TIMESTAMP COMMENT 'Datum der letzten Fondsausschuettung.', datlerueck  TIMESTAMP COMMENT 'Datum der letzten Rueckerstattung KoeSt.', datleumst  TIMESTAMP COMMENT 'Datum der letzten Fondsumstellung.', nateant  DECIMAL(22,8) COMMENT 'Anzahl der ueber Naturaleinlage eingebrachten Fondsanteile', datleausfp  TIMESTAMP COMMENT 'Datum der letzten Fondsausschuettung Forward Pricing (Schritt 2)', datumsch  TIMESTAMP COMMENT 'Datum der Umschichtung/Fondsliquidation', kzwertsicher  INTEGER COMMENT 'id of Vertschl (Verwendungscharakter des Fonds im Vertrag (auch ein Garantiefonds kann als', partkey  SMALLINT COMMENT 'the partition key', kursselektion  INTEGER COMMENT 'Gibt vor , welche Kursarten zu selektieren sind. (Contains constants for the types of fund', kzabwfondswifri  INTEGER COMMENT 'Kennzeichen fuer abweichenden Fonds in der Widerrufsfrist', investtype  INTEGER COMMENT 'id of Vertschl (Bestimmt fuer welche Investition (Beitrag, Zuzahlung) der Verteilungsschlu', portfid  INTEGER COMMENT 'id of Vertschl (Interne Kennnummer eines Portfolios)', fondsstatus  INTEGER COMMENT 'Kennzeichnung ob der Fonds fuer Anlage offen ist.', pantinportf  DECIMAL(16,8) COMMENT 'relativer Anteil eines Fonds unterhalb eines Portfolios bzw. 100, falls der Fonds nicht zu', pantofportf  DECIMAL(16,8) COMMENT 'relativer Anteil eines Portfolios im vertschl bzw. gleich dem pant, falls der Fonds nicht ', kzgemanagt  INTEGER COMMENT 'Kennzeichen gemanagtes Portfolio', portfname  STRING COMMENT 'Name des Portfolios', datlebstdswitch  TIMESTAMP COMMENT 'Datum letzter Bestandsswitch', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Prozentuale Verteilung der Zahlungsstroeme auf die FondsHistorie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenVerteilungsschluessel: Angaben zur prozentualen Verteilung auf die Fonds' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vp (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', partnerid  INTEGER COMMENT 'id of Vp (Das Field partnerId identifiziert dieversicherte Person, zu der diese Row eine A', rollenid  INTEGER COMMENT 'id of Vp (Identifikation einer Partnerrolle in einer Partner-Vertrags-Beziehung)', bugradbefr  DECIMAL(16,8) COMMENT 'Grad der Berufsunfaehigkeit fuer den Beitragsbefreiungsteil', bugradrente  DECIMAL(16,8) COMMENT 'Grad der Berufsunfaehigkeit fuer den Rententeil', wirkdateugrad  TIMESTAMP COMMENT 'Datum, an dem die letzte aenderung des EU-Grads wirksam wird', kzsondwaggeprueft  INTEGER COMMENT 'Schluesselwerte fuer die Pruefung eines Sonderwagnisses:(0) seit der letzten technischen a', kkid  INTEGER COMMENT 'Interne Krankenkassen-Nummer, laufende Nummer als Schluessel in krankenkasse', kzkv  INTEGER COMMENT 'Hoehe des Krankenversicherungsbeitrags (Schluesselverzeichnis)', kzpv  INTEGER COMMENT 'Hoehe des Pflegeversicherungsbeitrags (Schluesselverzeichnis)', lanerbisbefr  TIMESTAMP COMMENT 'Termin, bis zu dem die Leistung anerkannt ist fuer die BUZB.', lanerbisrente  TIMESTAMP COMMENT 'Termin, bis zu dem die Leistung anerkannt ist fuer die BUZR.', kzschadenresbuz  SMALLINT COMMENT 'Kennzeichen fuer die BUZ-Schadenreserve.', kzschadenrestod  SMALLINT COMMENT 'Kennzeichen fuer die Tod-Schadenreserve.', partkey  SMALLINT COMMENT 'the partition key', kzesee  INTEGER COMMENT 'Einwilligung zur Entbindung der Schweigepflicht erteilt', datesee  TIMESTAMP COMMENT 'Einwilligung erteilt am', pflegestufe  INTEGER COMMENT 'Die konkrete Pflegestufe die bei der VP aktuell vorliegt', kzschadenrespflege  INTEGER COMMENT 'Kennzeichen fuer die Pflegerenten-Schadenreserve', kzschadenresdd  INTEGER COMMENT 'Kennzeichen fuer die Dread Disease-Schadenreserve', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Versicherte Person.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenVersicherte-Person: Die versicherte Person ist ein Partner, der durch den Vertragsteil versichert ist und damit die Grundlage fuer die Risikoprue' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vpvt (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', partnerid  INTEGER COMMENT 'id of VpVT (Das Field partnerId identifiziert die versicherte Person, zu der diese Row ein', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', rollenid  INTEGER COMMENT 'id of VpVT (Identifikation einer Partnerrolle in einer Partner-Vertrags-BeziehungConstrain', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', vptypid  SMALLINT COMMENT 'Eindeutige Identifizierung eines Typs von versicherter Person. Es gibt die Typen VP1(1) un', gebdat  TIMESTAMP COMMENT 'Das Geburtsdatum ist der Termin, an dem die natuerliche Person geboren wurde.', sex  INTEGER COMMENT 'Identifizierender Schluessel fuer das Geschlecht einer natuerlichen Person.', toddat  TIMESTAMP COMMENT 'Datum, an dem eine natuerliche Person gestorben ist.', heidat  TIMESTAMP COMMENT 'Datum, an dem eine natuerliche Person geheiratet hat.', todmelddat  TIMESTAMP COMMENT 'Meldedatum des Todesfalls', berufid  INTEGER COMMENT 'Eindeutiger Bezeichner fuer einen Beruf. (In der Standard Implementierung enthaelt dieses ', partkey  SMALLINT COMMENT 'the partition key', pflegestufe  INTEGER COMMENT 'Die konkrete Pflegestufe die bei der VP fuer den VT aktuell vorliegt', zustandvp  INTEGER COMMENT 'Zustand der versicherten Person (tot, pflegebeduerftig, usw.)', zustandvpseit  TIMESTAMP COMMENT 'Der Termin seit welchem sich die versicherte Person in ihrem aktuellen Zustand (zustandVP)', lstgledat  TIMESTAMP COMMENT 'Datum des letzten Leistungsfalles', c_eaberechmethode  INTEGER COMMENT 'Vertragsindividuelle Berechnungsmethode fuer das Eintrittsalter', eakalk  INTEGER COMMENT 'Kalkulatorisches Eintrittsalter der versicherten Person', c_letzteuntersuch  INTEGER COMMENT 'Datum der letzten aerztlichen Untersuchung der versicherten Person', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die in einem LV versicherten Personen werden den Vertragsteilen zugeordnet.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenVersicherte-Person-VT: Mit Hilfe dieser Entitaet werden die in einem LV-Vertrag versicher' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vtlstg (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', lstgtyp  INTEGER COMMENT 'id of VtLstg (Leistungsart)', partkey  SMALLINT COMMENT 'the partition key', bearbid  INTEGER COMMENT 'the historical version number (logId)', lstgwertakt  DECIMAL(18,4) COMMENT 'Aktueller Leistungswert', lstgwertrel  DECIMAL(16,8) COMMENT 'Relativer Leistungswert', vorgtyp  INTEGER COMMENT 'Steuert, ob die Leistung relativ oder absolut vorgegeben wird', lstgprofil  INTEGER COMMENT 'Leistungsprofil fuer die aktuelle Leistungsart', lstgoption  INTEGER COMMENT 'Das Attribut steuert, wie die Leistungen beim ausserplanmaessigen Leistungsuebergang angep', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Speicherung von Leistungen und Leistungsvorgabe je Leistungsart am Vertragsteil' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vtpflege (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', partnerid  INTEGER COMMENT 'id of VpVT (Das Field partnerId identifiziert die versicherte Person, zu der diese Row ein', rollenid  INTEGER COMMENT 'id of VpVT (Identifikation einer Partnerrolle in einer Partner-Vertrags-BeziehungConstrain', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', partkey  SMALLINT COMMENT 'the partition key', pflegestufe  INTEGER COMMENT 'id of VtPflege (Die konkrete Pflegestufe fuer die der relevante "leistungsSatz" gilt)', leistungssatz  DECIMAL(16,8) COMMENT 'Bestimmt die Hoehe der Leistung fuer die konkrete Pflegestufe in Prozent von der versicher', beginnpflegestufe  TIMESTAMP COMMENT 'Termin zu dem der Versicherungsfall eintritt, idR gleichzeitig der Termin zu dem die Pfleg', rang  INTEGER COMMENT 'Rangfolge der Pflegestufe, eindeutig innerhalb vpVT', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Speichert die am Vertragsteil fuer eine versicherte Person versicherten Leistungen je Pflegestufe, sowie das jeweilige Eintrittsdatum der einzelnen Pflegestufen' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vt (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', tfid  STRING COMMENT 'Eindeutiger Identifikator eines LV-Tarifs', generation  STRING COMMENT 'Kennzeichnet die Generationenfolge grundsaetzlich identischer Produkte oder Tarife im Zeit', vtueb  SMALLINT COMMENT 'Jeder Vertragsteil (mit Ausnahme des ""obersten"") hat genau einen uebergeordneten Vertrag', ratzuid  SMALLINT COMMENT 'Eindeutigen Identifizierung eines Ratenzu- oder -abschlag-Systems.', bugrad  DECIMAL(16,8) COMMENT 'Enthaelt den Grad der Berufsunfaehigkeit, die dem Versicherten anerkannt wird. Er kann abw', uebsatz  DECIMAL(7,3) COMMENT 'Das Field uebSatz ist nur sinnvoll bei zwei versicherten Personen; es enthaelt den Satz (z', przlaner  DECIMAL(16,8) COMMENT 'Dieses Feld gibt den Prozentsatz der Leistungsanerkennung im Berufsunfaehigkeitsfall an, i', vterhproz  DECIMAL(16,8) COMMENT 'Erhoehung des Beitrags in Prozent fuer Tarife mit Beitragssprung oder steigendem Beitrag.', bearbid  INTEGER COMMENT 'the historical version number (logId)', beitraganfang  DECIMAL(16,2) COMMENT 'Beitrag gemaess Zahlweise bei Versicherungsbeginn', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', reabeg  TIMESTAMP COMMENT 'Termin, zu dem ein leistungspflichtiger BUZ-Vertragsteil reaktiviert wird. Der Vertragstei', vterhdat  TIMESTAMP COMMENT 'Termin des ersten Beitragssprungs.', bszberh  DECIMAL(16,2) COMMENT 'absolute Erhoehung des Zahlbeitrags im Rahmen des Beitragssprungs', bugrdid  INTEGER COMMENT 'Grund fuer die Berufsunfaehigkeit', uebverwsys  INTEGER COMMENT 'Eindeutige Identifizierung eines ueberschussverwendungssystems.', anmeldedat  TIMESTAMP COMMENT 'Anmeldetermin der Berufsunfaehigkeit', uebverwsysbfr  INTEGER COMMENT 'Eindeutige Identifizierung eines ueberschussverwendungssystems fuer die Beitragsfreie Zeit', uebverwsyslst  INTEGER COMMENT 'Eindeutige Identifizierung eines ueberschussverwendungssystems fuer die Rentenbezugszeit', labl  TIMESTAMP COMMENT 'Ablauftermin der Leistung bei BUZ / HZV', gabl  TIMESTAMP COMMENT 'Ablauftermin der Garantiezeit', bzabl  TIMESTAMP COMMENT 'Zu diesem Datum endet die planmaessige Beitragszahlung fuer den LV-Vertragsteil. Der Ablau', vtabl  TIMESTAMP COMMENT 'Datum, zu dem der LV-Vertragsteil ablaeuft', optabl  TIMESTAMP COMMENT 'Termin, an dem die flexible Ablaufphase endet.', rbeg  TIMESTAMP COMMENT 'Rentenbeginntermin', beginnvt  TIMESTAMP COMMENT 'Beginn des Vertragsteils (Termin)', zweiexk  INTEGER COMMENT 'Vertraglich vereinbarte Zahlweise der Leistungen fuer einen Vertragsteil.', la1  DECIMAL(18,4) COMMENT 'In der Tarifklasse Klassik-Kapital oder Risiko ist la1 die (anfaengliche) Todesfallsumme, ', la2  DECIMAL(16,2) COMMENT 'In der Tarifklasse Klassik-Kapital ist la2 die (abweichende) Erlebensfallsumme, bei Rente ', erhlaproz  DECIMAL(12,6) COMMENT 'Beschreibt eine relative Erhoehung der LeistungBeispiel: Leistungssteigerung der BU-Rente ', trdk  DECIMAL(16,2) COMMENT 'Die technische Rundungskorrektur dient dazu, bei der Berechnung des Zahlbeitrags die Addit', vtstkk  DECIMAL(16,2) COMMENT 'In den Zahlbeitrag pro Faelligkeit eingerechnete Stueckkosten, die auf Vertragsteilebene f', sra  DECIMAL(16,2) COMMENT 'Bei Altvertraegen: Jaehrlich kalkulierter Beitrag (absolut,vorzeichenbehaftet), der auf Su', vtuebverr  DECIMAL(16,2) COMMENT 'Das Field vtuebverr enthaelt den Betrag, um den der ratierliche Zahlbeitrag pro Vertragste', zb  DECIMAL(16,2) COMMENT 'Der je Ratenzahlungsabschnitt (tariflich) faellige Zahlbeitrag. Eine Beitragsreduktion aus', vtsamink  DECIMAL(16,2) COMMENT 'Absolutbetrag je Zahlweise, um den der Vertragsteil-Beitrag aufgrund Sammelrabatt reduzier', jb  DECIMAL(16,2) COMMENT 'Juristischer Jahresbeitrag, massgeblich in den AVB', rabattid  INTEGER COMMENT 'Identifizierung von Rabattsystemen ueber Schluesselsysteme', zbsum  DECIMAL(16,2) COMMENT 'Enthaelt die voraussichtliche Beitragssumme der Zahlbeitraege fuer den gesamten Zeitraum d', kzkoll  SMALLINT COMMENT 'Ordnet eine Produkt-/Tarif-Kombination dem Kollektiv- oder Einzelbereich zu', mrs  DECIMAL(16,2) COMMENT 'Mindestrisikosumme errechnet sich als Quotient aus Mindestrisikoleistung (la2) und Mindest', mts  DECIMAL(16,2) COMMENT 'Mindesttodesfallsumme errechnet sich als Quotient aus Mindesttodesfalleistung (la1) und Mi', tbvartyp  SMALLINT COMMENT 'Variante des Tarifbausteins, z.B. Standard oder Kollektiv', mrsf  DECIMAL(16,8) COMMENT 'Faktor mit dem die Mindestrsikosumme gewichtet wird, um die Mindestrisikosummenleistung zu', mtsf  DECIMAL(16,8) COMMENT 'Faktor mit dem die Mindesttodesfallsumme gewichtet wird, um die Mindesttodesfalleistung zu', zustand  INTEGER COMMENT 'Zustand des Vertragsteils, beispielweise beitragspflichtig, leistungspflichtig oder abgega', zbguebis  TIMESTAMP COMMENT 'Termin, bis zu dem der Zahlbeitrag gueltig ist, d.h. Sprungtermin bei Vertraegen mit Beitr', bewprov  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer die Provision', latodbon  DECIMAL(16,2) COMMENT 'Todesfalleistung Bonus', kuebr  DECIMAL(16,2) COMMENT 'Differenz zwischen konstanter ueberschussrente und bereits zugeteilter Bonusrente', larbeg  DECIMAL(16,2) COMMENT 'Garantierte Rente plus Bonusrente aus ueberschussanteilen der Aufschubzeit', kzgeneriert  INTEGER COMMENT 'Steuert, ob ein Datensatz (z.B. ein VT) vom SB oder vom System angelegt wird', vtidoriginal  SMALLINT COMMENT 'Nur relevant bei (und nach) BUZ-Leistungsbearbeitungen: Die Nummer identifiziert zusammeng', lstgbfrbis  TIMESTAMP COMMENT 'An diesem Termin soll die Hoehe einer Leistung bzw. die Pflicht zur Leistung (z.B. BUZ-Lei', tfidopt  STRING COMMENT 'Eindeutiger Identifikator eines Optionstarifs (z.B. uebergang in Rente)', laopt  DECIMAL(16,2) COMMENT 'Leistung bei uebergang in einen Optionstarif (z.B. uebergang in Rente)', kzoption  SMALLINT COMMENT 'Beschreibt die Qualitaet der Durchfuehrung einer Option, z.B. ob bei einem Rentenuebergang', kofakalpha  DECIMAL(8,6) COMMENT 'Hiermit koennen die rechnungsmaessigen Abschlusskosten von aussen (also vertragsseitig) ve', portfid  INTEGER COMMENT 'Gibt die Art eines Portefeuilles an: frei waehlbar - Sicherheit - Wachstum - Dynamik', bews  DECIMAL(16,2) COMMENT 'Bemessungsgroesse fuer die Kosten.', vorvers  DECIMAL(16,2) COMMENT 'Vorversicherungssumme eines anderen Vertrags', bzablmin  TIMESTAMP COMMENT 'fruehestes Ende der Beitragszahlung', bzablmax  TIMESTAMP COMMENT 'spaetestes Ende der Beitragszahlung', rbegmin  TIMESTAMP COMMENT 'fruehester Rentenbeginn', rbegmax  TIMESTAMP COMMENT 'spaetester Rentenbeginn', rvquote  DECIMAL(8,6) COMMENT 'Das Field rvQuote enthaelt die Quote (zwischen 0.0 und 1.0), mit der dieser Vertragsteil-S', freischlue  INTEGER COMMENT 'Im Datenmodell nicht naeher spezifiertes Schluesselattribut, um Kundenspezifika zu antizip', rentbetr  DECIMAL(16,4) COMMENT 'Wert (Hoehe) einer laufenden Rente', rentbbetr  DECIMAL(16,4) COMMENT 'Wert (Hoehe) einer laufenden Bonus-Rente', rentgbetr  DECIMAL(16,4) COMMENT 'Wert (Hoehe) einer laufenden Garantie-Rente', btrdiffmig  DECIMAL(16,2) COMMENT 'Wird im Rahmen einer Migration als Differenz aus bisherigem und errechnetem Beitrag (gemae', uebverrdiffmig  DECIMAL(16,2) COMMENT 'Wird im Rahmen einer Migration als Differenz aus bisherigem und errechnetem Betrag der ueb', karenzzeit  SMALLINT COMMENT 'Karenzzeit bei BU-Versicherung in Monaten', akrabatt  DECIMAL(16,2) COMMENT 'Die im Rahmen der Rueckgabe von Provisionen rabattierten Abschlusskosten', kzrv  INTEGER COMMENT 'Schluesselwerte, die dieRueckversicherungdes Vertragsteil-Standes naeher kennzeichnen:kein', lasofortbon  DECIMAL(16,2) COMMENT 'Leistung-Sofortbonus (ausser Todesfall)', btrabglzb  DECIMAL(16,2) COMMENT 'Beitragsabgleich - im Zahlbeitrag enthalten', mtsfid  INTEGER COMMENT 'Schluesselwert des gewaehlten Mindesttdeodesfallfaktors', larbeggar  DECIMAL(16,2) COMMENT 'Prognostizierte garantierte Altersrente; insbesondere fuer den Fall, dass alle kuenftigen ', btrdiffwsw  DECIMAL(16,2) COMMENT 'Beitragsdifferenz aus einer Waehrungsumstellung', uebverrdiffwsw  DECIMAL(16,2) COMMENT 'Verrechnungsbetragsdifferenz aus einer Waehrungsumstellung', tfidtbf  STRING COMMENT 'Tarif-ID, die nur fuer TBF und Rechnungslegung verwendet wird; alle anderen Komponenten ve', minbtg  DECIMAL(16,2) COMMENT 'Vereinbarter Mindestbeitrag', flexbeg  TIMESTAMP COMMENT 'flexbeg ist das Datum, an dem die flexible Abrufphase beginnt', vterhdattfl  TIMESTAMP COMMENT 'Termin der Erhoehung des Todesfallschutzes', la3  DECIMAL(16,2) COMMENT 'Anfangstodesfallleistung bei Tarifen mit Leistungssprung', kzl1ra  SMALLINT COMMENT 'Steuert, ob die Leistung 1 relativ oder absolut vorgegeben wird', kzl2ra  SMALLINT COMMENT 'Steuert, ob die Leistung 2 relativ oder absolut vorgegeben wird', kzl3ra  SMALLINT COMMENT 'Steuert, ob die Leistung 3 relativ oder absolut vorgegeben wird', lr1  DECIMAL(16,8) COMMENT 'relative Leistung 1', lr2  DECIMAL(16,8) COMMENT 'relative Leistung 2', lr3  DECIMAL(16,8) COMMENT 'relative Leistung 3', hvgruppeid  SMALLINT COMMENT 'id of HvGruppe (generically derived from HvGruppe)', antsatzfonds  DECIMAL(7,3) COMMENT 'Das Attribut antsatzFonds legt fest, welcher Teil des Beitrags, nach Abzug des Anteils fue', minbtgsum  DECIMAL(16,2) COMMENT 'Das Attribut enthaelt die vereinbarte Regelbeitragssumme. Der Wert wird bei der Policierun', minbtgsumakt  DECIMAL(16,2) COMMENT 'Das Attribut enthaelt die vereinbarte Regelbeitragssumme bis zum Berechnungszeitpunkt. Auf', lanerbis  TIMESTAMP COMMENT 'Termin, bis zu dem die Leistung anerkannt ist.', kzschadenresbuz  SMALLINT COMMENT 'Kennzeichen fuer die BUZ-Schadenreserve.', kzschadenrestod  SMALLINT COMMENT 'Kennzeichen fuer die Tod-Schadenreserve.', garantieniveau  DECIMAL(9,6) COMMENT 'Niveau der Beitragsgarantie', typablaufmmt  INTEGER COMMENT 'Der Typ eines Ablaufmanagement steuert, welches Ziel-Portefeuille und welche prozentuale A', kzablaufmmt  INTEGER COMMENT 'Das Kennzeichen Ablaufmanagement steuert: <br /> - Ablaufmanagement ist aktiv <br /> - Abl', partkey  SMALLINT COMMENT 'the partition key', beg_btgpause  TIMESTAMP COMMENT 'Beginn der Beitragspause', end_btgpause  TIMESTAMP COMMENT 'Ende der Beitragspause', zeichjahr  TIMESTAMP COMMENT 'Zeichnungsjahr,Gruppierungsmerkmal', garniveauguth  DECIMAL(9,6) COMMENT 'Niveau der Guthabengarantie', anlstratid  INTEGER COMMENT 'Eindeutige Identifizierung eines Anlagestrategie-Typs.', niveauguthid  INTEGER COMMENT 'Eindeutige Identifizierung eines Anpassungsmodus fuer das Niveau der Guthabengarantie.', niveaubtgid  INTEGER COMMENT 'Eindeutige Identifizierung eines Anpassungsmodus fuer das Niveau der Beitragsgarantie', kzrente  SMALLINT COMMENT 'Dieses Kennzeichen steuert die Art der Verrentung bei DHP', garniveaurente  DECIMAL(9,6) COMMENT 'Niveau der Rentengarantie', rentmbetr  DECIMAL(16,4) COMMENT 'Wert (Hoehe) einer minimalen Garantierente', larbegges  DECIMAL(16,2) COMMENT 'Gesamtrente bei Rentenbeginn - fuer Pruefung auf Kleinbetragsrente', kzgverlbzd  SMALLINT COMMENT 'Kennzeichen fuer die Fuehrung des Guthabens an steuSchZuord bei Verlaengerung Beitragszahl', zertid  STRING COMMENT 'Zertifizierungsnummer fuer Riester- und Basisvertraege (List of government certifcation ID', gargebuehrentntyp  SMALLINT COMMENT 'Die Garantiegebuehr in absoluter Hoehe wird von . garGebuehrRel und garGebuehrEntnahmeTyp ', gmxboption  INTEGER COMMENT 'Zusaetzliche Optionen zu den Garantien GMxB.', kzgverlvd  SMALLINT COMMENT 'Kennzeichen fuer die Fuehrung des Guthabens an steuSchZuord bei Verlaengerung Versicherung', kzrueckkhv  SMALLINT COMMENT 'Kennzeichen, ob Vertragsteil nach Rueckkauf HV weiter laeuft.', minantuebbrkorr  DECIMAL(16,2) COMMENT 'Korrektur des Mindestanteils an Ueberschuessen aus Bewertungsreserven', zbanteilbeginn  DECIMAL(16,2) COMMENT 'Der anteilig faellige Zahlbeitrag zu Beginn des Vertragsteils, wenn der Zeitraum von VT-Be', zbanteilende  DECIMAL(16,2) COMMENT 'Der anteilig faellige, letzte Zahlbeitrag des Vertragsteils vor Ablauf der Beitragszahlung', effektivzins  DECIMAL(7,6) COMMENT 'Effektiver Jahreszins', rizuintegr  DECIMAL(16,2) COMMENT 'Differenz des berechneten Zahlbeitrags zu dem Zahlbeitrag ohne Beruecksichtigung der Ueber', optbeg  TIMESTAMP COMMENT 'Termin an dem die optionale Verlaengerung begonnen hat', rentenart  INTEGER COMMENT 'Steuert, ob ein Datensatz (z.B. ein VT) mit Daten aus Muster vorbelegt wurde.', rbegzr  TIMESTAMP COMMENT 'Rentenbeginntermin der Zeitrente nach Tod in Rentengarantie', bearbidrefabg  INTEGER COMMENT 'Version des Vertragstandes bei der der Vertragsteil abgegangen ist', bewresbar  DECIMAL(16,2) COMMENT 'Barrente aus Bewertungsreserven im Rentenbezug (Jahreswert) am VT', kzvorgtfl  INTEGER COMMENT 'Vorgabekennzeichen fuer die Art der Todesfallleistung', kzvorglabl  INTEGER COMMENT 'Kennzeichen fuer Vorgabe einer Leistungsdauer (0 = keine Vorgabesteuerung; 1 = abgekuerzte', kzvorgvtabl  INTEGER COMMENT 'Kennzeichen fuer Vorgabe einer Versicherungsdauer (0 = keine Vorgabesteuerung; 1 = abgekue', kzschadenrespflege  INTEGER COMMENT 'Kennzeichen fuer die Pflegerenten-Schadenreserve', kznachbearbeitung  INTEGER COMMENT 'Kennzeichen, ob am Vertragsteil eine Nachbearbeitung durchgefuehrt wurde oder nicht. Diese', konsortid  INTEGER COMMENT 'Das Field konsortId identifiziert die Konsortialvereinbarung, nach der dieser Vertragsteil', kzkestrente  INTEGER COMMENT 'Kennzeichen, dass die Rentenzahlungen der Abgeltungsteuer unterliegen', dauerwartezeitj  SMALLINT COMMENT 'Dauer der Wartezeit in Jahren', wzabl  TIMESTAMP COMMENT 'Ablauf der Wartezeit', karenzbeg  TIMESTAMP COMMENT 'Beginntermin der Karenzzeit. Der BU-Vertragsteil ist beitragsfrei und leistungspflichtig w', anrkarenzzeit  INTEGER COMMENT 'Anrechenbare Karenzzeit (in Monaten)', kzbestandskorr  INTEGER COMMENT 'Arten der durchgefuehrten Bestandskorrekturen', vterlgar  DECIMAL(16,2) COMMENT 'Erlebensfallgarantie', rizu  DECIMAL(16,2) COMMENT 'Im Rahmen der Beitragszerlegung ratierlich fuer den Fortschreibungszeitraum ausgewiesener ', guthabrentueb  DECIMAL(16,2) COMMENT 'Guthaben bei Rentenuebergang fuer Teilkapitalisierung zum Rentenbeginn.', abschlkovar  INTEGER COMMENT 'Variante der Abschlusskostenmodifikation', letztebfr  TIMESTAMP COMMENT 'Termin der letzten Beitragsfreistellung', steuregelsekundaer  INTEGER COMMENT 'Regel fuer die Versicherungssteuer', steuzuschlag  DECIMAL(15,2) COMMENT 'Steuerzuschlag, summiert die Steuerzuschlaege auf Praemien der Bausteine des jeweiligen Ve', kzschadenresdd  INTEGER COMMENT 'Kennzeichen fuer die Dread Disease-Schadenreserve', steuregelprimaer  INTEGER COMMENT 'Regel fuer die Versicherungssteuer des primaeren Steuerlandes', kzbtgprofil  INTEGER COMMENT 'Das Kennzeichen legt fest, ob das Vertragsteil an dem (auf HvGruppe-Ebene festgelegten) Be', lstgindik  INTEGER COMMENT 'Kennzeichen zur Identifizierung eines Leistungsindikators', leistungsvariantevp1  INTEGER COMMENT 'Gewaehlte Leistungsvariante', darltilgsatz  DECIMAL(9,6) COMMENT 'Tilgungssatz fuer Darlehen', darlzins  DECIMAL(9,6) COMMENT 'Zinssatz fuer Darlehen', flexteilverrentung  INTEGER COMMENT 'jaehrlich anteilige Verrentung des Fondsguthabens in % (jaehrlich anteilige Verrentung des', fvmsuea  DECIMAL(16,2) COMMENT 'Fondsvermoegen aus Schlussueberschuessen', kzrentenwahlrecht  INTEGER COMMENT 'Kennzeichen ob eine Rentenoption zu einem Vertragsteil ausgeuebt wird', rentenoption  INTEGER COMMENT 'Wert welche Rentenoption fuer den Vertagsteil ausgewaehlt wurde', dauerbindefrist  SMALLINT COMMENT 'Mindestbindefrist in Jahren', zielniveauablaufmmt  DECIMAL(16,8) COMMENT 'Zielniveau des Guthabenanteils in der Reserve zum Ende des Ablaufmanagements', startniveauablaufmmt  DECIMAL(16,8) COMMENT 'Startniveau des Guthabenanteils in der Reserve zum Beginn des Ablaufmanagements', steuzuschlagsum  DECIMAL(15,2) COMMENT 'ssichtlich insgesamt zu entrichtenden Steuer auf Praemien fuer die gesamte Laufzeit des Ve', ablaufgesbindefrist  TIMESTAMP COMMENT 'Termin, zu dem die gesetzliche Mindestbindefrist gemaess § 108 i EStG (AT) endet', antfondsverrentung  DECIMAL(7,3) COMMENT 'Das Attribut legt fest, welcher Teil Fondsvermoegen beim Rentenuebergang verrentet wird.', fondsverrentungabl  TIMESTAMP COMMENT 'Ablauftermin fuer die hybride Verrentungsphase', c_kzlstspektrum  INTEGER COMMENT 'Kennzeichen ob ein Leistungsprofil am VT vorliegt', c_la1_konst  DECIMAL(16,2) COMMENT 'konstante Leistung (Summe aller Bausteine mit konstanter Leistung (c_kzLstSpektrum=0) am V', c_la1_akt  DECIMAL(16,2) COMMENT 'Aktuelle Leistung la1 am Vertragsteil', c_todesfverlauf  INTEGER COMMENT 'Dieses Attribut beinhaltet den Todesfallverlauf des Vertrags.', c_bfrmindestsumme  INTEGER COMMENT 'Vertragliche bfr.Mindestsumme (wenn kein Wert vorhanden oder 0, dann wird der Wert aus PDF', c_la2_akt  DECIMAL(16,2) COMMENT 'Aktuelle Leistung la2 am Vertragsteil', c_la2_konst  DECIMAL(16,2) COMMENT 'konstante Leistung la2 (Summe aller Bausteine mit konstanter Leistung la2 (c_kz_LstSpektru', c_btggrundvers  DECIMAL(16,2) COMMENT 'Beitrag der Grundversicherung fuer die Dynamikberechnung', c_bonusart  INTEGER COMMENT 'Bonusart', c_kzkomptf  INTEGER COMMENT 'Kennzeichen Kompakttarif', c_relsummenrabatt  INTEGER COMMENT 'Vertragsindividueller relativer Summenrabatt fuer HM-alt und Vic-alt', c_buchungsstelle  INTEGER COMMENT 'Buchungsstellenschluessel BUCH_ST_SL', c_gewuntverb  INTEGER COMMENT 'Gewinnunterverband', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Rows in Table vt repraesentieren einen oder mehrere Staende eines; temporal identifiziert durch die Fields lvId und vtId.Fuer welchediese Row gueltig ist, wird durch die Fields bearbId und bearbIdAbg determiniert.Constraint kzrv_ISSET: wenn rvQuote o' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_vtta (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', bearbid  INTEGER COMMENT 'the historical version number (logId)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', tadat  TIMESTAMP COMMENT 'id of VtTa (Termin, zu dem bei einem Vertragsteil zu einem Teilauszahlungstarif eine Teila', taabs  DECIMAL(16,2) COMMENT 'Betrag der vorgesehenen Teilauszahlung zum Termin ""Teilauszahlung-Termin"".', taproz  DECIMAL(12,6) COMMENT 'Angabe der prozentualen Leistung, die bei einem Vertragsteil zu einem Teilauszahlungstarif', partkey  SMALLINT COMMENT 'the partition key', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Spezifische Infos zu Teilauszahlungs-VTs, die nicht im VT enthalten sind.Historie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werdenErgaenzungsteil-Teilauszahlung: In dieser Entitaet werden spezifische Informationen zu Teil' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_wertvb (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', vtid  SMALLINT COMMENT 'id of Vt (generically derived from Vt)', bearbid  INTEGER COMMENT 'the historical version number (logId)', vbid  SMALLINT COMMENT 'id of Vb (generically derived from Vb)', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', anrrkw  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert Rueckkauf', anrbfr  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer die Beitragsfreistellung', gbanrwert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer den Garantiereservebeitrag', tbanrwert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer den Tarifbeitrag', nbanrwert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer den Normbeitrag', sgafonds  DECIMAL(16,2) COMMENT 'Schlussueberschussfonds', tbbtgsum  DECIMAL(16,2) COMMENT 'bisherige Tarifbeitragsumme', zbbtgsum  DECIMAL(16,2) COMMENT 'bisherige Zahlbeitragsumme', pbbtgsum  DECIMAL(16,2) COMMENT 'biherige Provisionsbeitragsumme', akztbfin  DECIMAL(16,2) COMMENT 'finanzierte gezillmerte Abschlusskosten fuer den Tarifbeitrag', aknztbfin  DECIMAL(16,2) COMMENT 'finanzierte nicht-gezillmerte Abschlusskosten fuer den Tarifbeitrag', akztbalt  DECIMAL(16,2) COMMENT 'alte gezillmerte Abschlusskosten fuer den Tarifbeitrag', aknztbalt  DECIMAL(16,2) COMMENT 'alte nicht-gezillmerte Abschlusskosten fuer den Tarifbeitrag', akznbfin  DECIMAL(16,2) COMMENT 'finanzierte gezillmerte Abschlusskosten fuer den Normbeitrag', aknznbfin  DECIMAL(16,2) COMMENT 'finanzierte nicht-gezillmerte Abschlusskosten fuer den Normbeitrag', akznbalt  DECIMAL(16,2) COMMENT 'alte gezillmerte Abschlusskosten fuer den Normbeitrag', aknznbalt  DECIMAL(16,2) COMMENT 'alte nicht-gezillmerte Abschlusskosten fuer den Normbeitrag', lakor  DECIMAL(16,2) COMMENT 'Notwendig bei technischen aenderungen von Rueckgewaehrtarifen', basres  DECIMAL(16,2) COMMENT 'Basisreserve', tarres  DECIMAL(16,2) COMMENT 'Tarifreserve', nrmres  DECIMAL(16,2) COMMENT 'Normreserve', garres  DECIMAL(16,2) COMMENT 'Garantiereserve', inkakor  DECIMAL(16,2) COMMENT 'inkaKor', ratzuakor  DECIMAL(16,2) COMMENT 'ratzuaKor', vstkkkor  DECIMAL(16,2) COMMENT 'vstkkKor', vtsaminkkor  DECIMAL(16,2) COMMENT 'vtsaminkKor', bewprovsum  DECIMAL(16,2) COMMENT 'bisherige Provisions-Bewertungssumme', dauerbeitrmrest  INTEGER COMMENT 'restliche Beitragszahlungsdauer in Monaten', minbtgsumakt  DECIMAL(16,2) COMMENT 'Das Attribut enthaelt die vereinbarte Regelbeitragssumme bis zum Berechnungszeitpunkt. Auf', bildr  DECIMAL(16,2) COMMENT 'BilDR als Basis fuer Stichtagsbewegungen', akkalkvol  DECIMAL(16,2) COMMENT 'Kalkulatorisches Abschlusskostenvolumen bei kontenbasierten Tarifen', akbilvol  DECIMAL(16,2) COMMENT 'Bilanzielles Abschlusskostenvolumen bei kontenbasierten Tarifen', akkalkfin  DECIMAL(16,2) COMMENT 'finanzierte kalkulatorische Abschlusskosten bei kontenbasierten Tarifen', akbilfin  DECIMAL(16,2) COMMENT 'Finanzierte bilanzielle Abschlusskosten bei kontenbasierten Tarifen', deltabildr  DECIMAL(16,2) COMMENT 'deltaBilDR als Basis zur Berechnung des Auffuellbedarfs', ratzuavwkkor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags fuer Verwaltungskosten bei technischen Aenderungen', ratzuazakor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags fuer Zinsausfall bei technischen Aenderungen', ratzuaritodkor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags fuer Risiko Tod bei technischen Aenderungen', ratzuarisonkor  DECIMAL(16,2) COMMENT 'Korrektur des Ratenzuschlags fuer sonstige Risiken bei technischen Aenderungen', akmrkwvol  DECIMAL(16,2) COMMENT 'Abschlusskostenvolumen fuer Garantiereserve als Bezugsgroesse fuer Mindestrueckkaufswerte', akmrkwfin  DECIMAL(16,2) COMMENT 'Finanzierte Abschlusskosten fuer Garantiereserve als Bezugsgroesse fuer Mindestrueckkaufsw', partkey  SMALLINT COMMENT 'the partition key', zillres  DECIMAL(16,2) COMMENT 'gezillmerte Nettoreserve (Zillmerreserve)', nettores  DECIMAL(16,2) COMMENT '(ungezillmerte) Nettoreserve', zillbanrwert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer den Zillmerreservebeitrag', nettobanrwert  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer den Nettoreservebeitrag', aktanspr  DECIMAL(16,2) COMMENT 'aktivierte Ansprueche als Werststand zur Bestimmung des Abschlusskostenverlustes', aktansprkoba  DECIMAL(16,2) COMMENT 'aktivierte Ansprueche aus Zillmerung des kontenbasierten Anteils eines Tarifes als Werstst', fvm  DECIMAL(16,2) COMMENT 'Fondsvermoegen fuer sonstige versicherungstechnische Rueckstellung', drfvm  DECIMAL(16,2) COMMENT 'Fondsvermoegen fuer Deckungsrueckstellung', anrbfrkonten  DECIMAL(16,2) COMMENT 'Anrechenbarer Wert fuer die Beitragsfreistellung aus kontenbasiertem Vermoegen', stoabbfrkonten  DECIMAL(16,2) COMMENT 'Stornoabschlag bei Beitragsfreistellung zur Entnahme aus kontenbasiertem Vermoegen', stoabdkbezrestalt  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer die Berechnung von Stornoabschlag auf DK vor TAE', stoabfvmbezrestalt  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer die Berechnung von Stornoabschlag auf FVM vor TAE', stoabakdbezrestalt  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer die Berechnung von Stornoabschlag auf klassichen Abschlusskosten vor TA', stoabakfbezrestalt  DECIMAL(16,2) COMMENT 'Bezugsgroesse fuer die Berechnung von Stornoabschlag auf kontenbasierten Abschlusskosten v', stoabdkbfr  DECIMAL(16,2) COMMENT 'Stornoabschlag auf DK bei der Beitragsfreistellung', stoabfvmbfr  DECIMAL(16,2) COMMENT 'Stornoabschlag auf Fvm bei der Beitragsfreistellung', steuwertstand  DECIMAL(16,2) COMMENT 'gesamter steuerlicher Wertstand aus KESt-Sicht', auffllerlkl  DECIMAL(16,2) COMMENT 'Auffuellung bei Typ Erleben, klassisch', auffllzinskl  DECIMAL(16,2) COMMENT 'Auffuellung bei Typ Zins, klassisch', auffllbukl  DECIMAL(16,2) COMMENT 'Auffuellung bei Typ BU, klassisch', auffllerldrfvm  DECIMAL(16,2) COMMENT 'Auffuellung bei Typ Erleben, Fondsvermoegen', auffllzinsdrfvm  DECIMAL(16,2) COMMENT 'Auffuellung bei Typ Zins, Fondsvermoegen', auffllzinsva  DECIMAL(16,2) COMMENT 'Auffuellung bei Typ Zins, Verzinsliche Ansammlung', auffllraa  DECIMAL(16,2) COMMENT 'Reduktion aktivierbarer Ansprueche durch Auffuellung', bezrefires  DECIMAL(16,2) COMMENT 'Reserve zur konstruktiven Neuberechnung der Leistung aus Kontostand BEZREFI_LA1', auffllgdr  DECIMAL(16,2) COMMENT 'Differenz zwischen Reserve incl. Zusatzreserve (Bilanzdeckungsrueckstellung nach den neuen', auffllgaa  DECIMAL(16,2) COMMENT 'Differenz zwischen aktivierbaren Anspruechen nach den alten und den neuen Rechnungsgrundla', akztbfinbfr  DECIMAL(16,2) COMMENT 'finanzierte gezillmerte Abschlusskosten fuer den Tarifbeitrag bei Beitragsfreistellung', vwkres  DECIMAL(16,2) COMMENT 'Verwaltungskostenreserve', minantfonds  DECIMAL(16,2) COMMENT 'Mindestanteil zu Ueberschuessen aus Bewertungsreserven', auffllbilrz  DECIMAL(16,2) COMMENT 'Auffuellung fuer Nachreservierungstyp BILRZ', auffllbilrzkb  DECIMAL(16,2) COMMENT 'Auffuellung fuer Nachreservierungstyp BILRZ kontenbasiert', stoabrkwdk  DECIMAL(16,2) COMMENT 'Stornoabschlag auf Deckungskapital bei Rueckkauf im Rahmen einer Beitragsfreistellung', stoabrkwkonten  DECIMAL(16,2) COMMENT 'Stornoabschlag auf kontenbasiertes Vermoegen bei Rueckkauf im Rahmen einer Beitragsfreiste', auffllzinsvaren  DECIMAL(15,2) COMMENT 'Auffuellung bei Typ Zins, Verzinsliche Ansammlung, aus Rentenbezugszeit herruehrend', auffllerlva  DECIMAL(15,2) COMMENT 'Auffuellung bei Typ Erleben, Verzinsliche Ansammlung', auffllerlvaren  DECIMAL(15,2) COMMENT 'Auffuellung bei Typ Erleben, Verzinsliche Ansammlung, aus Rentenbezugszeit herruehrend', akzkalkbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der klassischen gezillmerten kalkulatorischen AK', aknzkalkbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der klassischen nicht gezillmerten kalkulatorischen AK', akzbilbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der klassischen gezillmerten bilanziellen AK', aknzbilbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der klassischen nicht gezillmerten bilanziellen AK', akmrkwbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil der AK fuer Mindestrueckkaufswert', akkalkvolbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil des kalkulatorischen Abschlusskostenvolumens bei kontenbasierten Tarifen', akbilvolbisher  DECIMAL(15,2) COMMENT 'Bisheriger Anteil des bilanziellen Abschlusskostenvolumens bei kontenbasierten Tarifen', akkalkfondsfin  DECIMAL(15,2) COMMENT 'Finanzierte fondsspezifische kalkulatorische Abschlusskosten, falls Abschlusskosten auf ei', akkalkfondsvol  DECIMAL(15,2) COMMENT 'Fondsspezifisches kalkulatorisches Abschlusskostenvolumen bei kontenbasierten Tarifen, fal', steuzuschlaggezsum  DECIMAL(15,2) COMMENT 'Summe der bisher gezahlten Steuer auf Praemien des Vertragsbausteins', auffllraaerl  DECIMAL(15,2) COMMENT 'Reduktion aktivierbarer Ansprueche durch Auffuellung bei Nachreservierung Erleben', auffllraazins  DECIMAL(15,2) COMMENT 'Reduktion aktivierbarer Ansprueche durch Auffuellung bei Nachreservierung Zins (Zinszusatz', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Wertstandsgroessen auf VB - EbeneWertstand-VB: Wertstandsgroessen auf VB - EbeneHistorie-streng: Attribute, die zur strengen Historienfuehrung am Vertrag benoetigt werden' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_zahlempfdat (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', zahlempfid  INTEGER COMMENT 'id of ZahlEmpfDat (Eindeutige vertragsspezifische Identifizierung eines Zahlungsempfaenger', antprozent  DECIMAL(16,2) COMMENT 'Anteil des Auszahlunsgbetrags in Prozent, den der entsprechende Zahlungsempfaenger erhaelt', bankname  STRING COMMENT 'bankname', bic_swift  STRING COMMENT 'Bank Identifier Code oder SWIFT (Society for Worldwide Interbank Financial Telecommunicati', blz  STRING COMMENT 'Die BLZ kennzeichnet eine Bank oder auch einzelne Filialen einer Bank. Sie wird z.B. bei U', exkwegid  INTEGER COMMENT 'Vertraglich vereinbarter Zahlweg der Leistungen fuer einen Vertragsteil.', freista  DECIMAL(16,2) COMMENT 'Pro Zahlungsempfaenger von der Steuer freigestellter Betrag', iban  STRING COMMENT 'Fuer Zahlungen ins Ausland muss die IBAN-Nummer angegeben werden koennen.', inhalt  STRING COMMENT 'Dieses Attribut beinhaltet einen Freitext variabler Laenge.', kest_abzug  INTEGER COMMENT 'Kennzeichen, ob bei diesem Zahlungsempfaenger die KESt abzuziehen ist. (Ist dann relevant,', kistsatz  DECIMAL(16,2) COMMENT 'Kirchensteuersatz, z.B. als Schluesselwerttabelle (aktuell gueltige Saetze: 0,0%; 8,0%; 9,', kontonr  STRING COMMENT 'kontonr', kzauszahlung  INTEGER COMMENT 'Kennzeichen Auszahlung', landid  INTEGER COMMENT 'Name des jeweiligen Landes.', bearbid  INTEGER COMMENT 'the historical version number (logId)', name  STRING COMMENT 'Nachname einer Person.', partnerid  INTEGER COMMENT 'Das Field partnerId identifiziert den Leistungsempfaenger, zu dem diese Row eine Aussage m', plz  STRING COMMENT 'Postleitzahl der Strassenadresse', relgem  INTEGER COMMENT 'Erhebungsberechtigte Religionsgemeinschaft (Schluesselwerttabelle)', strasse  STRING COMMENT 'Bezeichnung fuer eine Strasse, einen Platz, einen Weg etc. incl. der Hausnummer.', vorname  STRING COMMENT 'Vorname des Partners, falls er eine natuerliche Person ist.', wohnort  STRING COMMENT 'Wohnort der Person', planschrittid  INTEGER COMMENT 'Arbeitsschritt, fuer den die Zahlungsempfaengerdaten planweise erfasst worden sind Hinweis', betrag  DECIMAL(16,2) COMMENT 'Auszahlunsgbetrag den der entsprechende Zahlungsempfaenger erhaelt.', kzrestbetrag  INTEGER COMMENT 'Kennzeichen, dass dieser Zahlungsempfaenger den Restbetrag erhaelt.( Ist dann relevant, we', zahltermin  TIMESTAMP COMMENT 'Wirksamkeitstermin einer Auszahlung', bearbidabg  INTEGER COMMENT 'the historical version that invalidates this version (nextLogId)', partneridsteupfl  INTEGER COMMENT 'Identifikation der Person, die gegenueber dem Finanzamt steuerpflichtig ist', partneridehegatte  INTEGER COMMENT 'Identifikation des Ehegatten der Person, die gegenueber dem Finanzamt steuerpflichtig ist;', steueridentnummer  STRING COMMENT 'Steueridentifikationsnummer des Steuerpflichtigen', steueridentnreheg  STRING COMMENT 'Steueridentifikationsnummer der Person des Ehegatten des Steuerpflichtigen', namesteupfl  STRING COMMENT 'Nachname des Steuerpflichtigen', vornamesteupfl  STRING COMMENT 'Vorname des Steuerpflichtigen', nameehegatte  STRING COMMENT 'Nachname des Ehegatten des Steuerpflichtigen', vornameehegatte  STRING COMMENT 'Vorname des Ehegatten des Steuerpflichtigen', freistabeanspr  DECIMAL(16,2) COMMENT 'Fuer den Steuerabzug in der aktuellen Abrechnung relevanter Kapitalertrag (ohne Abzuege we', nichtveranlbeschein  INTEGER COMMENT 'Kennzeichen, ob eine Nichtveranlagungsbescheinigung vorliegt', quellekistsatz  INTEGER COMMENT 'Beleg, aus welcher Quelle der Kirchensteuersatz in die Abrechnung uebernommen wurde', bearbidrefabr  INTEGER COMMENT 'BearbId der Abrechnung, zu der dieser Satz abgerechnet wurde. Wird geschrieben von der aut', kontoid  INTEGER COMMENT 'ID der zugeordneten Bankverbindung zum Partner', kestantanre  DECIMAL(12,8) COMMENT 'Anteil der in kest enthaltenen, anrechenbaren Kapitalertragsteuer. Sie entfaellt auf die a', steuland  INTEGER COMMENT 'Steuerlicher Wohnsitz des Zahlungsemfaengers', kzsteuervorg  INTEGER COMMENT 'Kennzeichen fuer die Besteuerung der Auszahlung (Kennzeichnet welche Art von Besteuerung a', kzsteuerwiderspruch  INTEGER COMMENT 'Kennzeichen ob der Zahlungsempfaenger Widerspruch gegen die Verrechnungssteuermeldung eing', anschriftid  INTEGER COMMENT 'ID der zugeordneten Anschrift zum Partner', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Fuer die Speicherung der Zahlungsempfaengerdaten wird eine neue juristische Tabelle ""Zahlungsempfaengerdaten"" (kurz: zahlEmpfDat) benoetigt. Die Ablage der Daten in zwei Tabellen ist durch die erforderliche Trennung der Zahlungsempfaengerdaten von den ' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
CREATE TABLE IF NOT EXISTS  raw_zone.pas_zahlempf (lvid  STRING COMMENT 'id of Lv (Das Field lvId identifiziert denVertrag, zu dem diese Row gehoert.)', zahlempfid  INTEGER COMMENT 'id of ZahlEmpf (Eindeutige vertragsspezifische Identifizierung eines Zahlungsempfaengers)', antbetrag  DECIMAL(16,2) COMMENT 'Absolutbetrag, den der entsprechende Zahlungsempfaenger erhaelt.', partnerid  INTEGER COMMENT 'Das Field partnerId identifiziert denLeistungsempfaenger, zu dem diese Row eine Aussage ma', bearbid  INTEGER COMMENT 'id of ZahlEmpf (Das Field bearbId identifiziert zusammen mit den Felder lvId und zahlempfI', name  STRING COMMENT 'Nachname einer Person.', vorname  STRING COMMENT 'Vorname des Partners, falls er eine natuerliche Person ist.', strasse  STRING COMMENT 'Bezeichnung fuer eine Strasse, einen Platz, einen Weg etc. incl. der Hausnummer.', landid  INTEGER COMMENT 'Name des jeweiligen Landes.', plz  STRING COMMENT 'Postleitzahl der Strassenadresse', wohnort  STRING COMMENT 'Wohnort der Person', exkwegid  INTEGER COMMENT 'Vertraglich vereinbarter Zahlweg der Leistungen fuer einen Vertragsteil.', blz  STRING COMMENT 'Die BLZ kennzeichnet eine Bank oder auch einzelne Filialen einer Bank. Sie wird z.B. bei u', kontonr  STRING COMMENT 'kontonr', inhalt  STRING COMMENT 'Dieses Attribut beinhaltet einen Freitext variabler Laenge.', zahltermin  TIMESTAMP COMMENT 'Wirksamkeitstermin einer Auszahlung.', auszbetr  DECIMAL(16,2) COMMENT 'Betrag, der bei einem Zahlungsvorgang ausgezahlt wurde', kest  DECIMAL(16,2) COMMENT 'KESt, die bei einem Zahlungsvorgang abgefuehrt wurde', solzu  DECIMAL(16,2) COMMENT 'Solidaritaetszuschlag, der bei einem Zahlungsvorgang abgefuehrt wurde', freista  DECIMAL(16,2) COMMENT 'Pro Zahlungsempfaenger von der Steuer freigestellter Betrag', opausziop  DECIMAL(16,2) COMMENT 'Absolutbetrag der Position offene Posten aus dem Zentralinkasso', hypothdarl  DECIMAL(16,2) COMMENT 'Absolutbetrag eines Hypothekendarlehens', sparzulage  DECIMAL(16,2) COMMENT 'Absolutbetrag einer Sparzulage', anderebetr  DECIMAL(16,2) COMMENT 'Absolutbetrag sonstiger Betraege (z.B. fuer einen Zahlungsempfaenger)', beitrdepot  DECIMAL(16,2) COMMENT 'Betrag aus dem Beitragsdepot (gesamter Wert davon oder Teilbetrag)', ueberzrent  DECIMAL(16,2) COMMENT 'ueberzahlte Renten', vtid  SMALLINT COMMENT 'Das Field vtId identifiziert zusammen mit dem Field lvId denVertragsteil, zu dem diese Row', bankname  STRING COMMENT 'bankname', rueckbtgzfa  DECIMAL(16,2) COMMENT 'Im Field rueckBtgZfA steht der Betrag, der als Saldo in dem dazugehoerigen ""rueckzfa-Kont', kzauszahlung  INTEGER COMMENT 'Kennzeichen Auszahlung', bearbidsto  INTEGER COMMENT 'Wird eine Bearbeitung storniert, wird hier KENN-Bearbeitungsnachweis des stornierenden Vor', stpflke  DECIMAL(16,2) COMMENT 'steuerpflichtiger Kapitalertrag', kistsatz  DECIMAL(16,2) COMMENT 'Kirchensteuersatz, z.B. als Schluesselwerttabelle (aktuell gueltige Saetze: 0,0%; 8,0%; 9,', kist  DECIMAL(16,2) COMMENT 'Kirchensteuer in Euro', relgem  INTEGER COMMENT 'Erhebungsberechtigte Religionsgemeinschaft (Schluesselwerttabelle)', iban  STRING COMMENT 'Fuer Zahlungen ins Ausland muss die IBAN-Nummer angegeben werden koennen.', bic_swift  STRING COMMENT 'Bank Identifier Code oder SWIFT (Society for Worldwide Interbank Financial Telecommunicati', partneridsteupfl  INTEGER COMMENT 'Identifikation der Person, die gegenueber dem Finanzamt steuerpflichtig ist', partneridehegatte  INTEGER COMMENT 'Identifikation des Ehegatten der Person, die gegenueber dem Finanzamt steuerpflichtig ist;', steueridentnummer  STRING COMMENT 'Steueridentifikationsnummer des Steuerpflichtigen', steueridentnreheg  STRING COMMENT 'Steueridentifikationsnummer der Person des Ehegatten des Steuerpflichtigen', namesteupfl  STRING COMMENT 'Nachname des Steuerpflichtigen', vornamesteupfl  STRING COMMENT 'Vorname des Steuerpflichtigen', nameehegatte  STRING COMMENT 'Nachname des Ehegatten des Steuerpflichtigen', vornameehegatte  STRING COMMENT 'Vorname des Ehegatten des Steuerpflichtigen', freistabeanspr  DECIMAL(16,2) COMMENT 'Fuer den Steuerabzug in der aktuellen Abrechnung relevater Kapitalertrag (ohne Abzuege weg', nichtveranlbeschein  INTEGER COMMENT 'Kennzeichen, ob eine Nichtveranlagungsbescheinigung vorliegt', quellekistsatz  INTEGER COMMENT 'Beleg, aus welcher Quelle der Kirchensteuersatz in die Abrechnung uebernommen wurde', quellensteuer  DECIMAL(15,2) COMMENT 'Errechneter Quellensteuerbetrag', kontoid  INTEGER COMMENT 'ID der zugeordneten Bankverbindung zum Partner', kestantanre  DECIMAL(12,8) COMMENT 'Anteil der in kest enthaltenen, anrechenbaren Kapitalertragsteuer. Sie entfaellt auf die a', quellensteuersatz  DECIMAL(15,2) COMMENT 'Verwendeter Quellensteuersatz', steuland  INTEGER COMMENT 'Steuerlicher Wohnsitz des Zahlungsemfaengers', verrechnungssteuer  DECIMAL(15,2) COMMENT 'Hoehe der dieser Auszahlung zugeordneten Verrechnungssteuer', kzsteuervorg  INTEGER COMMENT 'Kennzeichen fuer die Besteuerung der Auszahlung (Kennzeichnet welche Art von Besteuerung a', kzsteuerwiderspruch  INTEGER COMMENT 'Kennzeichen ob der Zahlungsempfaenger Widerspruch gegen die Verrechnungssteuermeldung eing', anschriftid  INTEGER COMMENT 'ID der zugeordneten Anschrift zum Partner', insert_tst  TIMESTAMP COMMENT 'Timestamp for creation of record.', source_system  INTEGER COMMENT 'Name of source system.')  COMMENT 'Die Zahlungsempfaenger koennen, muessen jedoch nicht als Partner gefuehrt werden.Zahlungsempfaenger: Die Zahlungsempfaenger koennen, muessen jedoch nicht als Partner gefuehrt werden.' PARTITIONED BY (process_id  INTEGER COMMENT 'Unique id for ETL-Processes.')  STORED AS parquet TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY');
